var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddDialog.html",[0,0.24,1,1.014]],["body/components/AddDialog.html",[0,0.352,1,1.376,2,1.182,3,0.164,4,0.106,5,0.81,6,0.81,7,0.81,8,0.091,9,3.556,10,3.307,11,1.16,12,1.62,13,1.713,14,0.81,15,2.156,16,1.927,17,1.85,18,1.534,19,2.182,20,0.641,21,0.852,22,3.974,23,4.375,24,3.679,25,3.274,26,3.974,27,0.95,28,1.801,29,3.332,30,1.849,31,0.93,32,1.961,33,1.676,34,2.732,35,1.6,36,3.539,37,0.651,38,0.022,39,1.283,40,1.006,41,0.584,42,2.296,43,2.43,44,2.448,45,2.227,46,1.788,47,2.482,48,0.852,49,2.296,50,1.321,51,0.908,52,0.857,53,2.568,54,1.954,55,2.296,56,1.261,57,2.296,58,2.296,59,2.296,60,0.303,61,2.059,62,0.908,63,0.171,64,1.676,65,0.908,66,1.914,67,1.022,68,1.914,69,1.022,70,1.914,71,1.022,72,1.676,73,1.321,74,2.182,75,0.494,76,2.696,77,0.908,78,0.81,79,1.16,80,1.16,81,1.577,82,1.105,83,0.767,84,1.242,85,0.726,86,1.242,87,0.2,88,0.2,89,0.95,90,1.242,91,3.802,92,4.091,93,1.676,94,1.242,95,1.242,96,2.416,97,1.242,98,1.483,99,1.242,100,1.242,101,1.242,102,1.022,103,1.242,104,1.242,105,1.242,106,1.242,107,1.16,108,1.676,109,1.741,110,1.321,111,1.783,112,1.741,113,1.524,114,1.689,115,1.336,116,1.577,117,0.651,118,1.577,119,1.242,120,1.242,121,1.242,122,1.242,123,1.242,124,1.242,125,1.336,126,2.683,127,1.336,128,1.242,129,1.168,130,1.336,131,1.336,132,1.336,133,1.336,134,1.336,135,2.683,136,2.059,137,2.683,138,1.336,139,1.676,140,1.741,141,1.336,142,1.741,143,2.736,144,2.512,145,1.741,146,1.914,147,1.242,148,1.087,149,1.242,150,1.242,151,1.336,152,1.16,153,1.242,154,1.676,155,2.835,156,2.059,157,2.059,158,1.336,159,1.336,160,1.741,161,1.242,162,1.741,163,2.182,164,1.741,165,1.788,166,1.788,167,1.788,168,1.741,169,1.741,170,1.741,171,1.741,172,1.741,173,3.679,174,0.81,175,2.683,176,1.741,177,1.741,178,1.741,179,2.683,180,1.741,181,2.683,182,1.741,183,1.577,184,1.741,185,1.741,186,1.741,187,1.741,188,1.577,189,1.75,190,1.003,191,1.16,192,1.741,193,1.741,194,2.227,195,1.445,196,2.683,197,1.954,198,1.741,199,1.741,200,2.995,201,3.974,202,2.683,203,1.741,204,1.741,205,1.741,206,1.741,207,3.974,208,4.635,209,4.635,210,1.741,211,1.741,212,1.741,213,2.43,214,0.857,215,2.683,216,2.512,217,1.741,218,1.087,219,1.577,220,1.741,221,1.741,222,1.741,223,1.16,224,1.741,225,1.741,226,1.336,227,1.16,228,1.741,229,1.741,230,1.741,231,3.539,232,3.023,233,3.539,234,0.81,235,1.249,236,1.119,237,0.81,238,1.62,239,0.81,240,1.713,241,0.651,242,1.6,243,0.81,244,0.651,245,0.767,246,0.651,247,1.098,248,0.616,249,0.687,250,0.81,251,0.584,252,0.81,253,1.524,254,0.584,255,0.81,256,0.616,257,0.553,258,0.391,259,0.81,260,0.616,261,0.81,262,0.616,263,0.523,264,0.651,265,0.81,266,0.81,267,0.81,268,0.01,269,0.01]],["title/injectables/AlertService.html",[270,1.414,271,1.263]],["body/injectables/AlertService.html",[3,0.219,4,0.219,8,0.188,20,0.857,27,1.575,28,1.808,31,1.019,35,1.575,37,1.663,38,0.022,39,1.263,40,1.127,41,1.492,48,1.139,56,1.59,60,0.272,63,0.188,74,3.528,75,1.019,87,0.219,88,0.219,114,1.663,129,1.139,146,3.901,147,2.561,148,3.307,149,3.869,153,3.869,161,2.561,197,2.251,268,0.017,269,0.017,270,2.319,271,2.071,272,2.979,273,4.044,274,5.867,275,4.733,276,4.733,277,5.867,278,4.733,279,5.867,280,5.012,281,5.867,282,3.693,283,5.012,284,4.449,285,5.867,286,1.984,287,2.561,288,2.392,289,3.59]],["title/components/AppComponent.html",[0,0.24,241,1.014]],["body/components/AppComponent.html",[0,0.384,1,1.068,2,1.691,3,0.175,4,0.175,5,1.33,6,1.33,7,1.33,8,0.15,14,1.33,15,2.289,16,1.258,17,1.33,18,1.6,20,0.682,21,1.218,27,1.359,31,0.811,34,1.784,35,1.832,37,1.435,38,0.022,39,1.316,40,1.225,41,1.287,44,1.33,48,1.471,50,1.89,56,1.452,60,0.296,63,0.15,75,0.811,81,2.587,82,1.302,83,2.278,85,1.6,87,0.175,88,0.175,89,1.011,189,1.909,190,1.068,227,2.558,234,1.33,235,1.787,236,1.6,237,1.33,238,2.042,239,1.33,240,2.158,241,1.733,242,1.875,243,1.33,244,1.068,245,1.258,246,1.068,247,1.622,248,1.011,249,1.128,250,1.33,251,0.958,252,1.33,253,2.018,254,0.958,255,1.33,256,1.011,257,0.907,258,1.087,259,1.33,260,1.011,261,1.33,262,1.011,263,1.302,264,1.068,265,1.33,266,1.33,267,1.33,268,0.015,269,0.015,288,2.558,289,2.856,290,1.784,291,3.218,292,5.717,293,5.062,294,4.134,295,5.717,296,5.717,297,6.113,298,5.062,299,6.113,300,4.636,301,2.856,302,5.24,303,5.062,304,3.767,305,5.062,306,3.767,307,3.599,308,3.767,309,3.218,310,3.767,311,3.767,312,3.767,313,1.33,314,3.218,315,3.218,316,3.767,317,3.767,318,3.767,319,3.767,320,2.253,321,5.062,322,5.062,323,2.739,324,4.324,325,4.324,326,3.476,327,2.739,328,3.186,329,4.324,330,2.945,331,5.062,332,2.001,333,3.218,334,3.767,335,3.767]],["title/modules/AppModule.html",[336,1.014,337,2.457]],["body/modules/AppModule.html",[3,0.229,4,0.229,8,0.197,38,0.022,60,0.331,63,0.197,75,1.066,87,0.229,88,0.229,241,2.09,242,1.33,268,0.017,269,0.017,313,1.748,332,1.957,337,4.988,338,1.192,339,2.384,340,4.23,341,4.23,342,4.23,343,4.23,344,4.443,345,2.684,346,2.075,347,4.951,348,2.684,349,1.62,350,6.031,351,3.755,352,1.62,353,6.031,354,5.153,355,3.755,356,6.031,357,2.204,358,6.031,359,4.951,360,2.204,361,6.031,362,4.951,363,4.951,364,4.951,365,4.951,366,4.951]],["title/modules/AppRoutingModule.html",[336,1.014,344,2.252]],["body/modules/AppRoutingModule.html",[3,0.202,4,0.202,8,0.173,10,2.363,38,0.022,60,0.285,63,0.173,82,0.995,83,2.052,87,0.202,88,0.202,129,1.051,247,1.111,249,1.308,258,0.745,263,0.995,268,0.016,269,0.016,313,1.542,323,3.325,326,3.83,327,2.363,328,2.75,338,1.051,344,3.511,349,1.173,352,1.498,367,4.368,368,2.069,369,5.578,370,2.642,371,2.429,372,4.775,373,4.368,374,3.416,375,7.109,376,4.368,377,7.109,378,4.368,379,5.844,380,5.578,381,5.578,382,4.23,383,5.578,384,5.578,385,2.542,386,4.368,387,2.75,388,4.368,389,4.368,390,4.368,391,6.145,392,4.368,393,4.368,394,2.363,395,4.368,396,4.368,397,4.368,398,4.368,399,2.363,400,4.368,401,4.368,402,4.368,403,2.75,404,4.368,405,4.368,406,4.368,407,2.069]],["title/guards/AuthGuard.html",[372,2.457,408,2.713]],["body/guards/AuthGuard.html",[3,0.221,4,0.221,8,0.189,12,1.59,20,0.862,27,1.581,31,1.268,35,1.581,37,1.67,38,0.022,39,1.268,40,1.131,41,1.497,48,1.146,60,0.318,63,0.189,87,0.221,88,0.221,111,1.425,117,1.35,150,2.576,263,1.341,268,0.017,269,0.017,270,2.328,287,2.576,288,2.406,301,3.611,302,5.302,309,5.03,313,1.681,320,2.119,330,2.77,372,4.043,379,5.863,409,4.761,410,4.068,411,4.761,412,4.761,413,6.679,414,6.393,415,6.679,416,4.761,417,5.888,418,4.024,419,4.465,420,6.393,421,2.77,422,4.068,423,5.03,424,4.068,425,4.761,426,4.068,427,4.761,428,4.761,429,4.761,430,4.761]],["title/injectables/AuthService.html",[270,1.414,294,2.252]],["body/injectables/AuthService.html",[3,0.162,4,0.162,8,0.139,20,0.632,27,1.29,28,1.987,31,1.035,34,3.04,35,1.766,37,1.679,38,0.022,39,1.275,40,1.137,41,1.506,48,1.545,50,1.794,53,1.553,56,1.646,60,0.305,63,0.139,87,0.162,88,0.162,108,2.603,111,1.439,114,1.865,117,0.989,129,1.613,174,1.232,188,2.396,258,1.121,263,1.462,268,0.014,269,0.014,270,1.9,271,2.322,272,2.197,287,1.888,288,1.763,294,3.025,300,5.157,320,1.553,385,3.198,418,2.197,419,3.644,421,2.03,422,4.105,423,2.981,431,2.646,432,5.922,433,4.806,434,4.806,435,4.806,436,2.981,437,3.49,438,3.49,439,4.806,440,3.49,441,5.306,442,4.806,443,3.49,444,4.806,445,3.49,446,3.025,447,3.49,448,3.49,449,3.49,450,3.49,451,3.49,452,3.644,453,2.981,454,2.981,455,2.981,456,3.3,457,3.49,458,3.49,459,2.03,460,3.644,461,3.49,462,4.806,463,2.646,464,3.49,465,3.49,466,4.806,467,3.49,468,3.49,469,3.49,470,2.981,471,3.49,472,3.49,473,3.49,474,4.806,475,4.696,476,4.806,477,3.49,478,4.696,479,3.49,480,3.49,481,3.49,482,4.105,483,4.105,484,3.49,485,3.49,486,3.49,487,4.806,488,4.806,489,2.482,490,4.806,491,4.806,492,2.341,493,2.482,494,2.482,495,2.482,496,4.806,497,3.49,498,2.646,499,2.981,500,3.49,501,2.014,502,4.806,503,3.644,504,4.105,505,3.49]],["title/components/EditDetailsDialog.html",[0,0.24,244,1.014]],["body/components/EditDetailsDialog.html",[0,0.355,1,0.768,2,1.339,3,0.126,4,0.126,5,0.956,6,0.956,7,0.956,8,0.108,12,1.594,13,1.862,14,0.956,15,2.2,16,0.904,17,2.154,18,1.509,19,2.026,20,0.49,21,0.965,27,1.076,28,1.496,30,1.881,31,0.863,33,1.683,35,1.795,37,0.768,38,0.022,39,1.402,40,1.229,41,0.689,45,3.004,48,1.149,50,1.782,51,2.413,52,2.279,53,1.205,54,1.415,56,1.522,60,0.283,62,1.585,63,0.108,64,2.261,65,1.071,72,1.899,73,1.011,75,0.583,78,0.956,79,1.368,80,1.368,82,0.617,85,0.856,87,0.186,88,0.186,89,0.727,93,1.283,108,1.283,110,2.682,111,1.766,113,2.36,114,1.137,117,0.768,129,0.652,139,1.283,155,2.169,163,1.368,165,1.368,166,1.368,167,1.368,174,0.956,189,2.256,190,0.768,191,1.368,194,3.004,195,1.705,197,0.956,214,1.782,218,1.283,232,3.425,234,0.956,235,1.415,236,1.267,237,0.956,238,1.762,239,0.956,240,1.862,241,0.768,242,1.719,243,0.956,244,1.496,245,2.038,246,0.768,247,1.214,248,0.727,249,0.811,250,0.956,251,0.689,252,0.956,253,1.685,254,0.689,255,0.956,256,0.727,257,0.652,258,1.204,259,0.956,260,1.076,261,0.956,262,0.727,263,0.617,264,0.768,265,0.956,266,0.956,267,0.956,268,0.011,269,0.011,271,2.259,282,4.028,286,2.36,307,1.705,328,1.705,489,1.68,492,2.086,493,1.68,494,1.68,495,1.68,501,1.68,506,2.054,507,4.628,508,4.078,509,4.078,510,4.812,511,4.001,512,4.812,513,1.86,514,4.009,515,2.708,516,2.708,517,2.523,518,3.425,519,2.708,520,4.078,521,4.078,522,2.708,523,1.368,524,1.86,525,2.708,526,4.078,527,2.708,528,4.078,529,2.708,530,4.078,531,2.708,532,4.507,533,2.708,534,4.507,535,2.708,536,3.425,537,1.465,538,2.313,539,1.205,540,2.313,541,2.313,542,2.313,543,3.425,544,3.004,545,2.313,546,1.368,547,1.86,548,2.313,549,2.313,550,2.313,551,2.313,552,1.368,553,1.86,554,1.86,555,1.576,556,2.313,557,2.313,558,3.425,559,1.68,560,1.68,561,1.135,562,1.705,563,2.313,564,2.313,565,4.001,566,3.623,567,2.789,568,2.313,569,2.753,570,2.313,571,3.425,572,2.313,573,3.425,574,3.425,575,1.576,576,3.425,577,1.705,578,3.425,579,2.054,580,3.425,581,2.054,582,3.425,583,2.313,584,3.425,585,2.753,586,1.784,587,3.04]],["title/components/EditDialog.html",[0,0.24,190,1.014]],["body/components/EditDialog.html",[0,0.337,1,0.931,2,1.097,3,0.188,4,0.097,5,0.736,6,0.736,7,0.736,8,0.083,9,3.717,10,3.456,11,1.054,12,1.538,13,1.626,14,0.736,15,2.121,16,1.673,17,1.768,18,1.456,19,2.052,20,0.594,21,0.79,22,1.581,23,1.581,24,3.493,25,1.581,26,1.581,27,0.882,28,1.756,29,2.788,30,1.777,31,0.874,33,1.663,34,1.923,35,1.691,37,1.579,38,0.022,39,1.393,40,1.189,41,1.416,43,1.432,44,2.491,45,1.313,46,1.054,47,2.373,48,1.34,50,2.079,51,1.605,52,1.516,53,2.368,54,1.878,56,1.141,60,0.296,61,1.91,62,0.824,63,0.161,64,1.555,65,0.824,66,1.776,67,0.928,68,1.776,69,0.928,70,1.776,71,0.928,72,1.555,73,1.226,74,2.052,75,0.449,76,2.852,77,0.824,78,0.736,79,1.054,80,1.054,81,1.432,82,1.049,83,0.696,84,1.128,85,0.659,86,1.128,87,0.188,88,0.188,89,0.882,90,1.128,91,3.961,92,4.533,93,1.555,94,1.128,95,1.128,96,2.201,97,1.128,98,1.376,99,1.128,100,1.128,101,1.128,102,0.928,103,1.128,104,1.128,105,1.128,106,1.128,107,1.054,108,1.555,109,1.581,110,1.72,111,1.885,112,1.581,113,1.878,114,1.635,115,1.213,116,1.432,117,0.591,118,1.432,119,1.128,120,1.128,121,1.128,122,1.128,123,1.128,124,1.128,125,1.213,126,2.49,127,1.213,128,1.128,129,1.109,130,1.213,131,1.213,132,1.213,133,1.213,134,1.213,135,2.49,136,1.91,137,3.079,138,1.213,139,1.555,140,1.581,141,1.213,142,1.581,143,2.677,144,2.362,145,1.581,146,1.776,147,1.128,148,0.988,149,1.128,150,1.128,151,1.213,152,1.054,153,2.197,154,1.555,155,2.492,156,1.91,157,1.91,158,1.213,159,1.213,160,1.581,161,1.128,162,1.581,163,2.052,164,1.581,165,1.659,166,1.659,167,1.659,168,1.581,169,1.581,170,1.581,171,1.581,172,1.581,173,3.493,174,0.736,175,2.49,176,1.581,177,1.581,178,1.581,179,2.49,180,1.581,181,2.49,182,1.581,183,1.432,184,1.581,185,1.581,186,1.581,187,1.581,188,1.432,189,1.859,190,1.306,191,1.054,192,3.079,193,3.079,194,2.556,195,1.313,196,3.493,197,1.878,198,2.49,199,2.49,200,2.878,201,3.799,202,3.493,203,2.49,204,2.49,205,2.49,206,2.49,207,3.799,208,4.5,209,4.5,210,2.49,211,2.49,212,2.49,213,2.254,214,1.226,215,3.493,216,3.096,217,2.49,218,1.555,219,2.254,220,2.49,221,1.581,222,1.581,223,1.054,224,1.581,225,2.49,226,1.91,227,1.659,228,2.49,229,2.49,230,2.49,234,0.736,235,1.159,236,1.038,237,0.736,238,1.538,239,0.736,240,1.626,241,0.591,242,1.549,243,0.736,244,0.591,245,0.696,246,0.591,247,1.032,248,0.56,249,0.624,250,0.736,251,0.53,252,0.736,253,1.433,254,0.53,255,0.736,256,0.56,257,0.502,258,0.356,259,0.736,260,0.56,261,0.736,262,0.56,263,0.475,264,0.591,265,0.736,266,0.736,267,0.736,268,0.009,269,0.009,286,2.23,511,2.49,513,1.432,523,1.054,524,1.432,587,2.49,588,3.283,589,3.283,590,2.254,591,3.283,592,1.781,593,2.085,594,2.085,595,2.085,596,2.085,597,2.085,598,2.085,599,2.085,600,2.085,601,2.085,602,2.085,603,2.085,604,3.283,605,2.805,606,3.283,607,3.283,608,3.283,609,2.49,610,2.805]],["title/components/EditOrderDialog.html",[0,0.24,246,1.014]],["body/components/EditOrderDialog.html",[0,0.349,1,0.638,2,1.163,3,0.104,4,0.104,5,0.794,6,0.794,7,0.794,8,0.089,11,1.137,12,1.603,13,1.694,14,0.794,15,2.149,16,0.751,17,2.022,18,1.517,19,2.154,20,0.631,21,0.838,27,0.935,28,1.557,30,1.834,31,0.75,33,1.589,35,1.589,37,1.209,38,0.022,39,1.118,40,0.922,41,1.084,44,1.23,46,2.425,47,2.459,48,1.322,50,0.84,51,1.685,52,2.138,53,1.55,54,1.938,56,1.383,60,0.308,61,2.027,62,0.889,63,0.138,64,1.65,65,0.889,66,1.884,67,1.001,68,1.884,69,1.001,70,2.306,71,1.001,72,1.65,73,1.301,74,2.154,75,0.484,76,0.889,77,0.889,78,0.794,79,1.137,80,1.137,82,0.512,83,0.751,84,1.217,85,0.711,86,1.217,87,0.198,88,0.198,89,0.604,90,1.217,93,1.65,94,1.217,95,1.217,96,0.889,97,1.217,98,1.46,99,1.217,100,1.217,101,1.217,102,1.001,103,1.217,104,1.217,105,1.217,106,1.217,107,1.137,108,1.065,110,1.939,111,1.554,113,2.191,114,1.209,117,0.638,119,1.217,120,1.217,121,2.306,122,1.217,123,1.217,124,1.217,125,1.309,127,1.309,128,2.306,129,1.155,130,1.309,131,1.309,132,1.309,133,1.309,134,1.309,136,2.027,138,1.309,139,1.65,141,2.48,143,1.46,144,2.48,146,2.306,147,1.217,148,1.065,149,1.217,150,1.217,151,2.027,152,1.76,153,1.217,154,1.65,155,2.597,156,2.027,157,2.027,158,1.309,159,2.027,161,1.217,163,1.76,165,1.76,166,1.76,167,1.76,174,0.794,189,2.029,190,0.638,191,1.76,197,2.144,200,1.884,214,0.84,216,2.027,218,2.019,223,1.76,226,2.027,234,0.794,235,1.23,236,1.101,237,0.794,238,1.603,239,0.794,240,1.694,241,0.638,242,1.631,243,0.794,244,0.638,245,0.751,246,1.361,247,1.879,248,0.604,249,0.673,250,0.794,251,0.572,252,0.794,253,1.505,254,0.572,255,0.794,256,0.935,257,0.541,258,0.383,259,0.794,260,0.604,261,0.794,262,0.604,263,0.793,264,0.988,265,1.833,266,0.794,267,0.794,268,0.01,269,0.01,271,2.144,286,1.46,320,2.136,394,3.286,418,1.416,421,1.309,489,1.46,492,1.897,493,1.46,494,1.46,495,1.46,501,1.46,513,1.545,517,2.193,523,1.137,524,1.545,539,1.001,552,1.137,559,1.46,560,1.46,561,0.943,562,2.683,586,1.897,587,2.641,592,1.922,611,3.534,612,3.232,613,3.232,614,3.483,615,3.483,616,3.483,617,2.641,618,3.825,619,2.249,620,3.296,621,3.64,622,4.599,623,3.64,624,3.64,625,3.296,626,2.641,627,2.249,628,2.641,629,2.249,630,3.64,631,3.64,632,2.249,633,2.641,634,2.249,635,1.706,636,2.641,637,1.309,638,1.309,639,1.706,640,3.232,641,1.706,642,1.545,643,1.416,644,1.545,645,1.706,646,1.706,647,1.416,648,1.706,649,1.706,650,1.706,651,1.706,652,2.392,653,1.706,654,1.706,655,1.706,656,2.641,657,3.232,658,1.416,659,1.706,660,1.706,661,1.706,662,1.706,663,1.706,664,1.706,665,1.706,666,1.706,667,1.706,668,1.706,669,1.706,670,2.641,671,1.706,672,1.706,673,1.706,674,4.1,675,2.976,676,2.976,677,2.976]],["title/injectables/FirebaseService.html",[33,0.961,270,1.414]],["body/injectables/FirebaseService.html",[3,0.07,4,0.07,8,0.06,16,0.841,20,0.273,21,0.606,27,0.677,28,2.004,29,1.73,31,0.542,33,0.677,34,2.165,35,1.731,37,1.661,38,0.022,39,1.321,40,1.162,41,1.489,43,1.73,44,1.928,47,2.505,48,1.639,51,0.996,52,0.941,56,1.205,60,0.245,63,0.06,76,2.646,77,0.595,82,1.244,87,0.07,88,0.07,91,1.73,92,1.73,111,0.451,113,2.027,114,1.915,117,1.296,129,1.1,139,1.799,152,1.273,183,1.034,189,0.503,197,2.067,213,3.751,214,1.707,218,2.165,219,4.212,227,2.31,238,0.841,245,0.841,247,1.702,258,1.151,263,1.468,268,0.007,269,0.007,270,0.996,272,0.948,283,1.286,284,4.354,286,2.455,287,0.815,288,0.761,307,1.586,320,2.693,323,1.363,329,1.286,330,2.21,419,4.992,424,2.152,426,2.152,436,1.286,441,4.666,446,0.948,452,1.911,453,1.286,454,1.286,455,1.286,456,1.73,459,0.876,463,1.142,470,4.905,475,3.245,478,2.775,482,5.688,483,1.286,492,1.919,498,2.88,499,1.286,503,1.911,504,3.245,507,1.142,537,0.815,552,3.011,559,2.035,560,1.592,561,1.056,575,0.876,577,0.948,579,1.142,581,1.142,586,1.881,590,1.73,618,2.21,620,3.14,622,2.903,625,2.608,637,0.876,638,0.876,643,3.751,658,2.391,678,1.142,679,2.775,680,3.249,681,2.519,682,2.519,683,3.798,684,3.249,685,3.798,686,3.798,687,3.798,688,3.798,689,4.227,690,4.572,691,2.519,692,2.519,693,2.519,694,2.519,695,2.519,696,2.519,697,2.519,698,2.519,699,1.505,700,2.519,701,2.519,702,1.505,703,3.798,704,3.906,705,3.906,706,2.519,707,3.798,708,3.206,709,3.798,710,3.245,711,2.519,712,6.208,713,1.505,714,6.754,715,5.24,716,3.798,717,2.519,718,4.572,719,1.505,720,4.354,721,4.142,722,4.572,723,2.519,724,1.505,725,2.519,726,2.862,727,2.519,728,2.519,729,1.505,730,1.505,731,5.091,732,3.798,733,2.152,734,1.505,735,3.798,736,1.505,737,2.152,738,2.519,739,2.519,740,1.505,741,2.519,742,2.519,743,2.519,744,2.519,745,1.505,746,3.906,747,2.519,748,1.505,749,3.798,750,2.519,751,1.505,752,2.519,753,1.505,754,2.519,755,2.519,756,2.519,757,1.505,758,2.519,759,2.519,760,1.505,761,2.519,762,2.519,763,4.227,764,1.505,765,2.519,766,2.519,767,2.519,768,1.505,769,1.505,770,2.152,771,1.505,772,1.505,773,1.505,774,1.505,775,1.505,776,1.505,777,2.519,778,1.505,779,1.505,780,1.505,781,1.286,782,1.505,783,1.505,784,1.505,785,1.505,786,3.249,787,1.505,788,3.249,789,1.505,790,2.519,791,1.505,792,4.793,793,3.798,794,6.276,795,3.798,796,3.798,797,5.09,798,1.505,799,1.505,800,1.505,801,1.505,802,3.798,803,1.505,804,1.505,805,1.505,806,1.505,807,1.505,808,1.505,809,1.505,810,1.505,811,1.505,812,1.505,813,2.519,814,1.505,815,2.519,816,1.505,817,2.519,818,2.519,819,1.505,820,1.505,821,1.505,822,1.505,823,1.505,824,1.505,825,1.505,826,2.519,827,1.505,828,1.505,829,1.505,830,2.519,831,1.505,832,1.505,833,1.505,834,2.519,835,1.286,836,1.505,837,1.505,838,1.505,839,1.505,840,1.505,841,1.505,842,1.505,843,4.227,844,4.227,845,1.505,846,3.798,847,3.798,848,3.798,849,3.249,850,2.519,851,1.505,852,1.286,853,1.505,854,1.505,855,1.505,856,1.505,857,1.505,858,1.505,859,3.249,860,1.505,861,1.505,862,1.505,863,1.505,864,1.505,865,1.505,866,1.505,867,1.286,868,1.286,869,1.505,870,1.034,871,1.286,872,1.142,873,1.142,874,1.505,875,1.505,876,2.519,877,1.505,878,1.505,879,2.519,880,1.505,881,1.505,882,1.505,883,1.505,884,1.505,885,1.505,886,1.505,887,1.505]],["title/components/ForgotPasswordPage.html",[0,0.24,248,0.961]],["body/components/ForgotPasswordPage.html",[0,0.41,1,1.217,2,1.842,3,0.199,4,0.199,5,1.515,6,1.515,7,1.515,8,0.17,12,1.842,13,2.152,14,1.515,15,2.323,16,1.434,17,1.515,18,1.744,20,0.777,27,1.481,30,2.148,31,1.312,35,1.481,38,0.021,39,1.188,48,1.033,50,1.603,60,0.199,63,0.17,82,0.978,85,1.744,87,0.199,88,0.199,89,1.153,189,2.036,190,1.217,234,1.515,235,1.947,236,1.744,237,1.515,238,2.148,239,1.515,240,2.271,241,1.217,242,1.919,243,1.515,244,1.217,245,1.434,246,1.217,247,1.55,248,1.727,249,2.139,250,1.515,251,1.091,252,1.515,253,2.152,254,1.091,255,1.515,256,1.153,257,1.033,258,0.732,259,1.515,260,1.153,261,1.515,262,1.153,263,0.978,264,1.217,265,1.515,266,1.515,267,1.515,268,0.016,269,0.016,290,2.033,346,2.696,385,4.082,387,3.837,446,4.287,888,4.185,889,3.667,890,6.095,891,5.516,892,4.293,893,4.293,894,4.712,895,5.516,896,5.516,897,5.516,898,5.516,899,2.322,900,2.702,901,2.948,902,4.293,903,2.948,904,4.293,905,2.948]],["title/modules/ForgotPasswordPageModule.html",[336,1.014,906,2.457]],["body/modules/ForgotPasswordPageModule.html",[3,0.236,4,0.236,8,0.203,38,0.022,60,0.329,63,0.203,75,1.098,87,0.236,88,0.236,248,1.908,249,1.838,268,0.018,269,0.018,332,2.016,338,1.227,339,2.428,345,2.733,346,2.137,348,2.733,349,1.649,352,1.649,357,2.733,360,2.27,385,2.967,387,3.21,888,3.502,906,4.978,907,4.357,908,4.357,909,4.357,910,4.474,911,5.1,912,2.908,913,2.27,914,2.908,915,2.27,916,4.357]],["title/modules/ForgotPasswordPageRoutingModule.html",[336,1.014,910,2.252]],["body/modules/ForgotPasswordPageRoutingModule.html",[0,0.363,3,0.25,4,0.25,8,0.214,38,0.022,60,0.313,63,0.214,87,0.25,88,0.25,129,1.299,248,1.706,249,1.616,268,0.018,269,0.018,313,1.906,338,1.299,349,1.45,352,1.706,368,2.557,370,3.008,371,2.668,374,2.557,385,3.141,387,3.398,407,2.557,888,3.707,910,3.998,916,4.612,917,2.728]],["title/components/HomePage.html",[0,0.24,251,0.91]],["body/components/HomePage.html",[0,0.391,1,1.104,2,1.729,3,0.18,4,0.18,5,1.375,6,1.375,7,1.375,8,0.155,14,1.375,15,2.298,16,1.301,17,1.375,18,1.636,20,0.705,21,1.246,27,1.39,28,1.648,30,2.069,31,1.114,32,3.327,33,1.78,35,1.663,37,1.104,38,0.022,39,1.389,40,1.116,41,0.99,48,0.937,56,1.179,60,0.269,63,0.155,78,1.375,82,0.887,85,1.636,87,0.18,88,0.18,89,1.046,96,2.298,111,1.166,114,1.104,154,2.451,189,1.942,190,1.104,234,1.375,235,1.827,236,1.636,237,1.375,238,2.069,239,1.375,240,2.187,241,1.104,242,1.915,243,1.375,244,1.104,245,1.301,246,1.104,247,1.478,248,1.046,249,1.166,250,1.375,251,1.575,252,1.375,253,2.052,254,0.99,255,1.375,256,1.046,257,0.937,258,1.186,259,1.375,260,1.046,261,1.375,262,1.046,263,0.887,264,1.104,265,1.375,266,1.375,267,1.375,268,0.015,269,0.015,290,1.844,326,3.554,330,3.011,333,4.421,537,2.107,544,3.258,554,3.554,555,2.266,567,1.733,575,3.382,605,4.421,609,2.953,643,3.258,870,3.554,899,3.352,900,2.451,901,2.674,903,2.674,905,2.674,918,3.327,919,5.813,920,5.175,921,5.175,922,3.894,923,3.554,924,5.175,925,5.175,926,3.894,927,2.451,928,3.894,929,3.894,930,5.175,931,5.175,932,5.175,933,3.894,934,3.894,935,2.953,936,2.674,937,4.421,938,3.894,939,3.894,940,3.894,941,3.258,942,3.554,943,2.953,944,5.175,945,3.011,946,3.894,947,3.894,948,3.894,949,3.894,950,3.894,951,3.894]],["title/modules/HomePageModule.html",[336,1.014,952,2.457]],["body/modules/HomePageModule.html",[3,0.238,4,0.238,8,0.204,38,0.022,60,0.33,63,0.204,75,1.105,87,0.238,88,0.238,251,1.81,268,0.018,269,0.018,326,3.524,332,2.029,338,1.235,339,2.437,345,2.743,346,2.151,348,2.743,349,1.655,352,1.655,357,2.743,360,2.284,912,2.919,913,2.284,914,2.919,915,2.284,952,4.984,953,4.385,954,4.385,955,4.385,956,4.48,957,5.132,958,4.385]],["title/modules/HomePageRoutingModule.html",[336,1.014,956,2.252]],["body/modules/HomePageRoutingModule.html",[0,0.365,3,0.251,4,0.251,8,0.215,38,0.022,60,0.313,63,0.215,87,0.251,88,0.251,129,1.306,251,1.62,268,0.018,269,0.018,313,1.915,338,1.306,349,1.457,352,1.711,368,2.57,370,3.017,371,2.674,374,2.57,407,2.57,917,2.742,956,4.01,958,4.635,959,5.425]],["title/components/InventoryManagementPage.html",[0,0.24,89,0.961]],["body/components/InventoryManagementPage.html",[0,0.328,1,0.893,2,1.052,3,0.146,4,0.092,5,0.698,6,0.698,7,0.698,8,0.079,9,3.944,10,3.667,11,0.999,12,1.494,13,1.385,14,0.698,15,2.101,16,1.631,17,1.925,18,1.414,19,1.591,20,0.57,21,0.758,22,1.5,23,1.5,24,2.388,25,1.5,26,1.5,27,0.845,28,1.942,29,1.358,30,1.737,31,0.845,33,1.639,34,1.858,35,1.809,37,1.384,38,0.022,39,1.358,40,1.241,41,1.241,43,1.358,44,2.44,45,1.245,46,1.982,47,2.118,48,1.404,50,1.465,51,1.768,52,1.67,53,2.315,54,1.925,56,1.112,60,0.292,61,2.282,62,0.782,63,0.156,64,1.858,65,0.782,66,2.122,67,0.88,68,2.122,69,0.88,70,2.122,71,0.88,72,2.312,73,1.176,74,2.756,75,0.426,76,2.721,77,0.782,78,0.698,79,0.999,80,0.999,81,1.358,82,1.289,83,1.052,84,1.703,85,0.995,86,2.122,87,0.182,88,0.182,89,1.201,90,2.122,91,3.746,92,4.006,93,2.681,94,2.122,95,2.122,96,2.056,97,2.122,98,1.874,99,2.122,100,1.703,101,1.703,102,1.99,103,1.703,104,2.122,105,1.703,106,2.419,107,1.591,108,2.463,109,2.975,110,1.67,111,1.695,112,3.391,113,1.385,114,1.605,115,1.151,116,1.358,117,0.561,118,1.358,119,1.07,120,1.07,121,1.07,122,1.07,123,1.07,124,1.07,125,2.602,126,2.388,127,1.832,128,2.419,129,1.076,130,1.151,131,1.151,132,1.151,133,1.151,134,1.151,135,2.388,136,1.832,137,2.975,138,1.151,139,1.491,140,1.5,141,1.151,142,1.5,143,2.643,144,2.282,145,2.388,146,1.703,147,1.07,148,1.491,149,1.07,150,1.07,151,1.151,152,1.982,153,1.07,154,1.491,155,2.122,156,1.832,157,1.832,158,1.151,159,1.151,160,1.5,161,1.07,162,2.388,163,1.982,164,1.5,165,1.591,166,1.591,167,1.591,168,3.391,169,1.5,170,1.5,171,3.391,172,1.5,173,3.391,174,0.698,175,2.388,176,1.5,177,1.5,178,1.5,179,2.388,180,1.5,181,2.388,182,1.5,183,1.358,184,1.5,185,1.5,186,1.5,187,1.5,188,1.358,189,1.822,190,0.893,191,0.999,192,1.5,193,1.5,194,1.982,195,1.245,196,2.388,197,1.836,198,1.5,199,1.5,200,2.814,201,3.703,202,2.388,203,1.5,204,1.5,205,1.5,206,1.5,207,3.703,208,4.424,209,4.424,210,1.5,211,1.5,212,1.5,213,2.162,214,0.739,215,2.388,216,2.282,217,1.5,218,0.937,219,1.358,220,1.5,221,1.5,222,1.5,223,0.999,224,1.5,225,1.5,226,1.151,227,0.999,228,1.5,229,1.5,230,1.5,234,0.698,235,1.111,236,0.995,237,0.698,238,1.494,239,0.698,240,1.579,241,0.561,242,1.52,243,0.698,244,0.561,245,0.661,246,0.561,247,0.997,248,0.531,249,0.592,250,0.698,251,0.503,252,0.698,253,1.385,254,0.503,255,0.698,256,0.531,257,0.476,258,0.337,259,0.698,260,0.531,261,0.698,262,0.531,263,0.45,264,0.561,265,0.698,266,0.698,267,0.698,268,0.009,269,0.009,290,0.937,523,1.982,546,1.591,567,0.88,590,2.162,609,2.388,652,2.162,899,1.07,941,1.245,942,1.358,945,1.151,960,2.69,961,2.69,962,2.69,963,1.5,964,3.148,965,1.978,966,1.978,967,1.978,968,1.978,969,1.978,970,1.69,971,1.978,972,1.978,973,1.978,974,1.69,975,1.978,976,1.5,977,1.5,978,1.69,979,1.69,980,1.69,981,1.69,982,1.69,983,3.148,984,3.148,985,3.148,986,1.5,987,2.602,988,2.975,989,1.5,990,1.5,991,1.151,992,1.5,993,1.358,994,1.5,995,1.245,996,1.5,997,1.5,998,1.5,999,1.07]],["title/modules/InventoryManagementPageModule.html",[336,1.014,1000,2.457]],["body/modules/InventoryManagementPageModule.html",[1,1.978,3,0.219,4,0.219,8,0.187,9,2.746,10,2.553,38,0.022,60,0.34,63,0.187,65,1.866,67,2.1,69,2.1,71,2.1,73,1.762,75,1.016,82,1.334,83,1.576,87,0.219,88,0.219,89,1.873,190,1.978,268,0.017,269,0.017,332,1.866,338,1.136,339,2.315,345,2.606,346,1.978,348,2.606,349,1.573,351,4.829,352,1.573,357,2.606,360,2.1,912,2.774,913,2.1,914,2.774,915,2.1,1000,5.031,1001,4.032,1002,4.032,1003,4.032,1004,4.392,1005,3.579,1006,5.003,1007,2.746,1008,4.441,1009,4.441,1010,4.441,1011,4.021,1012,3.241,1013,4.441,1014,4.021]],["title/modules/InventoryManagementPageRoutingModule.html",[336,1.014,1004,2.252]],["body/modules/InventoryManagementPageRoutingModule.html",[0,0.363,3,0.25,4,0.25,8,0.214,9,3.141,10,2.921,38,0.022,60,0.313,63,0.214,82,1.229,83,1.803,87,0.25,88,0.25,89,1.706,129,1.299,268,0.018,269,0.018,313,1.906,338,1.299,349,1.45,352,1.706,368,2.557,370,3.008,371,2.668,374,2.557,407,2.557,917,2.728,1004,3.998,1007,3.141]],["title/injectables/LoadingService.html",[34,1.694,270,1.414]],["body/injectables/LoadingService.html",[3,0.229,4,0.229,8,0.196,20,0.895,27,1.618,28,2,31,1.064,34,2.854,35,1.745,37,1.402,38,0.022,39,1.064,40,0.949,41,1.257,48,1.45,60,0.279,63,0.196,75,1.064,87,0.229,88,0.229,114,1.709,129,1.19,268,0.017,269,0.017,270,2.382,272,3.112,280,5.148,287,2.675,288,2.498,289,3.749,315,5.781,325,5.148,658,3.793,1015,4.223,1016,6.766,1017,6.766,1018,4.943,1019,4.943,1020,6.026,1021,4.943,1022,6.937,1023,6.766,1024,6.026,1025,4.943,1026,6.026,1027,4.943,1028,4.943,1029,4.943]],["title/components/LoginPage.html",[0,0.24,254,0.91]],["body/components/LoginPage.html",[0,0.353,1,0.761,2,1.331,3,0.124,4,0.124,5,0.948,6,0.948,7,0.948,8,0.107,12,1.331,13,1.677,14,0.948,15,2.183,16,0.897,17,0.948,18,1.26,20,0.486,21,0.959,27,1.07,28,1.347,30,1.755,31,0.858,33,1.634,35,1.77,37,1.13,38,0.022,39,1.131,40,1.129,41,1.013,44,0.948,48,1.537,50,2.096,51,2.077,52,1.962,56,1.339,60,0.272,63,0.107,78,0.948,82,0.612,85,1.26,87,0.124,88,0.124,89,0.721,102,2.339,110,2.492,111,1.573,113,0.948,114,1.347,128,2.843,152,1.357,154,2.489,189,1.586,190,0.761,197,0.948,227,2.013,234,0.948,235,1.406,236,1.26,237,0.948,238,1.755,239,0.948,240,1.855,241,0.761,242,1.77,243,0.948,244,0.761,245,0.897,246,0.761,247,1.208,248,0.721,249,1.422,250,0.948,251,0.683,252,0.948,253,1.677,254,1.336,255,0.948,256,0.721,257,0.646,258,1.15,259,0.948,260,0.721,261,0.948,262,0.721,263,1.339,264,0.761,265,0.948,266,0.948,267,0.948,268,0.011,269,0.011,271,2.149,282,2.508,284,3.021,286,1.126,290,1.272,294,3.935,300,3.021,301,2.037,302,4.459,307,2.99,313,0.948,314,2.294,320,1.195,323,3.036,324,2.294,330,2.318,332,1.575,385,3.637,446,3.533,463,2.037,489,1.126,492,1.575,493,1.126,494,1.126,495,1.126,501,1.126,537,1.453,539,1.195,544,1.69,554,2.736,555,2.318,559,1.67,560,1.991,561,1.126,565,3.021,566,4.179,567,1.773,569,1.844,585,2.736,642,3.608,644,2.736,704,3.404,710,3.404,726,1.453,731,4.795,835,2.294,852,2.294,870,2.736,872,2.037,873,2.037,894,4.489,899,1.453,900,2.99,901,3.262,903,3.608,905,4.179,927,1.69,935,3.602,936,1.844,943,2.037,987,3.541,991,1.562,1030,2.294,1031,4.75,1032,3.984,1033,3.984,1034,5.254,1035,5.254,1036,5.254,1037,3.984,1038,2.685,1039,5.254,1040,4.058,1041,2.685,1042,3.984,1043,5.254,1044,3.984,1045,2.685,1046,3.984,1047,3.984,1048,3.984,1049,2.685,1050,3.984,1051,3.984,1052,2.685,1053,2.685,1054,2.685,1055,2.685,1056,2.685,1057,2.685,1058,2.685,1059,2.685,1060,2.685,1061,3.602,1062,2.685,1063,2.685,1064,2.685,1065,2.685,1066,2.685,1067,2.685,1068,2.685,1069,2.685,1070,2.685,1071,2.685,1072,4.75,1073,2.685,1074,4.75,1075,2.685,1076,2.685,1077,2.685,1078,2.685,1079,2.685,1080,2.685,1081,2.685,1082,3.984,1083,3.262,1084,4.795,1085,3.404,1086,3.701,1087,2.294,1088,3.404,1089,4.058,1090,3.021,1091,2.294,1092,3.404,1093,2.294,1094,2.294,1095,2.294,1096,2.294,1097,2.294,1098,2.294,1099,2.037,1100,3.404,1101,2.294,1102,2.685,1103,3.984,1104,2.685,1105,2.685,1106,2.294]],["title/modules/LoginPageModule.html",[336,1.014,1107,2.252]],["body/modules/LoginPageModule.html",[3,0.233,4,0.233,8,0.2,38,0.022,39,1.083,56,1.55,60,0.328,63,0.2,75,1.083,87,0.282,88,0.233,254,1.801,258,0.857,268,0.017,269,0.017,323,2.72,332,1.988,338,1.21,339,2.407,345,2.71,346,2.107,348,2.71,349,1.635,352,1.635,357,2.71,360,2.238,575,2.926,577,3.165,912,2.883,913,2.238,914,2.883,915,2.238,1107,4.552,1108,4.296,1109,4.296,1110,4.296,1111,4.122,1112,3.813,1113,3.813,1114,1.878,1115,4.296]],["title/modules/LoginPageRoutingModule.html",[336,1.014,1111,2.082]],["body/modules/LoginPageRoutingModule.html",[0,0.365,3,0.251,4,0.251,8,0.215,38,0.022,60,0.313,63,0.215,87,0.251,88,0.251,129,1.306,254,1.62,268,0.018,269,0.018,313,1.915,338,1.306,349,1.457,352,1.711,368,2.57,370,3.017,371,2.674,374,2.57,407,2.57,917,2.742,1111,3.707,1113,4.114,1116,5.425]],["title/components/OrderManagementPage.html",[0,0.24,256,0.961]],["body/components/OrderManagementPage.html",[0,0.322,1,0.541,2,1.021,3,0.088,4,0.088,5,0.673,6,0.673,7,0.673,8,0.076,11,0.963,12,1.463,13,1.351,14,0.673,15,2.086,16,0.637,17,2.133,18,1.385,19,1.545,20,0.554,21,0.736,27,0.821,28,1.677,30,1.709,31,0.658,33,1.374,35,1.798,37,1.524,38,0.022,39,1.241,40,1.256,41,1.367,44,1.079,46,3.053,47,2.074,48,1.481,50,1.79,51,1.895,52,2.086,53,1.361,54,1.692,56,1.347,60,0.297,61,2.227,62,0.754,63,0.121,64,1.813,65,0.754,66,2.071,67,0.849,68,2.071,69,0.849,70,2.594,71,0.849,72,2.27,73,1.142,74,2.716,75,0.411,76,0.754,77,0.754,78,0.673,79,0.963,80,0.963,82,0.434,83,1.021,84,1.654,85,0.967,86,2.071,87,0.177,88,0.177,89,0.512,90,2.071,93,2.646,94,2.071,95,2.071,96,1.209,97,2.071,98,1.835,99,2.071,100,1.654,101,1.654,102,1.949,103,1.654,104,2.071,105,1.654,106,2.369,107,1.545,108,1.448,110,1.79,111,1.435,113,1.806,114,1.085,117,0.867,119,1.031,120,1.031,121,2.071,122,1.031,123,1.031,124,1.031,125,2.548,127,1.779,128,2.908,129,1.054,130,1.109,131,1.109,132,1.109,133,1.109,134,1.109,136,1.779,138,1.109,139,2.27,141,2.789,143,1.281,144,2.227,146,2.369,147,1.031,148,1.448,149,1.031,150,1.031,151,2.227,152,1.934,153,1.031,154,1.448,155,1.654,156,1.779,157,1.779,158,1.109,159,2.227,161,1.031,163,1.545,165,1.545,166,1.545,167,1.545,174,1.079,189,2.018,190,0.541,191,1.545,197,2.035,214,1.142,216,1.109,218,1.448,226,1.109,234,0.673,235,1.079,236,0.967,237,0.673,238,1.463,239,0.673,240,1.546,241,0.541,242,1.588,243,0.673,244,0.541,245,0.637,246,0.867,247,1.875,248,0.512,249,0.571,250,0.673,251,0.485,252,0.673,253,1.351,254,0.485,255,0.673,256,1.176,257,0.459,258,0.325,259,0.673,260,0.512,261,0.673,262,0.512,263,0.872,264,0.867,265,2.035,266,0.673,267,0.673,268,0.009,269,0.009,271,2.035,286,2.145,290,0.903,320,1.949,394,3.645,418,1.2,421,1.109,489,1.281,492,1.731,493,1.281,494,1.281,495,1.281,501,1.281,517,1.2,523,2.213,539,0.849,546,1.545,552,1.934,559,1.281,560,1.281,561,0.799,562,3.221,567,0.849,586,1.949,590,2.1,611,3.92,612,1.446,613,1.446,617,1.446,618,3.686,620,3.007,621,3.321,622,4.351,623,3.321,624,3.321,625,3.007,626,1.446,628,1.446,630,2.319,631,2.319,633,1.446,635,1.446,636,2.903,637,1.109,638,1.109,639,1.446,640,2.319,641,2.319,642,3.007,643,1.925,644,2.1,645,1.446,646,1.446,647,1.2,648,1.446,649,1.446,650,1.446,651,2.319,652,3.514,653,2.319,654,2.319,655,2.319,656,2.903,657,2.903,658,1.925,659,2.319,660,1.446,661,2.319,662,1.446,663,2.319,664,1.446,665,2.319,666,1.446,667,1.446,668,1.446,669,1.446,670,2.319,671,1.446,672,1.446,673,1.446,899,1.031,941,1.2,942,1.309,945,1.109,960,2.612,961,2.612,962,2.612,963,1.446,970,1.629,974,1.629,976,1.446,977,1.446,978,1.629,979,1.629,980,1.629,982,1.629,986,1.446,987,2.548,988,2.903,989,1.446,990,1.446,991,1.109,992,1.446,993,1.309,994,1.446,995,1.2,996,1.446,997,1.446,998,1.446,999,1.031,1117,2.612,1118,3.057,1119,3.057,1120,1.907,1121,1.907,1122,1.907,1123,1.907,1124,1.907,1125,1.907,1126,1.907,1127,1.629,1128,1.907,1129,1.907,1130,1.779,1131,3.057,1132,3.057,1133,3.057]],["title/modules/OrderManagementPageModule.html",[336,1.014,1134,2.457]],["body/modules/OrderManagementPageModule.html",[3,0.213,4,0.213,8,0.182,38,0.022,60,0.342,63,0.182,65,1.813,67,2.041,69,2.041,71,2.041,73,1.712,75,0.987,83,1.531,87,0.213,88,0.213,246,1.964,247,1.462,256,1.86,264,1.964,268,0.016,269,0.016,332,1.813,338,1.104,339,2.274,345,2.56,346,1.922,348,2.56,349,1.545,351,4.766,352,1.545,357,2.56,360,2.041,394,2.481,611,2.668,912,2.724,913,2.041,914,2.724,915,2.041,1005,3.477,1006,4.914,1007,2.668,1008,4.362,1009,4.362,1010,4.362,1011,3.95,1012,3.149,1013,4.362,1014,3.95,1134,5.012,1135,3.917,1136,3.917,1137,3.917,1138,4.36,1139,5.752,1140,4.585,1141,5.752,1142,4.585,1143,5.752,1144,4.585]],["title/modules/OrderManagementPageRoutingModule.html",[336,1.014,1138,2.252]],["body/modules/OrderManagementPageRoutingModule.html",[0,0.363,3,0.25,4,0.25,8,0.214,38,0.022,60,0.313,63,0.214,83,1.803,87,0.25,88,0.25,129,1.299,247,1.373,256,1.706,268,0.018,269,0.018,313,1.906,338,1.299,349,1.45,352,1.706,368,2.557,370,3.008,371,2.668,374,2.557,394,2.921,407,2.557,611,3.141,917,2.728,1007,3.141,1138,3.998]],["title/interfaces/Pantry.html",[258,0.61,1114,1.336]],["body/interfaces/Pantry.html",[3,0.232,4,0.232,8,0.198,20,0.905,21,1.46,38,0.022,39,1.462,40,1.304,56,1.681,60,0.328,63,0.198,75,1.076,87,0.281,88,0.232,254,1.542,258,1.034,268,0.017,269,0.017,323,2.704,348,2.224,349,1.342,352,1.629,357,2.699,360,2.224,575,3.951,577,4.275,912,2.873,913,2.224,914,2.873,915,2.224,1107,3.146,1111,3.529,1112,3.79,1113,3.79,1114,1.866,1115,5.802,1145,2.907]],["title/components/PantryStatisticsPage.html",[0,0.24,257,0.861]],["body/components/PantryStatisticsPage.html",[0,0.28,1,0.617,2,1.133,3,0.101,4,0.101,5,0.768,6,0.768,7,0.768,8,0.086,12,1.133,13,1.473,14,0.768,15,2.104,16,0.726,17,0.768,18,1.073,20,0.394,21,0.817,27,0.911,28,1.183,30,1.574,31,0.731,33,1.519,35,1.865,37,0.617,38,0.022,39,0.898,40,1.222,41,0.553,44,1.997,48,1.408,50,2.112,51,2.313,52,2.185,54,1.997,56,1.4,60,0.251,62,0.86,63,0.086,76,1.65,77,0.86,78,0.768,82,1.073,85,1.073,87,0.101,88,0.101,89,0.584,98,1.422,102,2.098,110,2.339,111,1.249,113,2.304,114,1.183,115,1.266,117,1.183,154,2.232,174,1.997,189,1.394,190,0.617,214,1.76,223,1.715,234,0.768,235,1.198,236,1.073,237,0.768,238,1.707,239,0.768,240,1.664,241,0.617,242,1.651,243,0.768,244,0.617,245,0.726,246,0.617,247,1.061,248,0.584,249,0.651,250,0.768,251,0.553,252,0.768,253,1.473,254,0.553,255,0.768,256,0.584,257,1.134,258,1.025,259,0.768,260,0.584,261,0.768,262,0.584,263,0.95,264,0.617,265,0.768,266,0.768,267,0.768,268,0.01,269,0.01,271,1.997,282,1.369,290,1.03,323,1.177,327,1.836,399,3.773,489,0.912,492,1.342,493,0.912,494,0.912,495,0.912,501,0.912,539,0.968,544,1.369,546,2.108,559,0.912,560,0.912,561,0.912,566,3.51,567,1.857,569,1.494,585,2.33,586,2.518,726,1.836,899,1.177,900,2.136,901,2.33,903,3.237,905,3.884,923,3.719,927,1.369,935,3.164,936,1.494,943,1.65,945,1.266,987,3.291,991,1.266,999,2.257,1040,1.858,1061,2.573,1083,3.719,1084,4.367,1085,2.899,1086,3.217,1087,1.858,1088,2.899,1089,3.565,1090,2.573,1091,1.858,1092,2.899,1093,1.858,1094,1.858,1095,1.858,1096,1.858,1097,1.858,1098,1.858,1099,1.65,1100,2.899,1101,1.858,1114,1.267,1130,2.974,1146,4.058,1147,1.494,1148,3.164,1149,2.573,1150,3.164,1151,3.164,1152,3.164,1153,3.164,1154,3.164,1155,3.164,1156,3.393,1157,3.164,1158,3.164,1159,3.164,1160,3.164,1161,3.164,1162,3.164,1163,3.575,1164,3.575,1165,3.575,1166,3.575,1167,3.575,1168,3.575,1169,3.575,1170,2.175,1171,2.742,1172,3.393,1173,2.573,1174,2.175,1175,3.575,1176,3.575,1177,3.409,1178,2.175,1179,2.175,1180,4.107,1181,2.175,1182,2.175,1183,2.573,1184,2.175,1185,2.175,1186,4.006,1187,3.164,1188,2.573,1189,2.175,1190,2.573,1191,3.575,1192,2.33,1193,2.175,1194,2.175,1195,2.175,1196,2.108,1197,2.175,1198,2.175,1199,2.175,1200,2.175,1201,2.175,1202,3.164,1203,2.573,1204,2.175,1205,2.108,1206,2.175,1207,2.175,1208,2.175,1209,2.175,1210,1.65,1211,1.65,1212,1.65,1213,1.65,1214,1.65,1215,1.65,1216,1.65,1217,1.65,1218,1.65,1219,1.65,1220,1.65,1221,1.65,1222,1.65,1223,2.573,1224,3.164,1225,3.164,1226,3.164,1227,3.164,1228,3.164,1229,2.573,1230,3.164,1231,3.164,1232,3.164,1233,2.573,1234,1.65,1235,1.65,1236,1.65,1237,1.65,1238,1.65,1239,1.65,1240,3.164,1241,1.65,1242,1.65,1243,1.65,1244,1.65,1245,1.65,1246,1.65,1247,2.136,1248,1.65,1249,1.65,1250,1.65,1251,1.65,1252,1.65,1253,1.65,1254,1.65,1255,1.65,1256,1.65,1257,1.65,1258,1.65,1259,1.65,1260,1.65,1261,1.65,1262,2.626,1263,1.65,1264,2.573,1265,2.573,1266,1.858,1267,2.175,1268,1.858,1269,1.858,1270,1.858,1271,3.393,1272,2.175]],["title/modules/PantryStatisticsPageModule.html",[336,1.014,1273,2.457]],["body/modules/PantryStatisticsPageModule.html",[3,0.234,4,0.234,8,0.2,38,0.022,60,0.332,63,0.2,75,1.086,87,0.234,88,0.234,257,1.706,258,1.04,268,0.017,269,0.017,327,2.729,332,1.994,338,1.214,339,2.411,345,2.715,346,2.114,348,2.715,349,1.638,352,1.638,357,2.715,360,2.245,399,2.729,912,2.889,913,2.245,914,2.889,915,2.245,1146,2.935,1177,3.175,1273,4.969,1274,4.309,1275,4.309,1276,4.309,1277,4.462,1278,5.044,1279,4.309,1280,6.1,1281,4.309]],["title/modules/PantryStatisticsPageRoutingModule.html",[336,1.014,1277,2.252]],["body/modules/PantryStatisticsPageRoutingModule.html",[0,0.363,3,0.25,4,0.25,8,0.214,38,0.022,60,0.313,63,0.214,87,0.25,88,0.25,129,1.299,257,1.529,258,0.92,268,0.018,269,0.018,313,1.906,327,2.921,338,1.299,349,1.45,352,1.706,368,2.557,370,3.008,371,2.668,374,2.557,399,2.921,407,2.557,917,2.728,1146,3.141,1277,3.998,1279,4.612]],["title/components/ProfilePage.html",[0,0.24,260,0.961]],["body/components/ProfilePage.html",[0,0.339,1,0.701,2,1.251,3,0.115,4,0.115,5,0.873,6,0.873,7,0.873,8,0.098,12,1.51,13,1.78,14,0.873,15,2.169,16,0.826,17,2.247,18,1.429,19,1.25,20,0.448,21,0.902,27,1.006,28,1.43,30,1.81,31,0.807,33,1.531,35,1.677,37,1.062,38,0.022,39,1.371,40,1.137,41,0.952,45,2.846,48,1.088,50,1.688,51,0.978,52,0.924,53,1.101,54,0.873,56,1.298,60,0.283,62,1.481,63,0.098,64,2.388,65,0.978,72,2.566,73,0.924,75,0.533,78,0.873,79,1.25,80,1.25,82,0.563,85,1.184,87,0.174,88,0.174,89,0.664,93,2.141,96,1.481,102,1.101,107,1.25,108,1.774,110,2.415,111,1.906,113,2.247,114,1.062,117,1.062,129,0.595,139,1.171,148,1.171,163,1.25,165,1.25,166,1.25,167,1.25,174,1.322,189,2.19,190,0.701,191,1.25,194,2.358,195,1.557,197,0.873,214,1.688,218,1.171,234,0.873,235,1.322,236,1.184,237,0.873,238,1.904,239,0.873,240,1.78,241,0.701,242,1.761,243,0.873,244,1.062,245,1.978,246,0.701,247,1.378,248,0.664,249,0.741,250,0.873,251,0.629,252,0.873,253,1.596,254,0.629,255,0.873,256,0.664,257,0.595,258,1.209,259,0.873,260,1.354,261,0.873,262,0.664,263,0.563,264,0.701,265,0.873,266,0.873,267,0.873,268,0.011,269,0.011,271,2.204,282,4.007,286,2.114,290,1.171,307,2.358,328,2.358,489,1.57,492,1.994,493,1.57,494,1.57,495,1.57,501,1.57,506,1.876,507,4.324,508,3.863,509,2.113,510,4.308,511,1.876,512,4.629,517,1.557,518,2.113,520,4.629,521,3.2,523,1.893,526,3.2,528,3.2,530,3.2,532,3.863,534,3.863,536,3.863,537,1.338,538,2.113,539,1.101,540,3.2,541,3.863,542,3.2,543,3.863,544,2.846,545,3.2,546,1.893,547,2.572,548,3.2,549,3.863,550,3.863,551,3.2,552,1.893,553,2.572,554,2.572,555,1.439,556,2.113,557,2.113,558,3.2,559,1.57,560,1.57,561,1.037,562,2.358,563,3.2,564,2.113,565,3.824,566,4.74,567,2.779,568,2.113,569,3.105,570,2.113,571,3.2,572,2.113,573,3.2,574,3.2,575,1.439,576,3.2,577,1.557,578,3.2,579,1.876,580,3.2,581,1.876,582,3.2,583,2.113,584,3.2,585,2.572,867,3.2,868,3.2,870,2.572,871,3.2,872,2.841,873,2.841,900,2.358,936,3.105,941,1.557,945,1.439,987,2.179,991,1.439,999,2.027,1061,2.841,1086,2.846,1090,1.876,1099,3.429,1106,3.2,1266,2.113,1268,5.059,1269,3.863,1270,4.629,1282,3.746,1283,2.473,1284,3.746,1285,2.473,1286,2.473,1287,2.473,1288,2.473,1289,2.473,1290,2.473,1291,2.473,1292,3.746,1293,3.2,1294,3.2,1295,2.473,1296,2.473,1297,2.473,1298,2.473,1299,3.746,1300,3.746,1301,3.746,1302,2.473,1303,2.473,1304,2.473,1305,4.521,1306,2.473,1307,2.473,1308,5.043,1309,2.473,1310,2.473]],["title/modules/ProfilePageModule.html",[336,1.014,1311,2.457]],["body/modules/ProfilePageModule.html",[3,0.228,4,0.228,8,0.195,38,0.022,60,0.336,63,0.195,73,1.837,75,1.06,87,0.228,88,0.228,244,1.998,260,1.892,268,0.017,269,0.017,328,3.098,332,1.945,338,1.184,339,2.376,345,2.674,346,2.062,348,2.674,349,1.614,352,1.614,357,2.674,360,2.19,567,2.19,912,2.846,913,2.19,914,2.846,915,2.19,1011,4.126,1012,3.379,1014,4.126,1311,5.013,1312,4.204,1313,4.204,1314,4.204,1315,4.436,1316,4.921,1317,4.204,1318,6.009,1319,4.204,1320,4.204]],["title/modules/ProfilePageRoutingModule.html",[336,1.014,1315,2.252]],["body/modules/ProfilePageRoutingModule.html",[0,0.365,3,0.251,4,0.251,8,0.215,38,0.022,60,0.313,63,0.215,87,0.251,88,0.251,129,1.306,260,1.711,268,0.018,269,0.018,313,1.915,338,1.306,349,1.457,352,1.711,368,2.57,370,3.017,371,2.674,374,2.57,407,2.57,917,2.742,1315,4.01,1317,4.635,1321,5.425]],["title/interfaces/TimestampedItems.html",[1114,1.336,1196,1.808]],["body/interfaces/TimestampedItems.html",[0,0.318,3,0.158,4,0.158,8,0.135,12,1.138,13,1.669,15,1.078,18,1.078,20,0.617,21,1.138,28,0.966,30,1.138,31,0.734,33,1.458,38,0.022,40,0.908,44,1.669,54,2.307,56,1.488,60,0.295,62,1.348,63,0.135,76,1.869,77,1.348,78,1.203,82,0.776,85,1.078,87,0.158,88,0.158,98,1.982,110,2.027,111,1.625,113,2.388,114,1.539,115,1.983,117,1.539,174,2.174,214,1.765,242,0.915,257,0.82,258,1,263,0.776,268,0.014,269,0.014,271,1.916,327,1.844,399,1.844,489,1.429,492,1.869,493,1.429,494,1.429,495,1.429,501,1.429,539,1.517,546,2.743,559,1.429,560,1.429,561,1.429,586,2.741,726,3.172,923,3.728,927,2.146,999,2.937,1083,3.247,1114,1.765,1130,1.983,1145,1.983,1146,1.983,1147,2.341,1148,2.585,1149,2.585,1150,2.585,1151,2.585,1152,2.585,1153,2.585,1154,2.585,1155,2.585,1157,2.585,1158,2.585,1159,2.585,1160,2.585,1161,2.585,1162,2.585,1163,2.585,1164,2.585,1165,2.585,1166,2.585,1167,2.585,1168,2.585,1169,2.585,1171,2.751,1173,2.585,1175,3.586,1176,3.586,1177,3.417,1180,4.117,1183,2.585,1186,4.258,1187,2.585,1188,2.585,1190,2.585,1191,2.585,1192,2.341,1196,2.743,1202,3.586,1203,2.585,1205,2.389,1210,2.585,1211,2.585,1212,2.585,1213,2.585,1214,2.585,1215,2.585,1216,2.585,1217,2.585,1218,2.585,1219,2.585,1220,2.585,1221,2.585,1222,2.585,1223,3.586,1224,4.117,1225,4.117,1226,4.117,1227,4.117,1228,4.117,1229,3.586,1230,4.117,1231,4.117,1232,4.117,1233,3.586,1234,2.585,1235,2.585,1236,2.585,1237,2.585,1238,2.585,1239,2.585,1240,4.117,1241,2.585,1242,2.585,1243,2.585,1244,2.585,1245,2.585,1246,2.585,1247,2.976,1248,2.585,1249,2.585,1250,2.585,1251,2.585,1252,2.585,1253,2.585,1254,2.585,1255,2.585,1256,2.585,1257,2.585,1258,2.585,1259,2.585,1260,2.585,1261,2.585,1262,2.146,1263,2.585]],["title/interfaces/TimestampedItems-1.html",[143,1.251,1114,1.115,1196,1.508]],["body/interfaces/TimestampedItems-1.html",[3,0.086,4,0.086,8,0.074,20,0.336,21,0.72,31,0.399,33,0.498,38,0.022,39,1.018,40,0.97,41,0.472,44,2.07,48,1.648,54,2.479,56,1.259,60,0.234,63,0.074,76,2.187,77,0.733,82,0.422,87,0.086,88,0.086,96,2.667,117,1.222,143,2.457,197,2.352,200,1.004,223,0.937,227,2.178,236,0.946,247,1.749,258,0.806,268,0.009,269,0.009,270,1.182,287,1.004,288,0.937,320,2.944,382,1.407,459,1.079,537,1.004,547,3.247,553,1.274,555,1.079,586,2.921,618,2.508,637,1.079,638,1.079,647,2.713,708,2.85,720,1.407,721,3.833,726,3.405,995,1.168,1086,1.168,1114,1.117,1130,3.487,1145,1.079,1171,1.079,1186,4.164,1196,2.178,1205,1.511,1247,1.168,1262,3.181,1264,3.833,1265,3.833,1322,1.407,1323,1.585,1324,1.585,1325,2.555,1326,2.555,1327,1.585,1328,2.555,1329,5.558,1330,2.555,1331,3.21,1332,3.683,1333,1.585,1334,3.21,1335,1.585,1336,1.585,1337,5.795,1338,3.21,1339,3.21,1340,1.585,1341,5.851,1342,1.585,1343,1.585,1344,2.555,1345,2.555,1346,1.585,1347,1.585,1348,1.585,1349,2.555,1350,1.585,1351,1.585,1352,3.21,1353,1.585,1354,1.585,1355,1.585,1356,1.585,1357,2.555,1358,1.585,1359,1.585,1360,1.585,1361,1.585,1362,3.21,1363,5.444,1364,1.585,1365,1.585,1366,3.21,1367,1.585,1368,1.585,1369,3.683,1370,1.585,1371,1.585,1372,3.683,1373,1.585,1374,4.878,1375,1.585,1376,4.318,1377,1.585,1378,1.585,1379,2.555,1380,3.683,1381,4.725,1382,2.555,1383,2.555,1384,2.555,1385,2.555,1386,1.585,1387,1.585,1388,1.585,1389,1.585,1390,3.683,1391,1.585,1392,2.555,1393,2.555,1394,3.21,1395,1.585,1396,3.21,1397,3.21,1398,4.725,1399,3.21,1400,1.585,1401,1.585,1402,4.318,1403,3.683,1404,2.555,1405,3.21,1406,4.541,1407,1.585,1408,1.585,1409,1.585,1410,1.585,1411,3.21,1412,4.541,1413,1.585,1414,1.585,1415,1.585,1416,1.585,1417,1.585,1418,2.555,1419,1.585,1420,2.555,1421,2.268,1422,5.009,1423,1.585,1424,1.585,1425,3.21,1426,3.683,1427,3.683,1428,3.683,1429,3.683,1430,1.585,1431,3.683,1432,3.683,1433,4.318,1434,3.683,1435,2.555,1436,3.683,1437,2.555,1438,2.555,1439,2.555,1440,3.21,1441,1.585,1442,1.585,1443,1.585,1444,2.555,1445,1.585,1446,3.683,1447,1.585,1448,3.683,1449,3.683,1450,2.555,1451,3.683,1452,2.555,1453,2.555,1454,4.318,1455,2.555,1456,2.555,1457,2.555,1458,2.555,1459,2.555,1460,1.585,1461,3.683,1462,2.555,1463,3.683,1464,4.725,1465,2.555,1466,2.555,1467,2.555,1468,1.585,1469,2.555,1470,2.555,1471,2.555,1472,2.555,1473,2.555,1474,1.585,1475,1.585,1476,1.585,1477,3.21,1478,3.683,1479,1.585,1480,1.585,1481,1.585,1482,1.585,1483,1.585,1484,2.555,1485,1.585,1486,1.585,1487,1.585,1488,1.585,1489,3.21,1490,1.585,1491,1.585,1492,1.585,1493,1.585,1494,1.585,1495,1.585,1496,1.585,1497,1.585,1498,1.585]],["title/interfaces/TimestampedOrders.html",[1114,1.336,1205,1.808]],["body/interfaces/TimestampedOrders.html",[0,0.318,3,0.158,4,0.158,8,0.135,12,1.138,13,1.669,15,1.078,18,1.078,20,0.617,21,1.138,28,0.966,30,1.138,31,0.734,33,1.458,38,0.022,40,0.908,44,1.669,54,2.307,56,1.488,60,0.295,62,1.348,63,0.135,76,1.869,77,1.348,78,1.203,82,0.776,85,1.078,87,0.158,88,0.158,98,1.982,110,2.027,111,1.625,113,2.388,114,1.539,115,1.983,117,1.539,174,2.174,214,1.765,242,0.915,257,0.82,258,1,263,0.776,268,0.014,269,0.014,271,1.916,327,1.844,399,1.844,489,1.429,492,1.869,493,1.429,494,1.429,495,1.429,501,1.429,539,1.517,546,2.743,559,1.429,560,1.429,561,1.429,586,2.965,726,1.844,923,3.728,927,2.146,999,2.937,1083,3.247,1114,1.765,1130,1.983,1145,1.983,1146,1.983,1147,2.341,1148,2.585,1149,2.585,1150,2.585,1151,2.585,1152,2.585,1153,2.585,1154,2.585,1155,2.585,1157,2.585,1158,2.585,1159,2.585,1160,2.585,1161,2.585,1162,2.585,1163,2.585,1164,2.585,1165,2.585,1166,2.585,1167,2.585,1168,2.585,1169,2.585,1171,2.751,1173,2.585,1175,3.586,1176,3.586,1177,3.417,1180,4.117,1183,2.585,1186,4.258,1187,2.585,1188,2.585,1190,2.585,1191,2.585,1192,2.341,1196,2.389,1202,3.586,1203,2.585,1205,2.743,1210,2.585,1211,2.585,1212,2.585,1213,2.585,1214,2.585,1215,2.585,1216,2.585,1217,2.585,1218,2.585,1219,2.585,1220,2.585,1221,2.585,1222,2.585,1223,3.586,1224,4.117,1225,4.117,1226,4.117,1227,4.117,1228,4.117,1229,3.586,1230,4.117,1231,4.117,1232,4.117,1233,3.586,1234,2.585,1235,2.585,1236,2.585,1237,2.585,1238,2.585,1239,2.585,1240,4.117,1241,2.585,1242,2.585,1243,2.585,1244,2.585,1245,2.585,1246,2.585,1247,2.976,1248,2.585,1249,2.585,1250,2.585,1251,2.585,1252,2.585,1253,2.585,1254,2.585,1255,2.585,1256,2.585,1257,2.585,1258,2.585,1259,2.585,1260,2.585,1261,2.585,1262,2.146,1263,2.585]],["title/interfaces/TimestampedOrders-1.html",[143,1.251,1114,1.115,1205,1.508]],["body/interfaces/TimestampedOrders-1.html",[3,0.086,4,0.086,8,0.074,20,0.336,21,0.72,31,0.399,33,0.498,38,0.022,39,1.018,40,0.97,41,0.472,44,2.07,48,1.648,54,2.479,56,1.259,60,0.234,63,0.074,76,2.187,77,0.733,82,0.422,87,0.086,88,0.086,96,2.667,117,1.222,143,2.457,197,2.352,200,1.004,223,0.937,227,2.178,236,0.946,247,1.749,258,0.806,268,0.009,269,0.009,270,1.182,287,1.004,288,0.937,320,2.944,382,1.407,459,1.079,537,1.004,547,3.247,553,1.274,555,1.079,586,2.985,618,2.508,637,1.079,638,1.079,647,2.713,708,2.85,720,1.407,721,3.833,726,3.243,995,1.168,1086,1.168,1114,1.117,1130,3.487,1145,1.079,1171,1.079,1186,4.164,1196,1.899,1205,1.899,1247,1.168,1262,3.181,1264,3.833,1265,3.833,1322,1.407,1323,1.585,1324,1.585,1325,2.555,1326,2.555,1327,1.585,1328,2.555,1329,5.558,1330,2.555,1331,3.21,1332,3.683,1333,1.585,1334,3.21,1335,1.585,1336,1.585,1337,5.795,1338,3.21,1339,3.21,1340,1.585,1341,5.851,1342,1.585,1343,1.585,1344,2.555,1345,2.555,1346,1.585,1347,1.585,1348,1.585,1349,2.555,1350,1.585,1351,1.585,1352,3.21,1353,1.585,1354,1.585,1355,1.585,1356,1.585,1357,2.555,1358,1.585,1359,1.585,1360,1.585,1361,1.585,1362,3.21,1363,5.444,1364,1.585,1365,1.585,1366,3.21,1367,1.585,1368,1.585,1369,3.683,1370,1.585,1371,1.585,1372,3.683,1373,1.585,1374,4.878,1375,1.585,1376,4.318,1377,1.585,1378,1.585,1379,2.555,1380,3.683,1381,4.725,1382,2.555,1383,2.555,1384,2.555,1385,2.555,1386,1.585,1387,1.585,1388,1.585,1389,1.585,1390,3.683,1391,1.585,1392,2.555,1393,2.555,1394,3.21,1395,1.585,1396,3.21,1397,3.21,1398,4.725,1399,3.21,1400,1.585,1401,1.585,1402,4.318,1403,3.683,1404,2.555,1405,3.21,1406,4.541,1407,1.585,1408,1.585,1409,1.585,1410,1.585,1411,3.21,1412,4.541,1413,1.585,1414,1.585,1415,1.585,1416,1.585,1417,1.585,1418,2.555,1419,1.585,1420,2.555,1421,2.268,1422,5.009,1423,1.585,1424,1.585,1425,3.21,1426,3.683,1427,3.683,1428,3.683,1429,3.683,1430,1.585,1431,3.683,1432,3.683,1433,4.318,1434,3.683,1435,2.555,1436,3.683,1437,2.555,1438,2.555,1439,2.555,1440,3.21,1441,1.585,1442,1.585,1443,1.585,1444,2.555,1445,1.585,1446,3.683,1447,1.585,1448,3.683,1449,3.683,1450,2.555,1451,3.683,1452,2.555,1453,2.555,1454,4.318,1455,2.555,1456,2.555,1457,2.555,1458,2.555,1459,2.555,1460,1.585,1461,3.683,1462,2.555,1463,3.683,1464,4.725,1465,2.555,1466,2.555,1467,2.555,1468,1.585,1469,2.555,1470,2.555,1471,2.555,1472,2.555,1473,2.555,1474,1.585,1475,1.585,1476,1.585,1477,3.21,1478,3.683,1479,1.585,1480,1.585,1481,1.585,1482,1.585,1483,1.585,1484,2.555,1485,1.585,1486,1.585,1487,1.585,1488,1.585,1489,3.21,1490,1.585,1491,1.585,1492,1.585,1493,1.585,1494,1.585,1495,1.585,1496,1.585,1497,1.585,1498,1.585]],["title/components/UserManagementPage.html",[0,0.24,262,0.961]],["body/components/UserManagementPage.html",[0,0.314,1,0.74,2,1.303,3,0.121,4,0.121,5,0.922,6,0.922,7,0.922,8,0.104,11,1.32,12,1.303,13,1.649,14,0.922,15,2.174,16,0.872,17,1.958,18,1.234,20,0.473,21,0.939,27,1.048,28,1.797,30,1.731,31,0.84,33,1.619,35,1.818,37,1.325,38,0.022,39,1.194,40,1.288,41,1.188,46,3.133,48,1.124,51,2.193,52,2.071,54,1.958,56,1.064,60,0.299,62,1.032,63,0.104,64,2.213,65,1.032,66,2.527,67,1.162,68,2.527,69,1.162,70,2.527,71,1.162,72,2.627,73,0.975,74,3.048,75,0.562,78,0.922,82,0.595,83,1.731,84,2.111,85,1.234,86,2.527,87,0.121,88,0.121,89,0.701,90,2.527,93,2.936,94,2.527,95,2.527,96,1.543,97,2.527,98,2.172,99,2.527,100,2.111,101,2.111,102,2.307,103,2.111,104,2.527,105,2.111,106,2.804,107,1.972,110,1.744,111,1.399,113,1.958,114,1.573,116,1.793,117,0.74,118,1.793,119,1.413,120,1.413,121,1.413,122,1.413,123,1.413,124,1.413,148,1.237,174,1.378,189,1.56,190,0.74,197,1.378,214,1.935,234,0.922,235,1.378,236,1.234,237,0.922,238,1.731,239,0.922,240,1.83,241,0.74,242,1.733,243,0.922,244,0.74,245,0.872,246,0.74,247,1.188,248,0.701,249,0.782,250,0.922,251,0.664,252,0.922,253,1.649,254,0.664,255,0.922,256,0.701,257,0.629,258,0.445,259,0.922,260,0.701,261,0.922,262,1.392,263,1.659,264,0.74,265,0.922,266,0.922,267,0.922,268,0.011,269,0.011,271,2.129,286,1.635,290,1.237,330,3.607,403,4.296,446,3.262,489,1.095,492,1.543,493,1.095,494,1.095,495,1.095,498,2.959,501,1.095,503,3.93,523,2.361,539,1.162,546,1.972,552,2.619,559,1.095,560,1.095,561,1.095,567,1.162,679,4.739,705,4.428,737,3.334,746,3.334,781,2.231,792,2.231,899,1.413,941,1.644,942,1.793,945,1.519,963,1.981,976,1.981,977,2.959,981,2.231,986,1.981,987,3.015,988,3.543,989,1.981,990,1.981,991,1.519,992,1.981,993,1.793,994,1.981,995,1.644,996,1.981,997,1.981,998,1.981,999,1.413,1127,2.231,1421,1.981,1499,4.687,1500,3.902,1501,3.902,1502,2.612,1503,5.183,1504,5.183,1505,5.183,1506,2.612,1507,3.902,1508,3.902,1509,3.902,1510,5.183,1511,2.612,1512,2.612,1513,2.612,1514,2.612,1515,2.612,1516,2.612,1517,2.612,1518,2.612,1519,2.612,1520,2.612,1521,2.612,1522,2.612,1523,3.902,1524,3.902,1525,2.612,1526,2.612,1527,3.902,1528,3.902,1529,3.902,1530,3.902,1531,5.183,1532,3.902]],["title/modules/UserManagementPageModule.html",[336,1.014,1533,2.457]],["body/modules/UserManagementPageModule.html",[3,0.224,4,0.224,8,0.192,38,0.022,60,0.341,63,0.192,65,1.908,67,2.148,69,2.148,71,2.148,73,1.802,75,1.039,83,1.612,87,0.224,88,0.224,262,1.884,263,1.352,268,0.017,269,0.017,332,1.908,338,1.161,339,2.347,345,2.642,346,2.022,348,2.642,349,1.594,352,1.594,357,2.642,360,2.148,403,3.037,912,2.812,913,2.148,914,2.812,915,2.148,1005,3.659,1007,2.807,1008,4.502,1009,4.502,1010,4.502,1011,4.077,1012,3.313,1013,4.502,1014,4.077,1499,3.313,1533,4.929,1534,4.122,1535,4.122,1536,4.122,1537,4.415]],["title/modules/UserManagementPageRoutingModule.html",[336,1.014,1537,2.252]],["body/modules/UserManagementPageRoutingModule.html",[0,0.363,3,0.25,4,0.25,8,0.214,38,0.022,60,0.313,63,0.214,83,1.803,87,0.25,88,0.25,129,1.299,262,1.706,263,1.229,268,0.018,269,0.018,313,1.906,338,1.299,349,1.45,352,1.706,368,2.557,370,3.008,371,2.668,374,2.557,403,3.398,407,2.557,917,2.728,1007,3.141,1499,3.707,1537,3.998]],["title/components/ViewOrderDialog.html",[0,0.24,264,1.014]],["body/components/ViewOrderDialog.html",[0,0.357,1,0.672,2,1.211,3,0.11,4,0.11,5,0.837,6,0.837,7,0.837,8,0.094,11,1.198,12,1.648,13,1.742,14,0.837,15,2.168,16,0.792,17,2.06,18,1.56,19,2.225,20,0.656,21,0.873,27,0.974,28,1.399,30,1.873,31,0.781,33,1.325,35,1.325,37,1.028,38,0.022,39,1.062,40,0.846,41,0.922,44,1.28,46,2.493,47,2.086,48,1.28,50,0.885,52,1.354,53,1.614,54,1.979,56,1.405,60,0.311,61,2.11,62,0.937,63,0.144,64,1.717,65,0.937,66,1.962,67,1.055,68,1.962,69,1.055,70,2.383,71,1.055,72,1.717,73,1.354,74,2.225,75,0.51,76,0.937,77,0.937,78,0.837,79,1.198,80,1.198,82,0.54,83,0.792,84,1.282,85,0.749,86,1.282,87,0.204,88,0.204,89,0.636,90,1.282,93,1.717,94,1.282,95,1.282,96,0.937,97,1.282,98,1.52,99,1.282,100,1.282,101,1.282,102,1.055,103,1.282,104,1.282,105,1.282,106,1.282,107,1.198,108,1.122,110,1.985,111,1.592,113,2.178,114,1.249,117,0.672,119,1.282,120,1.282,121,2.383,122,1.282,123,1.282,124,1.282,125,1.379,127,1.379,128,2.383,129,1.187,130,1.379,131,1.379,132,1.379,133,1.379,134,1.379,136,2.11,138,1.379,139,1.717,141,2.562,143,1.52,144,2.562,146,2.383,147,1.282,148,1.122,149,1.282,150,1.282,151,2.11,152,1.832,153,1.282,154,1.717,155,1.962,156,2.11,157,2.11,158,1.379,159,2.11,161,1.282,163,1.832,165,1.832,166,1.832,167,1.832,174,0.837,189,1.949,190,0.672,191,1.832,197,2.178,200,1.962,214,0.885,216,1.379,218,1.717,223,1.832,226,1.379,234,0.837,235,1.28,236,1.146,237,0.837,238,1.648,239,0.837,240,1.742,241,0.672,242,1.656,243,0.837,244,0.672,245,0.792,246,1.028,247,1.88,248,0.636,249,0.71,250,0.837,251,0.603,252,0.837,253,1.555,254,0.603,255,0.837,256,0.974,257,0.57,258,0.404,259,0.837,260,0.636,261,0.837,262,0.636,263,0.826,264,1.399,265,2.06,266,0.837,267,0.837,268,0.01,269,0.01,271,1.877,286,0.993,320,2.196,394,2.876,418,1.492,421,1.379,489,1.52,492,1.95,493,1.52,494,1.52,495,1.52,501,1.52,513,1.627,517,1.492,523,1.198,524,1.627,539,1.055,552,1.198,559,1.52,560,1.52,561,0.993,562,2.772,586,1.96,610,3.098,611,3.093,612,1.797,613,1.797,617,1.797,618,3.866,620,3.388,621,3.741,622,4.514,623,3.741,624,3.741,625,3.388,626,1.797,628,1.797,630,2.75,631,2.75,633,1.797,635,1.797,636,2.75,637,1.379,638,1.379,639,1.797,640,3.34,641,1.797,642,1.627,643,1.492,644,1.627,645,1.797,646,1.797,647,1.492,648,1.797,649,1.797,650,1.797,651,1.797,652,2.49,653,1.797,654,1.797,655,1.797,656,3.34,657,3.34,658,1.492,659,1.797,660,1.797,661,1.797,662,1.797,663,1.797,664,1.797,665,1.797,666,1.797,667,1.797,668,1.797,669,1.797,670,2.75,671,1.797,672,1.797,673,1.797,674,4.215,675,3.098,676,3.098,677,3.098,1117,3.098,1538,2.37,1539,2.37,1540,2.37,1541,2.37,1542,3.626]],["title/coverage.html",[1543,4.176]],["body/coverage.html",[0,0.487,1,1.14,8,0.16,9,3.436,10,3.195,11,3.446,33,1.079,34,1.904,38,0.022,40,0.772,46,2.031,47,2.503,89,1.079,96,2.928,117,1.14,190,1.14,241,1.14,242,1.079,244,1.14,246,1.14,248,1.079,251,1.022,254,1.022,256,1.079,257,0.968,258,0.685,260,1.079,262,1.079,264,1.14,268,0.015,269,0.015,270,2.576,271,1.419,273,3.434,291,3.434,294,2.53,372,2.76,387,2.53,394,3.195,399,3.195,403,2.53,408,3.049,410,3.434,431,4.478,456,2.76,459,3.075,460,3.049,506,4.008,611,3.436,678,4.478,888,2.76,889,3.434,918,3.434,937,3.434,993,4.055,1015,3.434,1030,3.434,1112,3.049,1114,2.433,1146,3.436,1147,4.055,1171,2.339,1196,2.671,1205,2.671,1322,4.478,1499,2.76,1543,3.434,1544,4.02,1545,4.02,1546,4.02,1547,3.434,1548,7.166,1549,3.434,1550,7.166,1551,4.02,1552,6.69,1553,5.286,1554,4.02,1555,4.02,1556,4.02,1557,4.02,1558,4.02,1559,4.02,1560,6.273,1561,4.02,1562,4.02,1563,4.02,1564,4.02,1565,4.02,1566,4.02,1567,4.02,1568,4.02,1569,4.02,1570,4.02,1571,4.02,1572,4.02,1573,4.02,1574,4.02,1575,4.02,1576,4.02,1577,4.02,1578,3.434,1579,4.516,1580,3.434,1581,5.567,1582,3.434,1583,3.434,1584,4.02]],["title/dependencies.html",[339,1.702,1585,2.55]],["body/dependencies.html",[38,0.022,63,0.204,75,1.107,268,0.018,269,0.018,313,1.815,339,2.032,354,5.271,355,4.679,421,2.991,552,2.598,567,2.288,913,2.288,915,2.288,1177,3.236,1281,4.391,1319,4.391,1320,4.391,1586,5.14,1587,7.199,1588,5.14,1589,6.17,1590,5.14,1591,5.14,1592,5.14,1593,6.856,1594,5.14,1595,5.14,1596,5.14,1597,5.14,1598,5.14,1599,5.14,1600,5.14,1601,5.14,1602,5.14,1603,5.14,1604,5.14,1605,5.14,1606,5.14,1607,5.14,1608,5.14,1609,5.14,1610,5.14,1611,5.14,1612,5.14,1613,5.14]],["title/index.html",[20,0.648,1614,3.056]],["body/index.html",[1,1.721,2,1.42,38,0.021,89,1.629,98,2.298,143,1.783,190,1.721,241,1.96,244,1.721,246,1.721,248,1.629,251,1.543,254,1.543,256,1.629,257,1.461,260,1.629,262,1.629,264,1.721,268,0.016,269,0.016,272,2.677,332,1.681,337,4.746,338,1.024,339,2.168,340,3.633,341,3.633,342,3.633,343,3.633,344,3.82,345,2.44,346,1.783,371,1.681,408,3.225,906,4.665,907,3.633,908,3.633,909,3.633,910,3.82,952,4.665,953,3.633,954,3.633,955,3.633,956,3.82,1000,4.899,1001,3.633,1002,3.633,1003,3.633,1004,3.82,1107,4.276,1108,3.633,1109,3.633,1110,3.633,1111,3.531,1134,4.899,1135,3.633,1136,3.633,1137,3.633,1138,3.82,1145,2.475,1273,4.665,1274,3.633,1275,3.633,1276,3.633,1277,3.82,1311,4.808,1312,3.633,1313,3.633,1314,3.633,1315,3.82,1533,4.665,1534,3.633,1535,3.633,1536,3.633,1537,3.82,1614,3.633,1615,4.253,1616,4.253,1617,4.253]],["title/modules.html",[338,1.177]],["body/modules.html",[38,0.018,268,0.018,269,0.018,337,3.507,338,1.229,344,3.215,355,5.536,733,6.237,906,3.507,910,3.215,952,3.507,956,3.215,1000,3.507,1004,3.215,1107,3.215,1111,2.972,1134,3.507,1138,3.215,1192,5.013,1273,3.507,1277,3.215,1311,3.507,1315,3.215,1533,3.507,1537,3.215,1618,7.3,1619,7.3,1620,7.502]],["title/properties.html",[21,1.036,1585,2.55]],["body/properties.html",[21,1.375,38,0.021,251,1.453,268,0.019,269,0.019,286,2.395,1293,4.881,1294,4.881,1621,6.565,1622,5.714,1623,5.714,1624,5.714,1625,5.714]],["title/routes.html",[371,1.933]],["body/routes.html",[38,0.019,268,0.019,269,0.019,371,2.316]],["title/miscellaneous/variables.html",[1626,2.55,1627,3.677]],["body/miscellaneous/variables.html",[20,0.822,38,0.022,40,1.201,47,3.11,51,2.882,52,2.722,53,2.544,174,1.603,242,1.535,268,0.016,269,0.016,431,3.443,452,4.335,456,4.296,459,3.821,460,4.335,678,3.443,715,4.883,770,3.879,1547,4.883,1549,4.883,1578,3.879,1579,5.61,1580,3.879,1581,3.879,1582,4.883,1583,5.61,1626,3.879,1627,3.879,1628,6.768,1629,5.716,1630,5.716,1631,4.54,1632,4.54,1633,4.54,1634,4.54,1635,4.54,1636,4.54,1637,4.54,1638,4.54,1639,6.256,1640,4.54,1641,4.54,1642,4.54,1643,4.54,1644,4.54,1645,4.54,1646,5.716,1647,5.716,1648,5.716,1649,5.716,1650,5.716,1651,6.909,1652,5.716,1653,5.716,1654,5.716,1655,5.716,1656,5.716,1657,5.716,1658,5.716,1659,5.716,1660,5.716,1661,5.716,1662,5.716]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":96,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1294,"title":{},"body":{"components/ProfilePage.html":{},"properties.html":{}}}],["0.11.4",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1258,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["0/1",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1100,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["1",{"_index":143,"title":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{},"index.html":{}}}],["1/28",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":100,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["100",{"_index":102,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["100vh",{"_index":986,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["10px",{"_index":1099,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["11",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1437,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["13",{"_index":1435,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["14",{"_index":1616,"title":{},"body":{"index.html":{}}}],["14.0.0",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":998,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["15",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["15.2.3",{"_index":1589,"title":{},"body":{"dependencies.html":{}}}],["15.2.4",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":948,"title":{},"body":{"components/HomePage.html":{}}}],["18",{"_index":1615,"title":{},"body":{"index.html":{}}}],["18/22",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["1:393456523030:web:1d160ece617e4e8eaf2237",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1em",{"_index":1088,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["1px",{"_index":1270,"title":{},"body":{"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["2",{"_index":547,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["2.3.0",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":993,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"coverage.html":{}}}],["20.1.0",{"_index":1604,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":943,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["22",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["22px",{"_index":949,"title":{},"body":{"components/HomePage.html":{}}}],["25",{"_index":101,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["26px",{"_index":946,"title":{},"body":{"components/HomePage.html":{}}}],["27",{"_index":1617,"title":{},"body":{"index.html":{}}}],["2em",{"_index":1087,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["3",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["3/10",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":1097,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["30px",{"_index":1103,"title":{},"body":{"components/LoginPage.html":{}}}],["33",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["36em",{"_index":1101,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["393456523030",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.1.0",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1593,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":1595,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":990,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["46",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["4em",{"_index":902,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["5",{"_index":98,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"index.html":{}}}],["50",{"_index":937,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["50px",{"_index":1096,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["50rem",{"_index":1272,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["6",{"_index":1498,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["6.0.3",{"_index":1607,"title":{},"body":{"dependencies.html":{}}}],["6.1.9",{"_index":1601,"title":{},"body":{"dependencies.html":{}}}],["6/13",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["64c40",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64c40.appspot.com",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64c40.firebaseapp.com",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.5.0",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["7/21",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["75px",{"_index":1299,"title":{},"body":{"components/ProfilePage.html":{}}}],["8/24",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["8c8c8c",{"_index":950,"title":{},"body":{"components/HomePage.html":{}}}],["9.17.1",{"_index":1605,"title":{},"body":{"dependencies.html":{}}}],["a.timestamp.getdate",{"_index":649,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["a.timestamp.gettime",{"_index":1355,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["abort",{"_index":1051,"title":{},"body":{"components/LoginPage.html":{}}}],["absolute",{"_index":934,"title":{},"body":{"components/HomePage.html":{}}}],["access",{"_index":1531,"title":{},"body":{"components/UserManagementPage.html":{}}}],["accessed",{"_index":783,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["actions",{"_index":93,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["activatedroutesnapshot",{"_index":413,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":1346,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["actual_component",{"_index":267,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["actually",{"_index":835,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["adddialog",{"_index":1,"title":{"components/AddDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["adddialogref",{"_index":109,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["adddoc",{"_index":772,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["additem",{"_index":29,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["additem(item",{"_index":199,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["additem(itemtoadd",{"_index":698,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["addlimit",{"_index":588,"title":{},"body":{"components/EditDialog.html":{}}}],["addlimit(item",{"_index":206,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["address",{"_index":507,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["adds",{"_index":43,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["admin",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/UserManagementPage.html":{}}}],["adminapp",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":61,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["again",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["aizasyakair2_b6rlny9ctii",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":146,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["alert.present",{"_index":161,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["alert.service",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["alertcontroller",{"_index":74,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["alertservice",{"_index":271,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["align",{"_index":903,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["already",{"_index":851,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["analytics",{"_index":1582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":913,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":63,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":915,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1590,"title":{},"body":{"dependencies.html":{}}}],["angular/material/card",{"_index":1144,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["angular/material/dialog",{"_index":73,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/material/divider",{"_index":1142,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["angular/material/input",{"_index":1012,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["angular/material/menu",{"_index":65,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/material/paginator",{"_index":67,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/material/select",{"_index":1140,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["angular/material/sort",{"_index":69,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/material/table",{"_index":71,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/platform",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"dependencies.html":{}}}],["apikey",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":242,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":241,"title":{"components/AppComponent.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["appid",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":932,"title":{},"body":{"components/HomePage.html":{}}}],["appmodule",{"_index":337,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appname",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":344,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["array",{"_index":721,"title":{},"body":{"injectables/FirebaseService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["array.foreach(num",{"_index":1490,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["array.length",{"_index":1493,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["arrays",{"_index":1176,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["async",{"_index":28,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["auth",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.onauthstatechanged(user",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdomain",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":372,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":1624,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":294,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"coverage.html":{}}}],["available",{"_index":733,"title":{},"body":{"injectables/FirebaseService.html":{},"modules.html":{}}}],["average",{"_index":1481,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["avg",{"_index":1489,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["await",{"_index":114,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["b",{"_index":647,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["b.timestamp.getdate",{"_index":648,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["b.timestamp.gettime",{"_index":1356,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["background",{"_index":1267,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["backgroundcolor",{"_index":1232,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["bar",{"_index":1600,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":651,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["basis",{"_index":1453,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["below",{"_index":895,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["black",{"_index":546,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{}}}],["block",{"_index":1105,"title":{},"body":{"components/LoginPage.html":{}}}],["bold",{"_index":1307,"title":{},"body":{"components/ProfilePage.html":{}}}],["boolean",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["bootstrap",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":1268,"title":{},"body":{"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["bordercolor",{"_index":1231,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["bottom",{"_index":1106,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["bread",{"_index":1261,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["brief",{"_index":1329,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["browse",{"_index":1620,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["buckets",{"_index":1463,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["buckets.length",{"_index":1466,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["buckets.push(1",{"_index":1468,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["buckets.push(this.getnumitemoccurrences(order.items",{"_index":1475,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["buckets[i",{"_index":1467,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["bundledwebruntime",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":1061,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["buttons",{"_index":153,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["c",{"_index":1420,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["called",{"_index":215,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["calls",{"_index":1503,"title":{},"body":{"components/UserManagementPage.html":{}}}],["can't",{"_index":1063,"title":{},"body":{"components/LoginPage.html":{}}}],["canactivate",{"_index":379,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":412,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":155,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["canceldata",{"_index":589,"title":{},"body":{"components/EditDialog.html":{}}}],["canceldata(item",{"_index":230,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["cancelitem",{"_index":192,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["cancelled",{"_index":1343,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["cancellimit",{"_index":193,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["capacitor.config.ts",{"_index":1547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/app",{"_index":1592,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":1594,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":559,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["catch((err",{"_index":188,"title":{},"body":{"components/AddDialog.html":{},"injectables/AuthService.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["cell",{"_index":989,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["center",{"_index":905,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["change",{"_index":766,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["changed",{"_index":518,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["changedetectorref",{"_index":635,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["changes",{"_index":216,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["changing",{"_index":655,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["chart",{"_index":1187,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["chart.js",{"_index":1212,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["chartconfiguration",{"_index":1210,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["chartconfiguration['data",{"_index":1246,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["chartoptions",{"_index":1202,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["charts",{"_index":1177,"title":{},"body":{"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"dependencies.html":{}}}],["charttype",{"_index":1211,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["check",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["child",{"_index":1305,"title":{},"body":{"components/ProfilePage.html":{}}}],["claims",{"_index":744,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["class",{"_index":88,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["click)=\"additem()\">add",{"_index":233,"title":{},"body":{"components/AddDialog.html":{}}}],["clicked",{"_index":1236,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["close",{"_index":610,"title":{},"body":{"components/EditDialog.html":{},"components/ViewOrderDialog.html":{}}}],["closeadddialog",{"_index":171,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["cloud",{"_index":709,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["cluster_appmodule",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_forgotpasswordpagemodule",{"_index":907,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"index.html":{}}}],["cluster_forgotpasswordpagemodule_declarations",{"_index":909,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"index.html":{}}}],["cluster_forgotpasswordpagemodule_imports",{"_index":908,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":953,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":955,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_imports",{"_index":954,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_inventorymanagementpagemodule",{"_index":1001,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"index.html":{}}}],["cluster_inventorymanagementpagemodule_declarations",{"_index":1002,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"index.html":{}}}],["cluster_inventorymanagementpagemodule_imports",{"_index":1003,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule",{"_index":1108,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":1109,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_imports",{"_index":1110,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_ordermanagementpagemodule",{"_index":1135,"title":{},"body":{"modules/OrderManagementPageModule.html":{},"index.html":{}}}],["cluster_ordermanagementpagemodule_declarations",{"_index":1137,"title":{},"body":{"modules/OrderManagementPageModule.html":{},"index.html":{}}}],["cluster_ordermanagementpagemodule_imports",{"_index":1136,"title":{},"body":{"modules/OrderManagementPageModule.html":{},"index.html":{}}}],["cluster_pantrystatisticspagemodule",{"_index":1274,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"index.html":{}}}],["cluster_pantrystatisticspagemodule_declarations",{"_index":1275,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"index.html":{}}}],["cluster_pantrystatisticspagemodule_imports",{"_index":1276,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule",{"_index":1312,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule_declarations",{"_index":1314,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule_imports",{"_index":1313,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_usermanagementpagemodule",{"_index":1534,"title":{},"body":{"modules/UserManagementPageModule.html":{},"index.html":{}}}],["cluster_usermanagementpagemodule_declarations",{"_index":1535,"title":{},"body":{"modules/UserManagementPageModule.html":{},"index.html":{}}}],["cluster_usermanagementpagemodule_imports",{"_index":1536,"title":{},"body":{"modules/UserManagementPageModule.html":{},"index.html":{}}}],["col",{"_index":1266,"title":{},"body":{"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["col:last",{"_index":1309,"title":{},"body":{"components/ProfilePage.html":{}}}],["collapse",{"_index":1301,"title":{},"body":{"components/ProfilePage.html":{}}}],["collection",{"_index":771,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["color",{"_index":567,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserManagementPage.html":{},"dependencies.html":{}}}],["colorpickermodule",{"_index":1318,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["colors",{"_index":520,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["column",{"_index":991,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["commonmodule",{"_index":912,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["compared",{"_index":1442,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["component",{"_index":0,"title":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["component_template",{"_index":239,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"index.html":{}}}],["compute",{"_index":1455,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["computes",{"_index":1425,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["config",{"_index":1549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":159,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(\"error",{"_index":1059,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(\"getting",{"_index":1250,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(\"searching",{"_index":1260,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(\"submit",{"_index":1235,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log('calling",{"_index":848,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["console.log('done",{"_index":886,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["console.log('getperms",{"_index":1522,"title":{},"body":{"components/UserManagementPage.html":{}}}],["console.log('return",{"_index":834,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["console.log('returning",{"_index":829,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["console.log('signout",{"_index":1066,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log('user",{"_index":1075,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(d",{"_index":1520,"title":{},"body":{"components/UserManagementPage.html":{}}}],["console.log(data.status",{"_index":672,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(enddateobj.getmonth",{"_index":1244,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(err",{"_index":1079,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(fromdateobj.getmonth",{"_index":1243,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(item",{"_index":185,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["console.log(page",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(this.data",{"_index":195,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/ProfilePage.html":{}}}],["console.log(this.enddate",{"_index":1218,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.enumvals",{"_index":668,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(this.forecaster.getitemdemandbymonth(\"bread",{"_index":1263,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.forecaster.getnumorderbymonth",{"_index":1253,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.fromdate",{"_index":1217,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.nameinput",{"_index":221,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["console.log(this.pantry",{"_index":557,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["console.log(this.router.url",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(this.selectedfooditem",{"_index":1219,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.value",{"_index":669,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(this.values",{"_index":667,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(user.perms",{"_index":1525,"title":{},"body":{"components/UserManagementPage.html":{}}}],["const",{"_index":129,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":191,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["constructor(alertcontroller",{"_index":275,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(data",{"_index":513,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["constructor(dialog",{"_index":963,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["constructor(firebase",{"_index":1283,"title":{},"body":{"components/ProfilePage.html":{}}}],["constructor(firebaseservice",{"_index":32,"title":{},"body":{"components/AddDialog.html":{},"components/HomePage.html":{}}}],["constructor(forecaster",{"_index":1170,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["constructor(loadingctrl",{"_index":1018,"title":{},"body":{"injectables/LoadingService.html":{}}}],["constructor(loadingservice",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["constructor(private",{"_index":289,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["constructor(router",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginPage.html":{}}}],["container",{"_index":899,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/UserManagementPage.html":{}}}],["containing",{"_index":720,"title":{},"body":{"injectables/FirebaseService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["contains",{"_index":735,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["content",{"_index":1090,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["contents",{"_index":677,"title":{},"body":{"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["contrast",{"_index":569,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["conv",{"_index":838,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["convert",{"_index":624,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["convertitembymonth",{"_index":1163,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["convertordersbymonth",{"_index":1164,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["converts",{"_index":620,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["convolution",{"_index":1477,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["convolve",{"_index":1483,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["convolve1d(array",{"_index":1487,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["convolved",{"_index":1482,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["copy",{"_index":1488,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["copy.push(num",{"_index":1491,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["coresponding",{"_index":623,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["corresponding",{"_index":1458,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["counter",{"_index":1366,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["coverage",{"_index":1543,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":1368,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["createuserwithemailandpassword",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["cssstyledeclaration",{"_index":551,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["curmonth",{"_index":1464,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["current",{"_index":1426,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["currentdemand",{"_index":1444,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["currently",{"_index":732,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["currrentpage",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["cursor",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":743,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["custom_elements_schema",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{}}}],["customized",{"_index":281,"title":{},"body":{"injectables/AlertService.html":{}}}],["cut",{"_index":1411,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["cut.foreach(order",{"_index":1465,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["cutreshaped",{"_index":1413,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["cutreshaped.foreach(orderlist",{"_index":1415,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["d",{"_index":1421,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{}}}],["data",{"_index":113,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["data.id",{"_index":674,"title":{},"body":{"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["data.limit",{"_index":608,"title":{},"body":{"components/EditDialog.html":{}}}],["data.name",{"_index":604,"title":{},"body":{"components/EditDialog.html":{}}}],["data.quantity",{"_index":607,"title":{},"body":{"components/EditDialog.html":{}}}],["data.status",{"_index":670,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["data.timestamp.tolocalestring",{"_index":676,"title":{},"body":{"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["data:this.ordersbymonthnums",{"_index":1257,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["data['address",{"_index":808,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['description",{"_index":807,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['logourl",{"_index":809,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['name",{"_index":806,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['orderlimit",{"_index":812,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['primarycolor",{"_index":810,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['secondarycolor",{"_index":811,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["database",{"_index":219,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["datainventory",{"_index":1325,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["dataorders",{"_index":1326,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["datapantry",{"_index":1327,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["datasets",{"_index":1226,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["datatable",{"_index":1603,"title":{},"body":{"dependencies.html":{}}}],["date",{"_index":1130,"title":{},"body":{"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["date(this.enddate",{"_index":1242,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["date(this.fromdate",{"_index":1239,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["datetime",{"_index":1351,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["db",{"_index":47,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["debug",{"_index":1180,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["declarations",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["decoration",{"_index":951,"title":{},"body":{"components/HomePage.html":{}}}],["decorators",{"_index":523,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["decrement",{"_index":203,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["decrements",{"_index":202,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["default",{"_index":51,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["delete",{"_index":158,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["deletedoc",{"_index":779,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["deletedoc(docref",{"_index":864,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["demand",{"_index":1262,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["demandhist.push(element.orders",{"_index":1496,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["demote",{"_index":1510,"title":{},"body":{"components/UserManagementPage.html":{}}}],["demoted",{"_index":706,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["demoteuser",{"_index":681,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["demoteuser(uid",{"_index":701,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["dependencies",{"_index":339,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["desc",{"_index":543,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["description",{"_index":286,"title":{},"body":{"injectables/AlertService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"properties.html":{}}}],["desired",{"_index":1334,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["details",{"_index":245,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["determine",{"_index":782,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["dialog",{"_index":17,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["dialog'},{'name",{"_index":240,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["dialog.html",{"_index":19,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["dialogref",{"_index":163,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":166,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["dictionary",{"_index":742,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["difference",{"_index":1428,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["dimensional",{"_index":1476,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["direction",{"_index":1085,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["directive",{"_index":237,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["directives",{"_index":266,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["discard",{"_index":229,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["discards",{"_index":225,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["dismiss",{"_index":849,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["dismissloader",{"_index":1016,"title":{},"body":{"injectables/LoadingService.html":{}}}],["display",{"_index":1083,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["displayedcolumns",{"_index":90,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["doc",{"_index":777,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["doc(db",{"_index":844,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["doc.exists",{"_index":815,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata",{"_index":817,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['date",{"_index":840,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['imageurl",{"_index":824,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['limit",{"_index":823,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['name",{"_index":820,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['orderquan",{"_index":822,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['quantity",{"_index":821,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['status",{"_index":841,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['uid",{"_index":842,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docref",{"_index":843,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["document",{"_index":749,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["document.body.style.setproperty",{"_index":565,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["documentation",{"_index":1544,"title":{},"body":{"coverage.html":{}}}],["documentsnapshot",{"_index":712,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["dynamic",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["e4ega5wucycgjy",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":189,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["editdetailsdialog",{"_index":244,"title":{"components/EditDetailsDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["editdialog",{"_index":190,"title":{"components/EditDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["editorderdialog",{"_index":246,"title":{"components/EditOrderDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["element",{"_index":236,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["element.email",{"_index":1527,"title":{},"body":{"components/UserManagementPage.html":{}}}],["element.id",{"_index":1132,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["element.limit",{"_index":985,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["element.name",{"_index":983,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["element.perms.admin",{"_index":1528,"title":{},"body":{"components/UserManagementPage.html":{}}}],["element.perms.pantry",{"_index":1529,"title":{},"body":{"components/UserManagementPage.html":{}}}],["element.quantity",{"_index":984,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["element.timestamp.tolocalestring",{"_index":1131,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["elementref",{"_index":536,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["email",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/UserManagementPage.html":{}}}],["emited",{"_index":654,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["emitted",{"_index":1047,"title":{},"body":{"components/LoginPage.html":{}}}],["end",{"_index":1265,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["end:date",{"_index":1410,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["enddate",{"_index":1150,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["enddatechange",{"_index":1165,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["enddateobj",{"_index":1240,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["enter",{"_index":894,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{}}}],["enumvals",{"_index":612,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["environment",{"_index":1579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebaseconfig",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":560,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["error",{"_index":284,"title":{},"body":{"injectables/AlertService.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["error('food",{"_index":801,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["error('item",{"_index":850,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["error('no",{"_index":795,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["error('order",{"_index":866,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["error('pantry",{"_index":874,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["event",{"_index":128,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["event.detail.value",{"_index":1070,"title":{},"body":{"components/LoginPage.html":{}}}],["event.target",{"_index":131,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["exist",{"_index":802,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["exists",{"_index":852,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["export",{"_index":87,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["exports",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["factor",{"_index":1486,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["failed",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["falling",{"_index":1416,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["false",{"_index":53,"title":{},"body":{"components/AddDialog.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":1271,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["field",{"_index":997,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["fill",{"_index":999,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{}}}],["filled",{"_index":1357,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["filter",{"_index":652,"title":{},"body":{"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["filtervalue",{"_index":130,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["filtervalue.trim().tolowercase",{"_index":134,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["find",{"_index":138,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["firebase",{"_index":552,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"dependencies.html":{}}}],["firebase.service",{"_index":1323,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["firebase/auth",{"_index":423,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["firebase/firestore",{"_index":780,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["firebase/functions",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["firebaseconfig",{"_index":1583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebaseservice",{"_index":33,"title":{"injectables/FirebaseService.html":{}},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["flex",{"_index":1084,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["float",{"_index":1298,"title":{},"body":{"components/ProfilePage.html":{}}}],["font",{"_index":941,"title":{},"body":{"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["food",{"_index":227,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["fooditem",{"_index":76,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["fooditem(snap.id",{"_index":819,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["fooditemconv",{"_index":682,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["fooditemconv(snap",{"_index":711,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["foodlist",{"_index":1364,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["foodpantry",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forcedisable",{"_index":22,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["forecaster",{"_index":1173,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["forecasting",{"_index":1423,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["forecastservice",{"_index":1171,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["forgot",{"_index":249,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["forgotpasswordpage",{"_index":248,"title":{"components/ForgotPasswordPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["forgotpasswordpagemodule",{"_index":906,"title":{"modules/ForgotPasswordPageModule.html":{}},"body":{"modules/ForgotPasswordPageModule.html":{},"index.html":{},"modules.html":{}}}],["forgotpasswordpageroutingmodule",{"_index":910,"title":{"modules/ForgotPasswordPageRoutingModule.html":{}},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["form",{"_index":996,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["formsmodule",{"_index":914,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["found",{"_index":796,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["framework",{"_index":1625,"title":{},"body":{"properties.html":{}}}],["frequency",{"_index":1450,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["fromdate",{"_index":1151,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["fromdatechange",{"_index":1166,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["fromdateobj",{"_index":1238,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["front",{"_index":1472,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["full",{"_index":382,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["function",{"_index":710,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["functions",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["g",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gender",{"_index":992,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["general",{"_index":675,"title":{},"body":{"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["generic",{"_index":280,"title":{},"body":{"injectables/AlertService.html":{},"injectables/LoadingService.html":{}}}],["getanalytics(app",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getauth",{"_index":422,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["getauth().onauthstatechanged((user",{"_index":428,"title":{},"body":{"guards/AuthGuard.html":{}}}],["getauth(app",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcurrentuser",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["getdoc",{"_index":775,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getdoc(doc(db",{"_index":800,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getdoc(docref",{"_index":846,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getdocs",{"_index":774,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getdocs(collection(db",{"_index":793,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getenumkey",{"_index":614,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["getenumkey(status",{"_index":617,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["getfirestore",{"_index":770,"title":{},"body":{"injectables/FirebaseService.html":{},"miscellaneous/variables.html":{}}}],["getfirestore(app",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getfunctions",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"miscellaneous/variables.html":{}}}],["getinventory",{"_index":683,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getitemdemandbymonth(itemname",{"_index":1401,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getitemdemandinrange(itemname:string",{"_index":1408,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getitemsfromorders(orders",{"_index":1370,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getnumitemoccurrences(list",{"_index":1365,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getnumorder(type",{"_index":1336,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getnumorderbymonth",{"_index":1391,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getorderhistory",{"_index":1358,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getorderitems",{"_index":684,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getorderitems(order",{"_index":723,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getorders",{"_index":685,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getordersindaterange(orderlist",{"_index":1417,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getoutstandingitems",{"_index":1347,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getpage",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["getpantries",{"_index":686,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getpantry",{"_index":687,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getpantryid",{"_index":688,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getperms",{"_index":689,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getperms(params).then((res",{"_index":884,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getperms(user",{"_index":739,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["gets",{"_index":553,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getstatus",{"_index":1117,"title":{},"body":{"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["getstatus(data.status",{"_index":1542,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["getstatus(element.status",{"_index":1133,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["getstatus(status",{"_index":656,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["getusers",{"_index":690,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getusers().then(async",{"_index":875,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getxmonthitemtrend(n",{"_index":1474,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getxmonthtrend(n",{"_index":1460,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["given",{"_index":1332,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["global.scss",{"_index":1295,"title":{},"body":{"components/ProfilePage.html":{}}}],["globalmodels/fooditem",{"_index":77,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["globalmodels/order",{"_index":637,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["globalmodels/orderstatus",{"_index":638,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["globalmodels/pantry",{"_index":537,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["globalmodels/user",{"_index":781,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["grant",{"_index":1530,"title":{},"body":{"components/UserManagementPage.html":{}}}],["grantadmin",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["grantadmin(params).catch((err",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["grantadminaccess",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["grantadminaccess(uid",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["grants",{"_index":754,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["graph",{"_index":1192,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"modules.html":{}}}],["grid",{"_index":1300,"title":{},"body":{"components/ProfilePage.html":{}}}],["guard",{"_index":408,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["guards",{"_index":409,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hamburger",{"_index":930,"title":{},"body":{"components/HomePage.html":{}}}],["handler",{"_index":157,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["handling",{"_index":285,"title":{},"body":{"injectables/AlertService.html":{}}}],["header",{"_index":148,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["height",{"_index":945,"title":{},"body":{"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["here",{"_index":1065,"title":{},"body":{"components/LoginPage.html":{}}}],["hidden",{"_index":1303,"title":{},"body":{"components/ProfilePage.html":{}}}],["history",{"_index":1374,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["history.foreach(order",{"_index":1378,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["history.foreach(orderlist",{"_index":1393,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["home",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["home'},{'name",{"_index":252,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["home.page",{"_index":958,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":920,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":919,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":251,"title":{"components/HomePage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["homepagemodule",{"_index":952,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["homepageroutingmodule",{"_index":956,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["horizontal",{"_index":1091,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["html",{"_index":235,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["htmlinputelement).value",{"_index":132,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["https://ionicframework.com",{"_index":1623,"title":{},"body":{"properties.html":{}}}],["httpscallable",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["httpscallable(functions",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["icon",{"_index":508,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["iconstyle",{"_index":550,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["icontentref",{"_index":549,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["id",{"_index":139,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["identifier",{"_index":1545,"title":{},"body":{"coverage.html":{}}}],["idk",{"_index":177,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["idtoken",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!this.limitinput",{"_index":178,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["if(!userisadmin",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(fromdateobj.getmonth",{"_index":1245,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["if(item.limit",{"_index":207,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["if(this.enddate",{"_index":1241,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["if(this.nameinput",{"_index":222,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["if(this.records.paginator",{"_index":135,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["if(this.selectedfooditem",{"_index":1237,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["image",{"_index":231,"title":{},"body":{"components/AddDialog.html":{}}}],["imageurl",{"_index":183,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["img",{"_index":1094,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["implements",{"_index":12,"title":{},"body":{"components/AddDialog.html":{},"guards/AuthGuard.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["import('./forgot",{"_index":386,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./home/home.module').then",{"_index":376,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./inventory",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./login/login.module').then",{"_index":383,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./order",{"_index":393,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pantry",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./user",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1098,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["imports",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["increment",{"_index":198,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["increments",{"_index":196,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["init",{"_index":554,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["initalizes",{"_index":644,"title":{},"body":{"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["initializeapp(firebaseconfig",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initializes",{"_index":1183,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["inject",{"_index":79,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["inject(mat_dialog_data",{"_index":524,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["injectable",{"_index":270,"title":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{}},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["injectables",{"_index":272,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"index.html":{}}}],["injected",{"_index":1064,"title":{},"body":{"components/LoginPage.html":{}}}],["inline",{"_index":1104,"title":{},"body":{"components/LoginPage.html":{}}}],["input",{"_index":653,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["inputs",{"_index":1040,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["instance",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"injectables/FirebaseService.html":{}}}],["integer",{"_index":765,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["interface",{"_index":1114,"title":{"interfaces/Pantry.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}},"body":{"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":1145,"title":{},"body":{"interfaces/Pantry.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"index.html":{}}}],["intialized",{"_index":738,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["intializes",{"_index":1508,"title":{},"body":{"components/UserManagementPage.html":{}}}],["inventory",{"_index":82,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["inventorymanagementpage",{"_index":89,"title":{"components/InventoryManagementPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["inventorymanagementpage.adddialogref",{"_index":170,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["inventorymanagementpage.adddialogref.close",{"_index":172,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["inventorymanagementpage.closeadddialog",{"_index":187,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["inventorymanagementpagemodule",{"_index":1000,"title":{"modules/InventoryManagementPageModule.html":{}},"body":{"modules/InventoryManagementPageModule.html":{},"index.html":{},"modules.html":{}}}],["inventorymanagementpageroutingmodule",{"_index":1004,"title":{"modules/InventoryManagementPageRoutingModule.html":{}},"body":{"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["io.ionic.starter",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":566,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["ioncontent",{"_index":538,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["ionic",{"_index":1621,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":75,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"injectables/LoadingService.html":{},"modules/LoginPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["ionicmodule.forroot",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicons",{"_index":1606,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["ionviewwillenter",{"_index":642,"title":{},"body":{"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["isadmin",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadmin({pantry",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnan(number(v",{"_index":631,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["item",{"_index":44,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["item's",{"_index":210,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["item.limit",{"_index":208,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["item.name",{"_index":223,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["item.quantity",{"_index":200,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["itembymonth",{"_index":1152,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["itembymonthmonths",{"_index":1153,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["itembymonthnums",{"_index":1154,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["itemname",{"_index":1363,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["items",{"_index":726,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["items's",{"_index":204,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["itemtoadd",{"_index":700,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.id",{"_index":845,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.imageurl",{"_index":854,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.limit",{"_index":855,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.name",{"_index":856,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.quantity",{"_index":857,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoremove",{"_index":758,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoremove.id",{"_index":863,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate",{"_index":761,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate.id",{"_index":858,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate.limit",{"_index":861,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate.name",{"_index":860,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate.quantity",{"_index":862,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["justify",{"_index":1089,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["kernel",{"_index":1478,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["kernel.length",{"_index":1495,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["label",{"_index":1228,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["labels",{"_index":1224,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["later",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["left",{"_index":935,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["legend",{"_index":234,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["length",{"_index":95,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["limit",{"_index":92,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["limitinput",{"_index":23,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["line",{"_index":944,"title":{},"body":{"components/HomePage.html":{}}}],["linear",{"_index":1448,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["linechartdataitem",{"_index":1155,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["linechartdataorders",{"_index":1156,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["linechartlegend",{"_index":1157,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["linechartoptions",{"_index":1158,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["link",{"_index":897,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["list",{"_index":1341,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["list.foreach(item",{"_index":1367,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["lists",{"_index":1372,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["loadchildren",{"_index":375,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":1022,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loading.present",{"_index":1028,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loading.service",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["loadingcontroller",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["loadingctrl",{"_index":1020,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingservice",{"_index":34,"title":{"injectables/LoadingService.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"coverage.html":{}}}],["log",{"_index":1082,"title":{},"body":{"components/LoginPage.html":{}}}],["logged",{"_index":426,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FirebaseService.html":{}}}],["login",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{}}}],["login'},{'name",{"_index":255,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["login.page",{"_index":1113,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Pantry.html":{}}}],["login.page.html",{"_index":1032,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":1031,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":254,"title":{"components/LoginPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["loginpagemodule",{"_index":1107,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"index.html":{},"modules.html":{}}}],["loginpageroutingmodule",{"_index":1111,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Pantry.html":{},"index.html":{},"modules.html":{}}}],["logo",{"_index":544,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["logourl",{"_index":575,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"components/ProfilePage.html":{}}}],["logs",{"_index":785,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["long",{"_index":1397,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["m",{"_index":377,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.forgotpasswordpagemodule",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":378,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.inventorymanagementpagemodule",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":384,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.ordermanagementpagemodule",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.pantrystatisticspagemodule",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilepagemodule",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.usermanagementpagemodule",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["made",{"_index":226,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["mainly",{"_index":628,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["make",{"_index":425,"title":{},"body":{"guards/AuthGuard.html":{}}}],["makeadmin",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["makeadmin(params).then",{"_index":885,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["makeadmin(user",{"_index":1501,"title":{},"body":{"components/UserManagementPage.html":{}}}],["manage",{"_index":931,"title":{},"body":{"components/HomePage.html":{}}}],["management",{"_index":83,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["management'},{'name",{"_index":253,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["management.module').then",{"_index":391,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["management.module.ts",{"_index":1005,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["management.page",{"_index":1007,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["management.page.html",{"_index":84,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["management.page.scss",{"_index":86,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["management.page.ts",{"_index":11,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["management.page.ts:105",{"_index":968,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:110",{"_index":1124,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:115",{"_index":965,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:126",{"_index":57,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:127",{"_index":58,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:128",{"_index":55,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:129",{"_index":59,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:130",{"_index":36,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:134",{"_index":1125,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:135",{"_index":49,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:142",{"_index":42,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:146",{"_index":1126,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:162",{"_index":634,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:163",{"_index":632,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:164",{"_index":616,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:165",{"_index":629,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:170",{"_index":592,"title":{},"body":{"components/EditDialog.html":{},"components/EditOrderDialog.html":{}}}],["management.page.ts:171",{"_index":602,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:173",{"_index":600,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:174",{"_index":601,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:176",{"_index":603,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:177",{"_index":596,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:181",{"_index":619,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:185",{"_index":593,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:189",{"_index":627,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:19",{"_index":1512,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:194",{"_index":597,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:20",{"_index":1517,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:203",{"_index":594,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:207",{"_index":1538,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["management.page.ts:208",{"_index":1541,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["management.page.ts:209",{"_index":1540,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["management.page.ts:21",{"_index":1513,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:217",{"_index":598,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:218",{"_index":1539,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["management.page.ts:22",{"_index":1514,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:23",{"_index":1515,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:231",{"_index":599,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:24",{"_index":1516,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:244",{"_index":595,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:25",{"_index":1129,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:26",{"_index":976,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["management.page.ts:27",{"_index":981,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/UserManagementPage.html":{}}}],["management.page.ts:28",{"_index":977,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["management.page.ts:29",{"_index":978,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:30",{"_index":979,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:31",{"_index":1511,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:32",{"_index":980,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:33",{"_index":982,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:34",{"_index":974,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:35",{"_index":1119,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:36",{"_index":964,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:37",{"_index":1128,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:39",{"_index":975,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:42",{"_index":1506,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:43",{"_index":1123,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:44",{"_index":967,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:47",{"_index":1121,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:48",{"_index":973,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:54",{"_index":1122,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:55",{"_index":966,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:59",{"_index":972,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:63",{"_index":1502,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:67",{"_index":971,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:75",{"_index":1127,"title":{},"body":{"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["management.page.ts:77",{"_index":969,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:89",{"_index":1120,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:97",{"_index":970,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management/inventory",{"_index":10,"title":{},"body":{"components/AddDialog.html":{},"modules/AppRoutingModule.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"coverage.html":{}}}],["management/order",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["management/user",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"coverage.html":{}}}],["margin",{"_index":900,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["mat",{"_index":988,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["mat_dialog_data",{"_index":80,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["matcardmodule",{"_index":1143,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["matching",{"_index":269,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":72,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matdialogmodule",{"_index":1014,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["matdialogref",{"_index":639,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matdividermodule",{"_index":1141,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["matinputmodule",{"_index":1011,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["matmenumodule",{"_index":1013,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["matmenutrigger",{"_index":64,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matpaginator",{"_index":66,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matpaginatormodule",{"_index":1009,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["matselectmodule",{"_index":1139,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["matsort",{"_index":68,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matsortmodule",{"_index":1010,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["mattable",{"_index":636,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["mattabledatasource",{"_index":70,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["mattabledatasource(data",{"_index":118,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/UserManagementPage.html":{}}}],["mattablemodule",{"_index":1008,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["max",{"_index":585,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["maxorder",{"_index":509,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["measurementid",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["message",{"_index":149,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["messagingsenderid",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["method",{"_index":923,"title":{},"body":{"components/HomePage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["min",{"_index":1095,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["miscellaneous",{"_index":1626,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modifed",{"_index":205,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["modified",{"_index":211,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["modify",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["module",{"_index":336,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{}},"body":{}}],["modules",{"_index":338,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["month",{"_index":1186,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["monthly",{"_index":1452,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["months",{"_index":1454,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["n",{"_index":1422,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["nameinput",{"_index":24,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["navigate",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{}}}],["navigatetopage",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["navigatetopage(page",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["negation",{"_index":1469,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["negative",{"_index":1457,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["new",{"_index":117,"title":{},"body":{"components/AddDialog.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["newstatus",{"_index":763,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["ng2",{"_index":1281,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":125,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["ngchartsmodule",{"_index":1280,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{}}}],["ngmodule",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["ngoninit",{"_index":30,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["ngx",{"_index":1319,"title":{},"body":{"modules/ProfilePageModule.html":{},"dependencies.html":{}}}],["none",{"_index":609,"title":{},"body":{"components/EditDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{}}}],["norm",{"_index":1484,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["normalization",{"_index":1485,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["note",{"_index":1479,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["now",{"_index":1461,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["null",{"_index":790,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["num",{"_index":1492,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["number",{"_index":54,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["numbers",{"_index":1331,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["numeric",{"_index":1399,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["numerical",{"_index":621,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["object",{"_index":715,"title":{},"body":{"injectables/FirebaseService.html":{},"miscellaneous/variables.html":{}}}],["object.values(orderstatus).filter((v",{"_index":630,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["objects",{"_index":722,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["observable",{"_index":418,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["occurences",{"_index":1362,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["occurring",{"_index":1471,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["occurs",{"_index":1050,"title":{},"body":{"components/LoginPage.html":{}}}],["ok",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["onauthstatechanged",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["onauthstatechanged(auth",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["one",{"_index":606,"title":{},"body":{"components/EditDialog.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["openadddialog",{"_index":168,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["openalert",{"_index":960,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["openalert(item",{"_index":145,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["openalert(order",{"_index":661,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["openeditdetailsdialog",{"_index":1282,"title":{},"body":{"components/ProfilePage.html":{}}}],["openeditdetailsdialog(data",{"_index":563,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["openeditdialog",{"_index":961,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["openeditdialog(item",{"_index":162,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["openeditdialog(order",{"_index":663,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["opens",{"_index":562,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["openviewdialog",{"_index":1118,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["openviewdialog(order",{"_index":665,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["optional",{"_index":41,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["optionally",{"_index":1335,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["order",{"_index":247,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["order(snap.id",{"_index":839,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["order.id",{"_index":865,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["order.ref.path",{"_index":831,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["order.status",{"_index":1339,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["order.timestamp.getfullyear",{"_index":1383,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["order.timestamp.getmonth",{"_index":1381,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["order.timestamp.gettime",{"_index":1418,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderconv",{"_index":691,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["orderconv(snap",{"_index":747,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["orderhistorybymonth",{"_index":1375,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderlimit",{"_index":581,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["orderlist",{"_index":1352,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderlist.foreach(order",{"_index":1390,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderlist.length",{"_index":1395,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderlist[0].timestamp.tolocalestring('default",{"_index":1396,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["ordermanagementpage",{"_index":256,"title":{"components/OrderManagementPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["ordermanagementpagemodule",{"_index":1134,"title":{"modules/OrderManagementPageModule.html":{}},"body":{"modules/OrderManagementPageModule.html":{},"index.html":{},"modules.html":{}}}],["ordermanagementpageroutingmodule",{"_index":1138,"title":{"modules/OrderManagementPageRoutingModule.html":{}},"body":{"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["orderpath",{"_index":830,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["orders",{"_index":586,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["orders.foreach(order",{"_index":1371,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orders.sort((a",{"_index":1354,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orders.sort(function(a",{"_index":646,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["ordersbymonth",{"_index":1159,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["ordersbymonthmonths",{"_index":1160,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["ordersbymonthnums",{"_index":1161,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["orderstatus",{"_index":618,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["orderstatus.processing",{"_index":1348,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderstatus['order",{"_index":1359,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderstatus[status",{"_index":657,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["out",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"index.html":{}}}],["outer",{"_index":813,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["overlay",{"_index":1024,"title":{},"body":{"injectables/LoadingService.html":{}}}],["overview",{"_index":1614,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":947,"title":{},"body":{"components/HomePage.html":{}}}],["p8h232s2f7",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":1585,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1086,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["paddingnum",{"_index":1494,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["page",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["pagesize",{"_index":97,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pagesizeoptions",{"_index":99,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["paginator",{"_index":104,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pantries",{"_index":731,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["pantry",{"_index":258,"title":{"interfaces/Pantry.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["pantry's",{"_index":737,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["pantry('id",{"_index":542,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["pantry(snapshot.id",{"_index":805,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pantry.address",{"_index":867,"title":{},"body":{"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["pantry.desc",{"_index":868,"title":{},"body":{"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["pantry.logourl",{"_index":869,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pantry.name",{"_index":870,"title":{},"body":{"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["pantry.orderlimit",{"_index":871,"title":{},"body":{"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["pantry.primarycolor",{"_index":872,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["pantry.secondarycolor",{"_index":873,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["pantryconv",{"_index":692,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pantryconv(snapshot",{"_index":750,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pantryid",{"_index":679,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["pantryname",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["pantrystatisticspage",{"_index":257,"title":{"components/PantryStatisticsPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["pantrystatisticspagemodule",{"_index":1273,"title":{"modules/PantryStatisticsPageModule.html":{}},"body":{"modules/PantryStatisticsPageModule.html":{},"index.html":{},"modules.html":{}}}],["pantrystatisticspageroutingmodule",{"_index":1277,"title":{"modules/PantryStatisticsPageRoutingModule.html":{}},"body":{"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["pantry}).then((res",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["param",{"_index":197,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["parameter",{"_index":718,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["params",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["parse",{"_index":1369,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["particular",{"_index":727,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["password",{"_index":385,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/LoginPage.html":{}}}],["password'},{'name",{"_index":250,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["password).then(async",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["password.module').then",{"_index":388,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["password.module.ts",{"_index":911,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{}}}],["password.page",{"_index":916,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{}}}],["password.page.html",{"_index":891,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.scss",{"_index":890,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts",{"_index":889,"title":{},"body":{"components/ForgotPasswordPage.html":{},"coverage.html":{}}}],["password.page.ts:12",{"_index":893,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:8",{"_index":892,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password/forgot",{"_index":387,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"coverage.html":{}}}],["path",{"_index":374,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["pathmatch",{"_index":381,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patry",{"_index":924,"title":{},"body":{"components/HomePage.html":{}}}],["percent",{"_index":1427,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period",{"_index":1459,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period1",{"_index":1438,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period1.length",{"_index":1441,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period2",{"_index":1439,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period2.length",{"_index":1440,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["permissions",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["perms",{"_index":705,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["picked",{"_index":1344,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["picker",{"_index":1320,"title":{},"body":{"modules/ProfilePageModule.html":{},"dependencies.html":{}}}],["please",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pointer",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["position",{"_index":933,"title":{},"body":{"components/HomePage.html":{}}}],["positive",{"_index":1456,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["prediction",{"_index":1424,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["preloadallmodules",{"_index":369,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["premission",{"_index":741,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["presentalert",{"_index":274,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentalert(header",{"_index":277,"title":{},"body":{"injectables/AlertService.html":{}}}],["presents",{"_index":279,"title":{},"body":{"injectables/AlertService.html":{}}}],["pressed",{"_index":228,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["presses",{"_index":1190,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["previous",{"_index":1429,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["previousdemand",{"_index":1446,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["prevyeardiff",{"_index":1430,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["prevyearitemdiff(itemname",{"_index":1443,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["primary",{"_index":282,"title":{},"body":{"injectables/AlertService.html":{},"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["primarycolor",{"_index":577,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"components/ProfilePage.html":{}}}],["private",{"_index":111,"title":{},"body":{"components/AddDialog.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["production",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{}}}],["profile'},{'name",{"_index":261,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["profile.page",{"_index":1317,"title":{},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{}}}],["profile.page.html",{"_index":540,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["profile.page.scss",{"_index":541,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["profilepage",{"_index":260,"title":{"components/ProfilePage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["profilepagemodule",{"_index":1311,"title":{"modules/ProfilePageModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"index.html":{},"modules.html":{}}}],["profilepageroutingmodule",{"_index":1315,"title":{"modules/ProfilePageRoutingModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["project",{"_index":1622,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":419,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["promise((resolve",{"_index":427,"title":{},"body":{"guards/AuthGuard.html":{}}}],["promise(async",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["promote",{"_index":1505,"title":{},"body":{"components/UserManagementPage.html":{}}}],["promoted",{"_index":755,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["promoteuser",{"_index":693,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["promoteuser(uid",{"_index":752,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["proper",{"_index":1188,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["properties",{"_index":21,"title":{"properties.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"properties.html":{}}}],["provide",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":287,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["providers",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":110,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pubrouter",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["pull",{"_index":836,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pulls",{"_index":1042,"title":{},"body":{"components/LoginPage.html":{}}}],["quantity",{"_index":91,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["quantityinput",{"_index":25,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["query",{"_index":1400,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["querysnapshot",{"_index":776,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["range",{"_index":1406,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["recent",{"_index":1470,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["recieve",{"_index":896,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["records",{"_index":94,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["red",{"_index":545,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["redirectto",{"_index":380,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regression",{"_index":1449,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["reject",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":152,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["removeadmin",{"_index":1500,"title":{},"body":{"components/UserManagementPage.html":{}}}],["removeadmin(user",{"_index":1509,"title":{},"body":{"components/UserManagementPage.html":{}}}],["removed",{"_index":141,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["removeitem",{"_index":590,"title":{},"body":{"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["removeitem(item",{"_index":137,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["removeitem(itemtoremove",{"_index":756,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["removeitem(order",{"_index":659,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["removelimit",{"_index":591,"title":{},"body":{"components/EditDialog.html":{}}}],["removelimit(item",{"_index":212,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["removes",{"_index":658,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["representaion",{"_index":625,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["representation",{"_index":717,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["res.data",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["reset",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"index.html":{}}}],["reshapes",{"_index":1387,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["resolve",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(true",{"_index":430,"title":{},"body":{"guards/AuthGuard.html":{}}}],["resolve(user",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsive",{"_index":1203,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["restorefocus",{"_index":165,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["result",{"_index":708,"title":{},"body":{"injectables/FirebaseService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["result.data.users",{"_index":877,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["results",{"_index":268,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retireves",{"_index":725,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["retreives",{"_index":1507,"title":{},"body":{"components/UserManagementPage.html":{}}}],["retrieve",{"_index":561,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["retrieves",{"_index":643,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["retrives",{"_index":728,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["return",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["returns",{"_index":48,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["retval",{"_index":1337,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.concat(order.items",{"_index":1349,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.length",{"_index":1379,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.push",{"_index":1394,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.push([order",{"_index":1380,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.push(order",{"_index":1360,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.reverse",{"_index":1386,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval[i].push(order",{"_index":1385,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval[i][0].timestamp.getfullyear",{"_index":1384,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval[i][0].timestamp.getmonth",{"_index":1382,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["revoke",{"_index":1532,"title":{},"body":{"components/UserManagementPage.html":{}}}],["revokeadmin",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["revokeadmin(params).catch((err",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["revokeadmin(params).then",{"_index":887,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["revokeadminaccess",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["revokeadminaccess(uid",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["rgba(0,255,0,0.3",{"_index":1233,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["rgba(255,0,0,0.3",{"_index":1259,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["right",{"_index":936,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["role",{"_index":156,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["root",{"_index":288,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["root'},{'name",{"_index":243,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["route",{"_index":417,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginPage.html":{}}}],["routereusestrategy",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":370,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":917,"title":{},"body":{"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":415,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":371,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["routing.module.ts",{"_index":368,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["row",{"_index":1093,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["row:first",{"_index":1304,"title":{},"body":{"components/ProfilePage.html":{}}}],["row:last",{"_index":1310,"title":{},"body":{"components/ProfilePage.html":{}}}],["rxjs",{"_index":421,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{},"dependencies.html":{}}}],["save",{"_index":587,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{}}}],["saved",{"_index":217,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["savedata",{"_index":511,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/ProfilePage.html":{}}}],["savedata(item",{"_index":220,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["saveorder",{"_index":615,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["saveorder(data",{"_index":626,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["saves",{"_index":517,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["schemas",{"_index":1006,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{}}}],["screen",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["search",{"_index":1407,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["secondary",{"_index":510,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["secondarycolor",{"_index":579,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["secondaycolor",{"_index":1115,"title":{},"body":{"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{}}}],["select",{"_index":1048,"title":{},"body":{"components/LoginPage.html":{}}}],["selectchange",{"_index":1167,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["selectedfooditem",{"_index":1162,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["selection",{"_index":1043,"title":{},"body":{"components/LoginPage.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["self",{"_index":904,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["send",{"_index":898,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["separates",{"_index":1175,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["service",{"_index":1504,"title":{},"body":{"components/UserManagementPage.html":{}}}],["services/alert.service",{"_index":539,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["services/auth.service",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{}}}],["services/firebase.service",{"_index":78,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["services/forecast.service",{"_index":1213,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["services/guards/auth.guard",{"_index":373,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["services/loading.service",{"_index":81,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["sessionstorage.getitem('pantryid",{"_index":789,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["sessionstorage.getitem('uid",{"_index":787,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["sessionstorage.setitem('pantryid",{"_index":1077,"title":{},"body":{"components/LoginPage.html":{}}}],["sessionstorage.setitem('uid",{"_index":1076,"title":{},"body":{"components/LoginPage.html":{}}}],["set",{"_index":925,"title":{},"body":{"components/HomePage.html":{}}}],["setdata(datapantry",{"_index":1324,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["setdoc",{"_index":778,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["setdoc(docref",{"_index":853,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["setpantryselection",{"_index":1033,"title":{},"body":{"components/LoginPage.html":{}}}],["setpantryselection(event",{"_index":1044,"title":{},"body":{"components/LoginPage.html":{}}}],["sets",{"_index":1046,"title":{},"body":{"components/LoginPage.html":{}}}],["showloader",{"_index":1017,"title":{},"body":{"injectables/LoadingService.html":{}}}],["showpage",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["shows",{"_index":1026,"title":{},"body":{"injectables/LoadingService.html":{}}}],["sign",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["signed",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(email",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinbutton",{"_index":1034,"title":{},"body":{"components/LoginPage.html":{}}}],["signinwithemailandpassword",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemailandpassword(auth",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["signout(auth",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["signs",{"_index":1039,"title":{},"body":{"components/LoginPage.html":{}}}],["signup",{"_index":1102,"title":{},"body":{"components/LoginPage.html":{}}}],["size",{"_index":942,"title":{},"body":{"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["snap",{"_index":716,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snap.data",{"_index":818,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot",{"_index":714,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.data",{"_index":804,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.docs",{"_index":825,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.exists",{"_index":847,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.foreach((doc",{"_index":814,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.foreach((item",{"_index":832,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.foreach((pantry",{"_index":798,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["solid",{"_index":1269,"title":{},"body":{"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["something",{"_index":176,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["sort",{"_index":106,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["sorted",{"_index":995,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{}}}],["sortorderlistbymonth(orderlist",{"_index":1388,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["sortordersbydate(orders",{"_index":1353,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["sorts",{"_index":1350,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["specific",{"_index":703,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["spinner",{"_index":1023,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/.../auth.service.ts",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firebase.service.ts",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":367,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/forgot",{"_index":888,"title":{},"body":{"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/home/home",{"_index":959,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/home/home.module.ts",{"_index":957,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/home/home.page.ts",{"_index":918,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/home/home.page.ts:11",{"_index":926,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:12",{"_index":921,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:20",{"_index":922,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/inventory",{"_index":9,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/login/login",{"_index":1116,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/login/login.module.ts",{"_index":1112,"title":{},"body":{"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"coverage.html":{}}}],["src/app/login/login.page.ts",{"_index":1030,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/login/login.page.ts:14",{"_index":1054,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:15",{"_index":1056,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:16",{"_index":1055,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:17",{"_index":1037,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:28",{"_index":1041,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:40",{"_index":1038,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:59",{"_index":1045,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:67",{"_index":1049,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:93",{"_index":1052,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:97",{"_index":1053,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/order",{"_index":611,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["src/app/pantry",{"_index":1146,"title":{},"body":{"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"coverage.html":{}}}],["src/app/profile/profile",{"_index":1321,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["src/app/profile/profile.module.ts",{"_index":1316,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/profile/profile.page.ts",{"_index":506,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{},"coverage.html":{}}}],["src/app/profile/profile.page.ts:116",{"_index":519,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:16",{"_index":1291,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:17",{"_index":1288,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:20",{"_index":1290,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:21",{"_index":1284,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:24",{"_index":1289,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:31",{"_index":1285,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:45",{"_index":1286,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:55",{"_index":1287,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:66",{"_index":531,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:67",{"_index":527,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:68",{"_index":522,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:69",{"_index":529,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:70",{"_index":533,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:71",{"_index":535,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:72",{"_index":514,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:74",{"_index":525,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:79",{"_index":515,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:86",{"_index":516,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/services/alert.service.ts",{"_index":273,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/services/alert.service.ts:18",{"_index":278,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:7",{"_index":276,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/auth.service.ts",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth.service.ts:34",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:43",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:51",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:74",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:78",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:82",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:93",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/firebase.service.ts",{"_index":678,"title":{},"body":{"injectables/FirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/firebase.service.ts:108",{"_index":719,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:138",{"_index":713,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:147",{"_index":729,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:180",{"_index":724,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:205",{"_index":748,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:218",{"_index":699,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:247",{"_index":760,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:25",{"_index":769,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:26",{"_index":697,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:268",{"_index":757,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:285",{"_index":764,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:304",{"_index":768,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:329",{"_index":745,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:351",{"_index":740,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:368",{"_index":753,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:386",{"_index":702,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:43",{"_index":730,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:68",{"_index":736,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:76",{"_index":734,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:99",{"_index":751,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/forecast.service.ts",{"_index":1322,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["src/app/services/guards/auth.guard.ts",{"_index":410,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/services/guards/auth.guard.ts:11",{"_index":411,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/guards/auth.guard.ts:22",{"_index":416,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/loading.service.ts",{"_index":1015,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading.service.ts:14",{"_index":1025,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:22",{"_index":1021,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:7",{"_index":1019,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/user",{"_index":1499,"title":{},"body":{"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1578,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":1581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1264,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["start.gettime",{"_index":1419,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["start:date",{"_index":1409,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["state",{"_index":414,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1546,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":108,"title":{},"body":{"components/AddDialog.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["stating",{"_index":1333,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["statistics",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["statistics'},{'name",{"_index":259,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["statistics.module').then",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["statistics.module.ts",{"_index":1278,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{}}}],["statistics.page",{"_index":1279,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{}}}],["statistics.page.html",{"_index":1149,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["statistics.page.scss",{"_index":1148,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["statistics.page.ts",{"_index":1147,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"coverage.html":{}}}],["statistics.page.ts:127",{"_index":1201,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:128",{"_index":1200,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:129",{"_index":1204,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:132",{"_index":1172,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:143",{"_index":1182,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:24",{"_index":1194,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:25",{"_index":1193,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:26",{"_index":1195,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:27",{"_index":1209,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:28",{"_index":1206,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:29",{"_index":1207,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:30",{"_index":1208,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:31",{"_index":1197,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:32",{"_index":1198,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:33",{"_index":1199,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:38",{"_index":1174,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:48",{"_index":1181,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:55",{"_index":1179,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:62",{"_index":1184,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:69",{"_index":1178,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:79",{"_index":1185,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:98",{"_index":1189,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics/pantry",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"coverage.html":{}}}],["status",{"_index":622,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["storagebucket",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":56,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["strong",{"_index":940,"title":{},"body":{"components/HomePage.html":{}}}],["style",{"_index":1302,"title":{},"body":{"components/ProfilePage.html":{}}}],["styles",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["styleurls",{"_index":85,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["sublist",{"_index":1373,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["submit",{"_index":1191,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["sum",{"_index":1402,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["support",{"_index":1618,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":150,"title":{},"body":{"components/AddDialog.html":{},"guards/AuthGuard.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["svg",{"_index":1619,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":1602,"title":{},"body":{"dependencies.html":{}}}],["t1",{"_index":1432,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["t2",{"_index":1431,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["t3",{"_index":1434,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["t4",{"_index":1436,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["table",{"_index":46,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1584,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":786,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["temp2",{"_index":788,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["tension",{"_index":1230,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["text",{"_index":154,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ViewOrderDialog.html":{}}}],["th.mat",{"_index":994,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["theme",{"_index":1292,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.actions.focus",{"_index":167,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["this.address",{"_index":574,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.alertcontroller.create",{"_index":147,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.alertservice.presentalert('error",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.alertservice.presentalert('login",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.getcurrentuser",{"_index":1073,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authservice.signout",{"_index":1067,"title":{},"body":{"components/LoginPage.html":{}}}],["this.calclinearregression(buckets",{"_index":1473,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.calcprevdate(now",{"_index":1462,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.calcprevdate(t2",{"_index":1433,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.cancelitem",{"_index":201,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.cancellimit",{"_index":209,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.convertordersbymonth",{"_index":1254,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.convolve1d(demandhist",{"_index":1497,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.data.address",{"_index":521,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.desc",{"_index":526,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.id",{"_index":572,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.logourl",{"_index":528,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.name",{"_index":194,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/ProfilePage.html":{}}}],["this.data.orderlimit",{"_index":530,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.primarycolor",{"_index":532,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.secondarycolor",{"_index":534,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.description",{"_index":573,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.dialog.open(adddialog",{"_index":169,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.dialog.open(editdetailsdialog",{"_index":564,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.dialog.open(editdialog",{"_index":164,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.dialog.open(editorderdialog",{"_index":664,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.dialog.open(vieworderdialog",{"_index":666,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.email",{"_index":1068,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebase.getorders",{"_index":645,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.firebase.getpantry",{"_index":556,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.firebaseservice.additem(item).then",{"_index":186,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.firebaseservice.demoteuser(user.uid).then(async",{"_index":1526,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.getinventory",{"_index":115,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.firebaseservice.getorders",{"_index":1248,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.firebaseservice.getpantries",{"_index":1058,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebaseservice.getpantry",{"_index":927,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.firebaseservice.getpantryid",{"_index":1518,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.getperms(user",{"_index":1524,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.getusers",{"_index":1519,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.pantryid",{"_index":1072,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebaseservice.promoteuser(user.uid).then(async",{"_index":1521,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.removeitem(item",{"_index":140,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.firebaseservice.updateinventoryitem(item",{"_index":224,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.firebaseservice.updateorderstatus(data",{"_index":673,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.firebaseservice.updatepantry(pantry",{"_index":583,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.firebaseservice.userid",{"_index":1074,"title":{},"body":{"components/LoginPage.html":{}}}],["this.forcedisable",{"_index":173,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.forecaster.getnumorderbymonth",{"_index":1252,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.forecaster.setdata(pantry",{"_index":1249,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.getenumkey(this.data.status",{"_index":633,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.getnumitemoccurrences(order.items",{"_index":1403,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getnumitemoccurrences(this.getitemsfromorders(period1",{"_index":1445,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getnumitemoccurrences(this.getitemsfromorders(period2",{"_index":1447,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getorderhistory",{"_index":1376,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getorderitems(snap",{"_index":837,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.getordersindaterange(history",{"_index":1412,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getperms(toadd",{"_index":881,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.icon",{"_index":576,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.inventory",{"_index":1247,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.itembymonth",{"_index":1234,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonth.foreach(element",{"_index":1214,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonthmonths",{"_index":1225,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonthmonths.push(element.month",{"_index":1215,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonthnums",{"_index":1227,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonthnums.push(element.items",{"_index":1216,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.length",{"_index":119,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.limitinput",{"_index":179,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.linechartdataitem",{"_index":1223,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.linechartdataorders",{"_index":1255,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.loadingctrl.create",{"_index":1027,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingctrl.dismiss",{"_index":1029,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingservice.dismissloader",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["this.loadingservice.showloader",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["this.logourl",{"_index":928,"title":{},"body":{"components/HomePage.html":{}}}],["this.maxorder",{"_index":582,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.name",{"_index":571,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.nameinput",{"_index":181,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.nameinput.tolowercase",{"_index":180,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.orderconv(doc",{"_index":827,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.orderhistorybymonth",{"_index":1392,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.orders",{"_index":1328,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.orders.foreach(order",{"_index":1338,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.orders?.length",{"_index":1340,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.ordersbymonth",{"_index":1251,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.ordersbymonth.foreach(element",{"_index":1220,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.ordersbymonthmonths",{"_index":1256,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.ordersbymonthmonths.push(element.month",{"_index":1221,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.ordersbymonthnums.push(element.orders",{"_index":1222,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.paginator",{"_index":122,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.pantries",{"_index":1057,"title":{},"body":{"components/LoginPage.html":{}}}],["this.pantry",{"_index":555,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.pantry.length",{"_index":1071,"title":{},"body":{"components/LoginPage.html":{}}}],["this.pantry.logourl",{"_index":929,"title":{},"body":{"components/HomePage.html":{}}}],["this.pantry.primarycolor",{"_index":568,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.pantry.secondarycolor",{"_index":570,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.pantryconv(snapshot",{"_index":803,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.pantryid",{"_index":792,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["this.password",{"_index":1069,"title":{},"body":{"components/LoginPage.html":{}}}],["this.primary",{"_index":578,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.pubrouter",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["this.quantityinput",{"_index":182,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.records",{"_index":116,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/UserManagementPage.html":{}}}],["this.records._updatechangesubscription",{"_index":144,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.data",{"_index":650,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.data.length",{"_index":120,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.data.splice(this.records.data.indexof(item",{"_index":142,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.records.data.splice(this.records.data.indexof(order",{"_index":660,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.filter",{"_index":133,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.paginator",{"_index":121,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.paginator.firstpage",{"_index":136,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.sort",{"_index":123,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.removeitem(item",{"_index":160,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.removeitem(order",{"_index":662,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.router.navigatebyurl(\"forgot",{"_index":1080,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigatebyurl(\"login",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigatebyurl(\"signup",{"_index":1081,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigatebyurl('/home",{"_index":1078,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigatebyurl('login",{"_index":429,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl(page",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.url",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["this.secondary",{"_index":580,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.selectedfooditem?this.selectedfooditem",{"_index":1229,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.signout",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sort",{"_index":124,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.sortorderlistbymonth(cut",{"_index":1414,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.sortordersbydate(history",{"_index":1377,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.sortordersbydate(orderlist",{"_index":1389,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.sortordersbydate(retval",{"_index":1361,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.updatecolors",{"_index":558,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.updatetablesource",{"_index":126,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.urlinput",{"_index":184,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.userid",{"_index":791,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.values.indexof(this.value",{"_index":671,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["throw",{"_index":794,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["timestamp",{"_index":640,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["timestamped",{"_index":1404,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["timestampeditems",{"_index":1196,"title":{"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{}},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["timestampedorders",{"_index":1205,"title":{"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["title",{"_index":1297,"title":{},"body":{"components/ProfilePage.html":{}}}],["toadd",{"_index":826,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toadd.perms",{"_index":880,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["todo",{"_index":424,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FirebaseService.html":{}}}],["toforgotpassword",{"_index":1035,"title":{},"body":{"components/LoginPage.html":{}}}],["token",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar",{"_index":1296,"title":{},"body":{"components/ProfilePage.html":{}}}],["top",{"_index":901,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["toreturn",{"_index":797,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toreturn.push(this.fooditemconv(doc",{"_index":816,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toreturn.push(this.fooditemconv(item",{"_index":833,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toreturn.push(this.pantryconv(pantry",{"_index":799,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toreturn.push(toadd",{"_index":828,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["tosignup",{"_index":1036,"title":{},"body":{"components/LoginPage.html":{}}}],["total",{"_index":1330,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["transform",{"_index":938,"title":{},"body":{"components/HomePage.html":{}}}],["translatey",{"_index":939,"title":{},"body":{"components/HomePage.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["trend",{"_index":1451,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["true",{"_index":174,"title":{},"body":{"components/AddDialog.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["tslib",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1342,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["ui",{"_index":45,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/ProfilePage.html":{}}}],["uid",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["undefined",{"_index":213,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["unknown",{"_index":707,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["unsub",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["up",{"_index":1345,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["update",{"_index":218,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["update/change",{"_index":784,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatecolors",{"_index":512,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["updatedoc",{"_index":773,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatedoc(docref",{"_index":859,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatefilter",{"_index":962,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["updatefilter(event",{"_index":127,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["updateinventoryitem",{"_index":694,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updateinventoryitem(itemtoupdate",{"_index":759,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updateitemchart",{"_index":1168,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["updateitemgraph",{"_index":1169,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["updateorderstatus",{"_index":695,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updateorderstatus(order",{"_index":762,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatepantry",{"_index":696,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatepantry(pantry",{"_index":767,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updates",{"_index":214,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["updatetablesource",{"_index":112,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["url",{"_index":232,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{}}}],["urlinput",{"_index":26,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["urltree",{"_index":420,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":605,"title":{},"body":{"components/EditDialog.html":{},"components/HomePage.html":{}}}],["useclass",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":283,"title":{},"body":{"injectables/AlertService.html":{},"injectables/FirebaseService.html":{}}}],["user",{"_index":263,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["user's",{"_index":704,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["user(user.uid",{"_index":878,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["user.email",{"_index":879,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["user.perms",{"_index":1523,"title":{},"body":{"components/UserManagementPage.html":{}}}],["user.uid",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["userarr",{"_index":876,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["userarr.push(toadd",{"_index":882,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["userarr.reverse",{"_index":883,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["usercred",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercred.user.getidtoken",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":680,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["userisadmin",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermanagementpage",{"_index":262,"title":{"components/UserManagementPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["usermanagementpagemodule",{"_index":1533,"title":{"modules/UserManagementPageModule.html":{}},"body":{"modules/UserManagementPageModule.html":{},"index.html":{},"modules.html":{}}}],["usermanagementpageroutingmodule",{"_index":1537,"title":{"modules/UserManagementPageRoutingModule.html":{}},"body":{"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["users",{"_index":746,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["uses",{"_index":1480,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["value",{"_index":52,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":613,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["var",{"_index":238,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["variable",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1627,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1293,"title":{},"body":{"components/ProfilePage.html":{},"properties.html":{}}}],["view",{"_index":265,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild",{"_index":62,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild('icontent",{"_index":548,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["viewchild(matmenutrigger",{"_index":107,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild(matpaginator",{"_index":103,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild(matsort",{"_index":105,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild(mattable",{"_index":641,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["vieworderdialog",{"_index":264,"title":{"components/ViewOrderDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["void",{"_index":50,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["want",{"_index":151,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["way",{"_index":1060,"title":{},"body":{"components/LoginPage.html":{}}}],["webdir",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weekly",{"_index":584,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["weight",{"_index":1306,"title":{},"body":{"components/ProfilePage.html":{}}}],["white",{"_index":1308,"title":{},"body":{"components/ProfilePage.html":{}}}],["width",{"_index":987,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["within",{"_index":1405,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["work",{"_index":1062,"title":{},"body":{"components/LoginPage.html":{}}}],["wrap",{"_index":1092,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["write",{"_index":175,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["www",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["year",{"_index":1398,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["zone.js",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddDialog.html":{"url":"components/AddDialog.html","title":"component - AddDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventory-management/inventory-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                add-dialog\n            \n\n\n\n\n            \n                templateUrl\n                add-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forceDisable\n                            \n                            \n                                limitInput\n                            \n                            \n                                nameInput\n                            \n                            \n                                quantityInput\n                            \n                            \n                                urlInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService, loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventory-management/inventory-management.page.ts:130\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        AddItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:142\n                \n            \n\n\n            \n                \n                    Adds item to the UI table and the DB\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        forceDisable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limitInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantityInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        urlInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:129\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog, } from '@angular/material/dialog';\nimport { AlertController, } from '@ionic/angular';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { LoadingService } from '../services/loading.service';\n\n\n\n\n@Component({\n  selector: 'inventory-management',\n  templateUrl: './inventory-management.page.html',\n  styleUrls: ['./inventory-management.page.scss'],\n})\nexport class InventoryManagementPage implements AfterViewInit{\n  \n\n  displayedColumns: string[] = ['name', 'quantity', 'limit', 'actions'];\n  records: MatTableDataSource\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n\n  static addDialogRef: any\n\n  constructor(\n    public dialog: MatDialog,\n    private alertController: AlertController,\n    private firebaseService: FirebaseService,\n    ) { }\n\n  async ngOnInit() {    \n    \n  }\n\n  async updateTableSource() {\n    let data = await this.firebaseService.getInventory()\n    this.records = new MatTableDataSource(data)\n    this.length = this.records.data.length;\n    this.records.paginator = this.paginator;\n    this.records.sort = this.sort;\n  }\n  async ngAfterViewInit() {\n    await this.updateTableSource()\n  }\n\n  updateFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n  async removeItem(item: FoodItem) {\n    //find the index from id\n    await this.firebaseService.removeItem(item)\n    let removed = this.records.data.splice(this.records.data.indexOf(item), 1)\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n \n  async openAlert(item: FoodItem){\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {}\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(item)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n   openEditDialog(item: FoodItem){\n    const dialogRef = this.dialog.open(EditDialog, {restoreFocus: false, data: item});\n    dialogRef.afterClosed().subscribe( () => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n   async openAddDialog(){\n    const dialogRef = this.dialog.open(AddDialog, {restoreFocus: false});\n    InventoryManagementPage.addDialogRef = dialogRef\n    dialogRef.afterClosed().subscribe( () => {\n      this.updateTableSource()\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    })\n  }\n\n  static async closeAddDialog() {\n    await InventoryManagementPage.addDialogRef.close()\n  }\n\n}\n\n@Component({\n  selector: 'add-dialog',\n  templateUrl: 'add-dialog.html'\n})\nexport class AddDialog implements OnInit {\n  nameInput: string\n  quantityInput: number\n  limitInput: number\n  urlInput: string\n  forceDisable = false\n  constructor(\n    private firebaseService: FirebaseService,\n    private loadingService: LoadingService\n    ){}\n  ngOnInit(): void {\n      \n  }\n\n  /**\n   * Adds item to the UI table and the DB\n   */\n  async AddItem(){\n    this.forceDisable = true\n    //write to db or something idk\n    if(!this.limitInput) {\n      this.limitInput = 0\n    }\n    let item: FoodItem = {\n      id: this.nameInput.toLowerCase(),\n      name: this.nameInput,\n      quantity: this.quantityInput,\n      limit: this.limitInput,\n      imageUrl: this.urlInput\n    }\n    console.log(item)\n    await this.firebaseService.addItem(item).then(() => {\n      InventoryManagementPage.closeAddDialog()\n      this.forceDisable = false\n    }).catch((err) => {\n      this.forceDisable = false\n    })\n    this.forceDisable = false\n  }\n}\n\n@Component({\n  selector: 'edit-dialog',\n  templateUrl: 'edit-dialog.html'\n})\nexport class EditDialog implements OnInit{\n  constructor(@Inject(MAT_DIALOG_DATA) public data: FoodItem,\n  private firebaseService: FirebaseService){}\n  private cancelItem = 0;\n  private cancelLimit = 0;\n  //private name = this.data.name;\n  nameInput: string = this.data.name\n  ngOnInit() {\n    console.log(this.data)\n  }\n\n  /**\n   * increments item quantity\n   * @param item FoodItem to increment\n   */\n  addItem(item: FoodItem){\n    item.quantity = item.quantity + 1;\n    this.cancelItem = this.cancelItem - 1;\n  }\n\n  /**\n   * decrements item quantity\n   * @param item FoodItem to decrement\n   */\n  removeItem(item: FoodItem){\n    item.quantity = item.quantity - 1;\n    this.cancelItem = this.cancelItem + 1;\n  }\n\n  /**\n   * increments and items's limit\n   * @param item FoodItem that will have limit modifed\n   */\n  addLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit + 1\n      this.cancelLimit = this.cancelLimit - 1\n    } else {\n      item.limit = 1\n      this.cancelLimit = this.cancelLimit - 1\n    }\n  }\n\n  /**\n   * decrements and item's limit\n   * @param item FoodItem that will have limit modified\n   */\n  removeLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit - 1;\n      this.cancelLimit = this.cancelLimit + 1\n    } else if(item.limit == 1) {\n      item.limit = undefined;\n      this.cancelLimit = this.cancelLimit + 1\n    }\n  }\n\n  /**\n   * Updates DB info for an item. Called when item changes are saved\n   * @param item FoodItem to update in database\n   */\n  async saveData(item: FoodItem){\n    //write to db\n    console.log(this.nameInput)\n    if(this.nameInput != \"\"){\n      item.name = this.nameInput\n    }\n    await this.firebaseService.updateInventoryItem(item)\n  }\n\n  /**\n   * Discards changes made to food item. Called when Cancel is pressed\n   * @param item FoodItem to discard changes for\n   */\n  cancelData(item: FoodItem){\n    item.quantity = item.quantity + this.cancelItem;\n    if(item.limit){\n      item.limit = item.limit + this.cancelLimit\n      if(item.limit == 0){\n        item.limit = undefined\n      }\n    }\n  }\n}\n    \n\n    \n        Add Item\n\n\n    \n        \n            Name\n            \n        \n        \n            Image URL\n            \n        \n        \n            Quantity\n            \n        \n        \n            Limit\n            \n        \n    \n        \n\n\n\n    \n        \n            Cancel\n        \n        \n            = 0 && (limitInput >= 0 || !limitInput) && urlInput) || forceDisable\" \n            (click)=\"AddItem()\">Add Item\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add Item                        Name                                        Image URL                                        Quantity                                        Limit                                                        Cancel                            = 0 && (limitInput >= 0 || !limitInput) && urlInput) || forceDisable\"             (click)=\"AddItem()\">Add Item            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/alert.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                presentAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/alert.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentAlert(header: string, message: string, buttons: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:18\n                \n            \n\n\n            \n                \n                    Presents a generic alert that can be customized.\nThis is primary used for error handling.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Header for alert\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message for alert\n\n                                    \n                                \n                                \n                                    buttons\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Buttons for alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private alertController: AlertController) { }\n\n  /**\n   * Presents a generic alert that can be customized.\n   * This is primary used for error handling.\n   * @param header Header for alert\n   * @param message Message for alert\n   * @param buttons Buttons for alert\n   */\n  async presentAlert(header: string, message: string, buttons: any[]) {\n    const alert = await this.alertController.create({\n      header: header,\n      message: message,\n      buttons: buttons\n    })\n\n    await alert.present()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                currrentPage\n                            \n                            \n                                pubRouter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPage\n                            \n                            \n                                navigateToPage\n                            \n                            \n                                showPage\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPage\n                        \n                    \n                \n            \n            \n                \ngetPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToPage\n                        \n                    \n                \n            \n            \n                \nnavigateToPage(page: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPage\n                        \n                    \n                \n            \n            \n                \nshowPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currrentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pubRouter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { LoadingService } from './services/loading.service';\nimport { LoadingController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  currrentPage: string\n  pubRouter: Router\n  authService: AuthService\n\n  constructor(private router: Router) {\n    this.pubRouter = router\n  }\n\n  navigateToPage(page: string){\n    this.router.navigateByUrl(page)\n  }\n\n  \n  signOut() {\n    this.router.navigateByUrl(\"login\")\n  }\n\n  getPage(){\n    console.log(this.router.url)\n    return this.router.url\n  }\n\n  showPage(){\n    let page = this.router.url\n    console.log(page)\n    console.log(page !== '/login')\n    return (page !== '/login')\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n          Navigate To a Screen\n        \n      \n      \n        \n          \n            Home\n          \n          \n            Inventory Management\n          \n          \n            Order Management\n          \n          \n            User Management\n          \n          \n            Pantry Statistics\n          \n          \n            Profile and Instance Management\n          \n        \n      \n    \n    \n      \n        \n          \n            \n          \n          Food Pantry - Admin\n          Sign Out\n        \n      \n      \n     \n\n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                .menu-item {\n    cursor: pointer;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Navigate To a Screen                                                  Home                                Inventory Management                                Order Management                                User Management                                Pantry Statistics                                Profile and Instance Management                                                                                        Food Pantry - Admin          Sign Out                         '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, IonicModule.forRoot(), AppRoutingModule, BrowserAnimationsModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n  \n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './services/guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./home/home.module').then( m => m.HomePageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'forgot-password',\n    loadChildren: () => \"import('./forgot-password/forgot-password.module').then( m => m.ForgotPasswordPageModule)\"\n  },\n  {\n    path: 'inventory-management',\n    loadChildren: () => \"import('./inventory-management/inventory-management.module').then( m => m.InventoryManagementPageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'order-management',\n    loadChildren: () => \"import('./order-management/order-management.module').then( m => m.OrderManagementPageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'profile',\n    loadChildren: () => \"import('./profile/profile.module').then( m => m.ProfilePageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'pantry-statistics',\n    loadChildren: () => \"import('./pantry-statistics/pantry-statistics.module').then( m => m.PantryStatisticsPageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'user-management',\n    loadChildren: () => \"import('./user-management/user-management.module').then( m => m.UserManagementPageModule)\",\n    canActivate: [AuthGuard]\n  },\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guards/auth.guard.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { getAuth } from 'firebase/auth';\nimport 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router\n  ) {\n\n  }\n\n  /*\n    TODO: Make sure the logged in user is an admin!!!!!!!!!!!!!!\n  */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      return new Promise((resolve) => {\n        getAuth().onAuthStateChanged((user) => {\n          if (!user) {\n            this.router.navigateByUrl('login')\n          }\n          resolve(true);\n        });\n      });\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                    Async\n                                grantAdminAccess\n                            \n                            \n                                    Async\n                                revokeAdminAccess\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                    Static\n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        grantAdminAccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    grantAdminAccess(uid: string, pantry: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pantry\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        revokeAdminAccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    revokeAdminAccess(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(email: string, password: string, pantry: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pantry\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { \n  getAuth,\n  onAuthStateChanged,\n  signOut, \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword \n} from \"firebase/auth\"\n\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\nimport { LoadingService } from './loading.service';\nimport {authentication } from 'src/main';\nimport { Observable } from 'rxjs';\nimport { AlertService } from './alert.service';\n\nconst functions = getFunctions()\n\n//const auth = getAuth()\n\nconst auth = authentication\n\nonAuthStateChanged(auth, (user) => {\n  if (user) {\n    //user is signed in\n    const uid = user.uid\n  } else {\n    //No user signed in\n  }\n})\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private loadingService: LoadingService,\n    private alertService: AlertService\n  ) {\n\n   }\n\n   async getCurrentUser(): Promise {\n    return new Promise(async (resolve, reject) => {\n      const unsub = await auth.onAuthStateChanged(user => {\n        resolve(user)\n      }, reject)\n    })\n  }\n\n   async signIn(email: string, password: string, pantry: string) {\n    await this.loadingService.showLoader()\n    await signInWithEmailAndPassword(auth, email, password).then(async (userCred) => {\n      const isAdmin = httpsCallable(functions, 'isAdmin')\n      // let token = await userCred.user.getIdToken()\n      // let params = {\n      //   idToken: token\n      // }\n      await isAdmin({pantry: pantry}).then((res) => {\n        this.loadingService.dismissLoader()\n        //res.data will be true or false\n        let userIsAdmin = res.data\n        if(!userIsAdmin) {\n          this.signOut()\n          this.alertService.presentAlert('Login Failed', 'Please check your credentials and try again later.', ['Ok'])\n        }\n      })\n    }).catch((err) => {\n      this.alertService.presentAlert('Login Failed', 'Please check your credentials and try again later.', ['Ok'])\n      this.loadingService.dismissLoader()\n    })\n   }\n\n   signOut() {\n    signOut(auth)\n   }\n\n   static signOut() {\n    signOut(auth)\n   }\n\n   async grantAdminAccess(uid: string, pantry: string) {\n    const grantAdmin = httpsCallable(functions, 'makeAdmin')\n    let params = {\n      user: uid,\n      pantryName: pantry\n    }\n    await grantAdmin(params).catch((err) => {\n      this.alertService.presentAlert('Error', 'Could not modify permissions. Please try again later.', ['Ok'])\n    })\n   }\n\n   async revokeAdminAccess(uid: string) {\n    const revokeAdmin = httpsCallable(functions, 'revokeAdmin')\n    let params = {\n      user: uid\n    }\n    await revokeAdmin(params).catch((err) => {\n      this.alertService.presentAlert('Error', 'Could not modify permissions. Please try again later.', ['Ok'])\n    })\n   }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditDetailsDialog.html":{"url":"components/EditDetailsDialog.html","title":"component - EditDetailsDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditDetailsDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-details-dialog\n            \n\n\n\n\n            \n                templateUrl\n                edit-details-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                address\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                maxOrder\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                primary\n                            \n                            \n                                    Public\n                                secondary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveData\n                            \n                            \n                                updateColors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Pantry, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.page.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Pantry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveData\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:86\n                \n            \n\n\n            \n                \n                    Saves the pantry data that is changed in the edit dialog\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateColors\n                        \n                    \n                \n            \n            \n                \nupdateColors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:116\n                \n            \n\n\n            \n                \n                    Updates UI Colors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.address\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pantry\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.desc\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.logoUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        maxOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.data.orderLimit\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.name\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.primaryColor\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        secondary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.secondaryColor\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { FirebaseService } from '../services/firebase.service';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { IonContent } from '@ionic/angular';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  pantry: Pantry = new Pantry('id', 'name', 'desc', 'address', 'logo', 'red', 'black', 2, [], [], [])\n  @ViewChild (MatMenuTrigger) actions: MatMenuTrigger\n\n  @ViewChild('iContent', {static: true})\n  private iContentRef: ElementRef\n  private iConStyle: CSSStyleDeclaration\n  constructor(\n    private firebase: FirebaseService,\n    public dialog: MatDialog,\n    private alertService: AlertService\n  ) { }\n\n  /**\n   * Gets pantry data on page init\n   */\n  async ngOnInit() {\n    try {\n      this.pantry = await this.firebase.getPantry()\n      console.log(this.pantry)\n      this.updateColors()\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n  }\n\n  /**\n   * Opens the Pantry edit dialog\n   * @param data Pantry to Edit\n   */\n  openEditDetailsDialog(data: Pantry){\n    const dialogRef = this.dialog.open(EditDetailsDialog, {restoreFocus: false, data: data});\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n    });\n  }\n\n  /**\n   * Updates UI Colors\n   */\n  updateColors(){\n    document.body.style.setProperty('--ion-color-primary', this.pantry.primaryColor)\n    document.body.style.setProperty('--ion-color-primary-contrast', this.pantry.secondaryColor)\n  }\n\n}\n\n@Component({\n  selector: 'edit-details-dialog',\n  templateUrl: 'edit-details-dialog.html'\n}) export class EditDetailsDialog implements OnInit {\n  public name: string = this.data.name\n  public description: string = this.data.desc\n  public address: string = this.data.address\n  public icon: string = this.data.logoUrl\n  public primary: string = this.data.primaryColor\n  public secondary: string = this.data.secondaryColor\n  public maxOrder: number = this.data.orderLimit\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Pantry,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n  ){}\n\n  ngOnInit(): void {\n    // console.log(this.data)\n  }\n\n  /**\n   * Saves the pantry data that is changed in the edit dialog\n   */\n  async saveData(){\n    let pantry: Pantry = {\n      \"name\": this.name,\n      \"id\": this.data.id,\n      \"desc\": this.description,\n      \"address\": this.address,\n      \"logoUrl\": this.icon,\n      \"primaryColor\": this.primary,\n      \"secondaryColor\": this.secondary,\n      \"orderLimit\": this.maxOrder\n    }\n    this.data.name = this.name\n    this.data.desc = this.description\n    this.data.address = this.address\n    this.data.logoUrl = this.icon\n    this.data.primaryColor = this.primary\n    this.data.secondaryColor = this.secondary\n    this.data.orderLimit = this.maxOrder\n    try {\n      await this.firebaseService.updatePantry(pantry)\n      this.updateColors()\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n  /**\n   * Updates UI Colors\n   */\n  updateColors(){\n    document.body.style.setProperty('--ion-color-primary', this.data.primaryColor)\n    document.body.style.setProperty('--ion-color-primary-contrast', this.data.secondaryColor)\n  }\n\n}\n\n    \n\n    \n        Edit Pantry Details\n\n\n        \n            Pantry Name\n            \n                \n            \n            Description\n            \n                \n            \n            Address\n            \n                \n            \n            Logo Url\n            \n                \n            \n            Weekly Max Orders\n            \n                \n            \n            Primary Color\n            \n            Secondary Color\n            \n        \n\n\n\n    \n        \n            Cancel\n        \n        \n            Save\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Edit Pantry Details                    Pantry Name                                                    Description                                                    Address                                                    Logo Url                                                    Weekly Max Orders                                                    Primary Color                        Secondary Color                                            Cancel                            Save            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditDetailsDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditDialog.html":{"url":"components/EditDialog.html","title":"component - EditDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventory-management/inventory-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-dialog\n            \n\n\n\n\n            \n                templateUrl\n                edit-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cancelItem\n                            \n                            \n                                    Private\n                                cancelLimit\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                nameInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                addLimit\n                            \n                            \n                                cancelData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeItem\n                            \n                            \n                                removeLimit\n                            \n                            \n                                    Async\n                                saveData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: FoodItem, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventory-management/inventory-management.page.ts:170\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    FoodItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:185\n                \n            \n\n\n            \n                \n                    increments item quantity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to increment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addLimit\n                        \n                    \n                \n            \n            \n                \naddLimit(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:203\n                \n            \n\n\n            \n                \n                    increments and items's limit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem that will have limit modifed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelData\n                        \n                    \n                \n            \n            \n                \ncancelData(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:244\n                \n            \n\n\n            \n                \n                    Discards changes made to food item. Called when Cancel is pressed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to discard changes for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:194\n                \n            \n\n\n            \n                \n                    decrements item quantity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to decrement\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeLimit\n                        \n                    \n                \n            \n            \n                \nremoveLimit(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:217\n                \n            \n\n\n            \n                \n                    decrements and item's limit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem that will have limit modified\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveData\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveData(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:231\n                \n            \n\n\n            \n                \n                    Updates DB info for an item. Called when item changes are saved\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to update in database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cancelItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:173\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cancelLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:174\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FoodItem\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.name\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:176\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog, } from '@angular/material/dialog';\nimport { AlertController, } from '@ionic/angular';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { LoadingService } from '../services/loading.service';\n\n\n\n\n@Component({\n  selector: 'inventory-management',\n  templateUrl: './inventory-management.page.html',\n  styleUrls: ['./inventory-management.page.scss'],\n})\nexport class InventoryManagementPage implements AfterViewInit{\n  \n\n  displayedColumns: string[] = ['name', 'quantity', 'limit', 'actions'];\n  records: MatTableDataSource\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n\n  static addDialogRef: any\n\n  constructor(\n    public dialog: MatDialog,\n    private alertController: AlertController,\n    private firebaseService: FirebaseService,\n    ) { }\n\n  async ngOnInit() {    \n    \n  }\n\n  async updateTableSource() {\n    let data = await this.firebaseService.getInventory()\n    this.records = new MatTableDataSource(data)\n    this.length = this.records.data.length;\n    this.records.paginator = this.paginator;\n    this.records.sort = this.sort;\n  }\n  async ngAfterViewInit() {\n    await this.updateTableSource()\n  }\n\n  updateFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n  async removeItem(item: FoodItem) {\n    //find the index from id\n    await this.firebaseService.removeItem(item)\n    let removed = this.records.data.splice(this.records.data.indexOf(item), 1)\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n \n  async openAlert(item: FoodItem){\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {}\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(item)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n   openEditDialog(item: FoodItem){\n    const dialogRef = this.dialog.open(EditDialog, {restoreFocus: false, data: item});\n    dialogRef.afterClosed().subscribe( () => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n   async openAddDialog(){\n    const dialogRef = this.dialog.open(AddDialog, {restoreFocus: false});\n    InventoryManagementPage.addDialogRef = dialogRef\n    dialogRef.afterClosed().subscribe( () => {\n      this.updateTableSource()\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    })\n  }\n\n  static async closeAddDialog() {\n    await InventoryManagementPage.addDialogRef.close()\n  }\n\n}\n\n@Component({\n  selector: 'add-dialog',\n  templateUrl: 'add-dialog.html'\n})\nexport class AddDialog implements OnInit {\n  nameInput: string\n  quantityInput: number\n  limitInput: number\n  urlInput: string\n  forceDisable = false\n  constructor(\n    private firebaseService: FirebaseService,\n    private loadingService: LoadingService\n    ){}\n  ngOnInit(): void {\n      \n  }\n\n  /**\n   * Adds item to the UI table and the DB\n   */\n  async AddItem(){\n    this.forceDisable = true\n    //write to db or something idk\n    if(!this.limitInput) {\n      this.limitInput = 0\n    }\n    let item: FoodItem = {\n      id: this.nameInput.toLowerCase(),\n      name: this.nameInput,\n      quantity: this.quantityInput,\n      limit: this.limitInput,\n      imageUrl: this.urlInput\n    }\n    console.log(item)\n    await this.firebaseService.addItem(item).then(() => {\n      InventoryManagementPage.closeAddDialog()\n      this.forceDisable = false\n    }).catch((err) => {\n      this.forceDisable = false\n    })\n    this.forceDisable = false\n  }\n}\n\n@Component({\n  selector: 'edit-dialog',\n  templateUrl: 'edit-dialog.html'\n})\nexport class EditDialog implements OnInit{\n  constructor(@Inject(MAT_DIALOG_DATA) public data: FoodItem,\n  private firebaseService: FirebaseService){}\n  private cancelItem = 0;\n  private cancelLimit = 0;\n  //private name = this.data.name;\n  nameInput: string = this.data.name\n  ngOnInit() {\n    console.log(this.data)\n  }\n\n  /**\n   * increments item quantity\n   * @param item FoodItem to increment\n   */\n  addItem(item: FoodItem){\n    item.quantity = item.quantity + 1;\n    this.cancelItem = this.cancelItem - 1;\n  }\n\n  /**\n   * decrements item quantity\n   * @param item FoodItem to decrement\n   */\n  removeItem(item: FoodItem){\n    item.quantity = item.quantity - 1;\n    this.cancelItem = this.cancelItem + 1;\n  }\n\n  /**\n   * increments and items's limit\n   * @param item FoodItem that will have limit modifed\n   */\n  addLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit + 1\n      this.cancelLimit = this.cancelLimit - 1\n    } else {\n      item.limit = 1\n      this.cancelLimit = this.cancelLimit - 1\n    }\n  }\n\n  /**\n   * decrements and item's limit\n   * @param item FoodItem that will have limit modified\n   */\n  removeLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit - 1;\n      this.cancelLimit = this.cancelLimit + 1\n    } else if(item.limit == 1) {\n      item.limit = undefined;\n      this.cancelLimit = this.cancelLimit + 1\n    }\n  }\n\n  /**\n   * Updates DB info for an item. Called when item changes are saved\n   * @param item FoodItem to update in database\n   */\n  async saveData(item: FoodItem){\n    //write to db\n    console.log(this.nameInput)\n    if(this.nameInput != \"\"){\n      item.name = this.nameInput\n    }\n    await this.firebaseService.updateInventoryItem(item)\n  }\n\n  /**\n   * Discards changes made to food item. Called when Cancel is pressed\n   * @param item FoodItem to discard changes for\n   */\n  cancelData(item: FoodItem){\n    item.quantity = item.quantity + this.cancelItem;\n    if(item.limit){\n      item.limit = item.limit + this.cancelLimit\n      if(item.limit == 0){\n        item.limit = undefined\n      }\n    }\n  }\n}\n    \n\n    \n        {{data.name}}\n\n    If an item has no limit, use the buttons to add one.\n    \n        \n            Name:\n            \n                \n            \n        \n        \n            Quantity: {{data.quantity}}\n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n        \n        \n            \n                Limit: {{data.limit}}\n            \n            \n                Limit: None\n            \n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n        \n    \n\n\n    \n        \n            \n                Close\n            \n            \n                Save\n            \n        \n    \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.name}}    If an item has no limit, use the buttons to add one.                        Name:                                                                    Quantity: {{data.quantity}}                                                                                                                                                                                                    Limit: {{data.limit}}                                        Limit: None                                                                                                                                                                                                                        Close                                        Save                              '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditOrderDialog.html":{"url":"components/EditOrderDialog.html","title":"component - EditOrderDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditOrderDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-management/order-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-order-dialog\n            \n\n\n\n\n            \n                templateUrl\n                edit-order-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                enumvals\n                            \n                            \n                                value\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEnumKey\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Order, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-management/order-management.page.ts:164\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Order\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEnumKey\n                        \n                    \n                \n            \n            \n                \ngetEnumKey(status: OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:181\n                \n            \n\n\n            \n                \n                    Converts the numerical order status to the coresponding string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        OrderStatus to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        String representaion of OrderStatus\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveOrder(data: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:189\n                \n            \n\n\n            \n                \n                    Saves the changes made to an order in the DB (mainly order status)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to update in the DB\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:165\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enumvals\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(OrderStatus).filter((v) => !isNaN(Number(v)))\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.getEnumKey(this.data.status)\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(OrderStatus).filter((v) => isNaN(Number(v)))\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:162\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Order } from '../../../../globalModels/order';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { AlertController } from '@ionic/angular';\nimport { Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { Observable, from } from 'rxjs';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-order-management',\n  templateUrl: './order-management.page.html',\n  styleUrls: ['./order-management.page.scss'],\n})\n\nexport class OrderManagementPage implements AfterViewInit {\n\n  displayedColumns: string[] = ['timestamp', 'id', 'status', 'actions'];\n  records: MatTableDataSource = new MatTableDataSource([]);\n\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatTable, { static: true }) table: MatTable;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n  constructor(\n    public dialog: MatDialog,\n    private firebase: FirebaseService,\n    private alertController: AlertController,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async ionViewWillEnter() {\n\n  }\n\n  /**\n   * Retrieves orders from the DB and initalizes table.\n   */\n  async ngAfterViewInit() {\n    try {\n      let orders = await this.firebase.getOrders()\n      // orders.sort(function(a, b){\n      //   return b.timestamp.getDate() - a.timestamp.getDate()\n      // })\n      this.records.data = orders\n      this.length = this.records.data.length\n      this.records.paginator = this.paginator;\n      this.records.sort = this.sort;\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n\n  /**\n   * Updates the table based on the value in the filter input\n   * @param event Event emited by filter changing\n   */\n  updateFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Removes an order from the table\n   * @param order Order to be removed\n   */\n  removeItem(order: Order) {\n    //find the index from id\n    let removed = this.records.data.splice(this.records.data.indexOf(order), 1)\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n\n  /**\n   * Opens an alert for the user for confirm if they want to remove an order\n   * @param order Order to be removed\n   */\n  async openAlert(order: Order) {\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => { }\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(order)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param order Order to edit\n   */\n  openEditDialog(order: Order) {\n    const dialogRef = this.dialog.open(EditOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * Opens the order view dialog\n   * @param order Order to view\n   */\n  openViewDialog(order: Order) {\n    const dialogRef = this.dialog.open(ViewOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n}\n\n\n@Component({\n  selector: 'edit-order-dialog',\n  templateUrl: 'edit-order-dialog.html'\n})\n\nexport class EditOrderDialog implements OnInit {\n  values = Object.values(OrderStatus).filter((v) => isNaN(Number(v)))\n  enumvals = Object.values(OrderStatus).filter((v) => !isNaN(Number(v)))\n  value = this.getEnumKey(this.data.status)\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n\n  ngOnInit() {\n\n    // console.log(this.values)\n    // console.log(this.enumvals)\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getEnumKey(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Saves the changes made to an order in the DB (mainly order status)\n   * @param data Order to update in the DB\n   */\n  async saveOrder(data: Order) {\n    console.log(this.value)\n    data.status = this.values.indexOf(this.value) + 1\n    console.log(data.status)\n    try {\n      this.firebaseService.updateOrderStatus(data, data.status)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update order status. Please try again later.', ['Ok'])\n    }\n    \n  }\n}\n\n\n@Component({\n  selector: 'view-order-dialog',\n  templateUrl: 'view-order-dialog.html'\n})\nexport class ViewOrderDialog implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order) { }\n  ngOnInit() {\n\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n}\n    \n\n    \n        Order Number: {{data.id}}\n\n    \n        General\n        Order Number: {{data.id}}\n        Timestamp: {{data.timestamp.toLocaleString()}}\n        \n            \n                Status\n                \n                    \n                        {{status}}\n                    \n                \n            \n        \n        \n        \n            \n                Order Contents:\n                \n                    \n                        \n                            \n                                {{item.name}}, {{item.quantity}}\n                            \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        \n            Cancel\n        \n        \n            Save\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Order Number: {{data.id}}            General        Order Number: {{data.id}}        Timestamp: {{data.timestamp.toLocaleString()}}                                    Status                                                            {{status}}                                                                                                    Order Contents:                                                                                                                        {{item.name}}, {{item.quantity}}                                                                                                                                                                    Cancel                            Save            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditOrderDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseService.html":{"url":"injectables/FirebaseService.html","title":"injectable - FirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pantryId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addItem\n                            \n                            \n                                    Async\n                                demoteUser\n                            \n                            \n                                foodItemConv\n                            \n                            \n                                    Async\n                                getInventory\n                            \n                            \n                                    Async\n                                getOrderItems\n                            \n                            \n                                    Async\n                                getOrders\n                            \n                            \n                                    Async\n                                getPantries\n                            \n                            \n                                    Async\n                                getPantry\n                            \n                            \n                                getPantryId\n                            \n                            \n                                    Async\n                                getPerms\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                orderConv\n                            \n                            \n                                pantryConv\n                            \n                            \n                                    Async\n                                promoteUser\n                            \n                            \n                                    Async\n                                removeItem\n                            \n                            \n                                    Async\n                                updateInventoryItem\n                            \n                            \n                                    Async\n                                updateOrderStatus\n                            \n                            \n                                    Async\n                                updatePantry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/firebase.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    addItem(itemToAdd: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:218\n                \n            \n\n\n            \n                \n                    Adds a new item to the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    itemToAdd\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to add to the database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        demoteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    demoteUser(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:386\n                \n            \n\n\n            \n                \n                    Removes a specific user's admin perms\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        UID of user to be demoted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        result of revokeAdmin cloud function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        foodItemConv\n                        \n                    \n                \n            \n            \n                \nfoodItemConv(snap: DocumentSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:138\n                \n            \n\n\n            \n                \n                    Converts Firebase Snapshot into Food Item Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    snap\n                                    \n                                            DocumentSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Firebase representation of a food item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        FoodItem object representaion of parameter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getInventory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInventory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:108\n                \n            \n\n\n            \n                \n                    Retrieves the inventory from the firebase database\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise containing an array of FoodItem Objects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOrderItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrderItems(order: DocumentSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:180\n                \n            \n\n\n            \n                \n                    Retireves items from a particular order\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            DocumentSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        DocumentSnapshot to retrives items from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise containing an array of FoodItem Objects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOrders\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:147\n                \n            \n\n\n            \n                \n                    Retrieves all orders for a pantry\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise containing an array of Order Objects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPantries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPantries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:43\n                \n            \n\n\n            \n                \n                    Retrieves all pantries that are currently in the database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise containing an array of all available Pantries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPantry\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPantry()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:76\n                \n            \n\n\n            \n                \n                    Retrieves Pantry Data from firebase database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise that contains the Pantry Data from the database\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPantryId\n                        \n                    \n                \n            \n            \n                \ngetPantryId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:68\n                \n            \n\n\n            \n                \n                    Retrieves the pantry's DB id\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The pantry Id that is intialized on login\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPerms\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPerms(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:351\n                \n            \n\n\n            \n                \n                    Retrieves a user's premission from the authentication database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User to retrieve permissions for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        An dictionary containing the user's custom claims in firebase\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:329\n                \n            \n\n\n            \n                \n                    Retrieves all users for the pantry that the user is currently logged into\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise containing an array of users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        orderConv\n                        \n                    \n                \n            \n            \n                \n                    \n                    orderConv(snap: DocumentSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:205\n                \n            \n\n\n            \n                \n                    Converts Document Snapshot into an Order Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    snap\n                                    \n                                            DocumentSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        DocumentSnapshot with order data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Order Object that contains the data from the parameter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pantryConv\n                        \n                    \n                \n            \n            \n                \npantryConv(snapshot: DocumentSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:99\n                \n            \n\n\n            \n                \n                    Converts Firebase Snapshot into Pantry Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    snapshot\n                                    \n                                            DocumentSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Firebase Document Snapshot of Pantry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Pantry Object representaion of parameter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        promoteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    promoteUser(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:368\n                \n            \n\n\n            \n                \n                    Grants a specific user admin perms\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        UID if the user to be promoted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        the result of the makeAdmin cloud function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(itemToRemove: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:268\n                \n            \n\n\n            \n                \n                    Removes a food item from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    itemToRemove\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to remove from the DB\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateInventoryItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInventoryItem(itemToUpdate: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:247\n                \n            \n\n\n            \n                \n                    Updates a FoodItem in the inventory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    itemToUpdate\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem that is the item to update in the inventory\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOrderStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOrderStatus(order: Order, newStatus: OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:285\n                \n            \n\n\n            \n                \n                    Updates an order\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order object to update in DB\n\n                                    \n                                \n                                \n                                    newStatus\n                                    \n                                            OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Integer status to change the order status to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePantry\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePantry(pantry: Pantry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:304\n                \n            \n\n\n            \n                \n                    Updates Pantry details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pantry\n                                    \n                                                Pantry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pantry object to update in DB\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pantryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/firebase.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/firebase.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { getFirestore, collection, addDoc, updateDoc, getDocs, getDoc, QuerySnapshot, DocumentSnapshot, doc, setDoc, deleteDoc } from 'firebase/firestore'\n\nimport { FoodItem } from '../../../../globalModels/foodItem'\nimport { Order } from '../../../../globalModels/order'\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\n\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\nimport { User } from '../../../../globalModels/user';\nimport { LoadingService } from './loading.service';\n\nconst functions = getFunctions()\n\nconst db = getFirestore()\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  //This will be used to determine which pantry instance is accessed\n  //TODO: update/change this when the user logs in\n  userId = ''\n  pantryId = ''\n\n  constructor(\n    private loadingService: LoadingService\n  ) {\n    let temp = sessionStorage.getItem('uid')\n    let temp2 = sessionStorage.getItem('pantryId')\n    if (temp != null && temp2 != null) {\n      this.userId = temp\n      this.pantryId = temp2\n    }\n  }\n\n  /**\n   * Retrieves all pantries that are currently in the database\n   * @returns A promise containing an array of all available Pantries\n   */\n  async getPantries(): Promise {\n    await this.loadingService.showLoader()\n    let snapshot = undefined\n    try {\n      snapshot = await getDocs(collection(db, 'pantries'))\n    } catch (error) {\n      this.loadingService.dismissLoader()\n      throw error\n    }\n    if (snapshot == undefined) {\n      this.loadingService.dismissLoader()\n      throw Error('No Pantries Found')\n    }\n    var toReturn: Pantry[] = []\n    snapshot.forEach((pantry) => {\n      toReturn.push(this.pantryConv(pantry))\n    })\n    this.loadingService.dismissLoader()\n    return toReturn\n  }\n\n  /**\n   * Retrieves the pantry's DB id\n   * @returns The pantry Id that is intialized on login\n   */\n  getPantryId() {\n    return this.pantryId\n  }\n\n  /**\n   * Retrieves Pantry Data from firebase database\n   * @returns Promise that contains the Pantry Data from the database\n   */\n  async getPantry(): Promise {\n    await this.loadingService.showLoader()\n    let snapshot = undefined;\n    try {\n      snapshot = await getDoc(doc(db, 'pantries/' + this.pantryId))\n    } catch (error) {\n      this.loadingService.dismissLoader()\n      throw (error)\n    }\n    if (snapshot == undefined) {\n      this.loadingService.dismissLoader()\n      throw Error('Food Pantry does not exist')\n    }\n    this.loadingService.dismissLoader()\n    return this.pantryConv(snapshot)\n\n  }\n\n  /**\n   * Converts Firebase Snapshot into Pantry Object\n   * @param snapshot Firebase Document Snapshot of Pantry\n   * @returns Pantry Object representaion of parameter\n   */\n  pantryConv(snapshot: DocumentSnapshot) {\n    let data = snapshot.data()!\n    return new Pantry(snapshot.id, data['name'], data['description'], data['address'], data['logoUrl'], data['primaryColor'], data['secondaryColor'], data['orderLimit'])\n  }\n\n  /**\n   * Retrieves the inventory from the firebase database\n   * @returns Promise containing an array of FoodItem Objects\n   */\n  async getInventory(): Promise {\n    await this.loadingService.showLoader()\n    let snapshot = undefined;\n    try {\n      snapshot = await getDocs(collection(db, \"pantries/\" + this.pantryId + \"/inventory/\"))\n    } catch (error) {\n      //throw error to outer page\n      this.loadingService.dismissLoader()\n      throw error\n    }\n    if (snapshot == undefined) {\n      this.loadingService.dismissLoader()\n      throw Error('No Data Found')\n    }\n    \n    let toReturn: FoodItem[] = []\n    snapshot.forEach((doc) => {\n      if (doc.exists()) {\n        toReturn.push(this.foodItemConv(doc))\n      }\n    })\n    this.loadingService.dismissLoader()\n    return toReturn\n  }\n\n  /**\n   * Converts Firebase Snapshot into Food Item Object\n   * @param snap Firebase representation of a food item\n   * @returns FoodItem object representaion of parameter\n   */\n  foodItemConv(snap: DocumentSnapshot) {\n    let docData = snap.data()!\n    return new FoodItem(snap.id, docData['name'], docData['quantity'], docData['orderQuan'], docData['limit'], docData['imageUrl'])\n  }\n\n  /**\n   * Retrieves all orders for a pantry\n   * @returns A Promise containing an array of Order Objects\n   */\n  async getOrders(): Promise {\n    await this.loadingService.showLoader()\n    let snapshot = undefined;\n    try {\n      snapshot = await getDocs(collection(db, \"pantries/\" + this.pantryId + \"/orders/\"))\n    } catch (error) {\n      this.loadingService.dismissLoader()\n      //throw error to outer page\n      throw error\n    }\n    if (snapshot == undefined) {\n      this.loadingService.dismissLoader()\n      throw Error('No Data Found')\n    }\n\n    let toReturn: Order[] = []\n\n    for (let doc of snapshot.docs) {\n      if (doc.exists()) {\n        let toAdd = await this.orderConv(doc)\n        toReturn.push(toAdd)\n      }\n    }\n    this.loadingService.dismissLoader()\n    // console.log('returning from orders')\n    return toReturn\n  }\n\n  /**\n   * Retireves items from a particular order\n   * @param order DocumentSnapshot to retrives items from\n   * @returns Promise containing an array of FoodItem Objects\n   */\n  async getOrderItems(order: DocumentSnapshot): Promise {\n    let snapshot = undefined\n    let orderPath = order.ref.path\n    try {\n      snapshot = await getDocs(collection(db, orderPath + '/items'))\n    } catch (error) {\n      throw error\n    }\n    if (snapshot == undefined) {\n      throw Error('No Data Found')\n    }\n\n    let toReturn: FoodItem[] = []\n    snapshot.forEach((item) => {\n      toReturn.push(this.foodItemConv(item))\n    })\n    // console.log('return from getOrderItems')\n    return toReturn\n  }\n\n  /**\n   * Converts Document Snapshot into an Order Object\n   * @param snap DocumentSnapshot with order data\n   * @returns Order Object that contains the data from the parameter\n   */\n  async orderConv(snap: DocumentSnapshot) {\n    let docData = snap.data()!\n    let items: FoodItem[] = []\n    //TODO: actually pull for items for order\n    items = await this.getOrderItems(snap)\n    // console.log('return from order conv')\n    return new Order(snap.id, docData['date'], docData['status'], docData['uid'], items)\n  }\n\n  /**\n   * Adds a new item to the database\n   * @param itemToAdd FoodItem to add to the database\n   */\n  async addItem(itemToAdd: FoodItem) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId + '/inventory/' + itemToAdd.id)\n    let snapshot = await getDoc(docRef)\n    if (snapshot.exists()) {\n      console.log('calling-dismiss')\n      this.loadingService.dismissLoader()\n      throw Error('Item already exists')\n    }\n    try {\n      await setDoc(docRef, {\n        imageUrl: itemToAdd.imageUrl,\n        limit: itemToAdd.limit,\n        name: itemToAdd.name,\n        quantity: itemToAdd.quantity\n      })\n    } catch (err) {\n      console.log('calling-dismiss')\n      this.loadingService.dismissLoader()\n      throw err\n    }\n    console.log('calling-dismiss')\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Updates a FoodItem in the inventory\n   * @param itemToUpdate FoodItem that is the item to update in the inventory\n   */\n  async updateInventoryItem(itemToUpdate: FoodItem) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId + '/inventory/' + itemToUpdate.id)\n    let snapshot = await getDoc(docRef)\n    if (snapshot.exists()) {\n      await updateDoc(docRef, {\n        name: itemToUpdate.name,\n        limit: itemToUpdate.limit,\n        quantity: itemToUpdate.quantity\n      })\n    } else {\n      this.loadingService.dismissLoader()\n      throw Error('Item does not exist!')\n    }\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Removes a food item from the database\n   * @param itemToRemove FoodItem to remove from the DB\n   */\n  async removeItem(itemToRemove: FoodItem) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId + '/inventory/' + itemToRemove.id)\n    try {\n      await deleteDoc(docRef)\n    } catch (err) {\n      this.loadingService.dismissLoader()\n      throw err\n    }\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Updates an order\n   * @param order Order object to update in DB \n   * @param newStatus Integer status to change the order status to\n   */\n  async updateOrderStatus(order: Order, newStatus: OrderStatus) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId + '/orders/' + order.id)\n    let snapshot = await getDoc(docRef)\n    if (snapshot.exists()) {\n      await updateDoc(docRef, {\n        status: newStatus\n      })\n    } else {\n      this.loadingService.dismissLoader()\n      throw Error('Order does not exist!')\n    }\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Updates Pantry details\n   * @param pantry Pantry object to update in DB\n   */\n  async updatePantry(pantry: Pantry) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId)\n    let snapshot = await getDoc(docRef)\n    if (snapshot.exists()) {\n      await updateDoc(docRef, {\n        address: pantry.address,\n        description: pantry.desc,\n        logoUrl: pantry.logoUrl,\n        name: pantry.name,\n        orderLimit: pantry.orderLimit,\n        primaryColor: pantry.primaryColor,\n        secondaryColor: pantry.secondaryColor\n      })\n    } else {\n      this.loadingService.dismissLoader()\n      throw Error('pantry does not exist!')\n    }\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Retrieves all users for the pantry that the user is currently logged into\n   * @returns A promise containing an array of users\n   */\n  async getUsers(): Promise {\n    await this.loadingService.showLoader()\n    const getUsers = httpsCallable(functions, 'getUsers')\n    return getUsers().then(async (result: any) => {\n      var userArr: User[] = []\n      let users = result.data.users\n      for (let user of users) {\n        let toAdd = new User(user.uid, user.email, user.uid)\n        toAdd.perms = await this.getPerms(toAdd)\n        userArr.push(toAdd)\n      }\n      userArr.reverse()\n      this.loadingService.dismissLoader()\n      return userArr\n    })\n  }\n\n  /**\n   * Retrieves a user's premission from the authentication database\n   * @param user User to retrieve permissions for\n   * @returns An dictionary containing the user's custom claims in firebase\n   */\n  async getPerms(user: User) {\n    console.log('calling getPerms')\n    const getPerms = httpsCallable(functions, 'getPerms')\n    let params = {\n      email: user.email\n    }\n    return getPerms(params).then((res: any) => {\n      let perms = res.data\n      return perms\n    })\n  }\n\n  /**\n   * Grants a specific user admin perms\n   * @param uid UID if the user to be promoted\n   * @returns the result of the makeAdmin cloud function\n   */\n  async promoteUser(uid: string) {\n    await this.loadingService.showLoader()\n    const makeAdmin = httpsCallable(functions, 'makeAdmin')\n    let params = {\n      user: uid,\n      pantryName: this.pantryId\n    }\n    return makeAdmin(params).then(() => {\n      console.log('done with edit')\n      this.loadingService.dismissLoader()\n    })\n  }\n\n  /**\n   * Removes a specific user's admin perms\n   * @param uid UID of user to be demoted\n   * @returns result of revokeAdmin cloud function\n   */\n  async demoteUser(uid: string) {\n    await this.loadingService.showLoader()\n    const revokeAdmin = httpsCallable(functions, 'revokeAdmin')\n    let params = {\n      user: uid\n    }\n    return revokeAdmin(params).then(() => {\n      this.loadingService.dismissLoader()\n    })\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordPage.html":{"url":"components/ForgotPasswordPage.html","title":"component - ForgotPasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forgot-password/forgot-password.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/forgot-password/forgot-password.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forgot-password/forgot-password.page.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      Forgot you password?\n      Enter you email below to recieve a password reset link.\n      \n        Email\n        \n      \n      Send Password Reset Email\n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.page.scss\n                \n                .container {\n    margin-top: 4em;\n    align-self: center;\n }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Forgot you password?      Enter you email below to recieve a password reset link.              Email                    Send Password Reset Email      '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForgotPasswordPageModule.html":{"url":"modules/ForgotPasswordPageModule.html","title":"module - ForgotPasswordPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ForgotPasswordPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ForgotPasswordPageModule\n\n\n\ncluster_ForgotPasswordPageModule_imports\n\n\n\ncluster_ForgotPasswordPageModule_declarations\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\n\n\nForgotPasswordPageModule\n\nForgotPasswordPageModule\n\nForgotPasswordPageModule -->\n\nForgotPasswordPage->ForgotPasswordPageModule\n\n\n\n\n\nForgotPasswordPageRoutingModule\n\nForgotPasswordPageRoutingModule\n\nForgotPasswordPageModule -->\n\nForgotPasswordPageRoutingModule->ForgotPasswordPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forgot-password/forgot-password.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForgotPasswordPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ForgotPasswordPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ForgotPasswordPageRoutingModule\n  ],\n  declarations: [ForgotPasswordPage]\n})\nexport class ForgotPasswordPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForgotPasswordPageRoutingModule.html":{"url":"modules/ForgotPasswordPageRoutingModule.html","title":"module - ForgotPasswordPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ForgotPasswordPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forgot-password/forgot-password-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotPasswordPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logoUrl\n                            \n                            \n                                pantry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.page.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.page.ts:20\n                \n            \n\n\n            \n                \n                    Init method retrieves the pantry so the patry name and logo can be set\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.page.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pantry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pantry\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.page.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Pantry } from '../../../../globalModels/pantry';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  pantry: Pantry\n  logoUrl: string\n  constructor(\n    private firebaseService: FirebaseService\n  ) {}\n\n  /**\n   * Init method retrieves the pantry so the patry name and logo can be set\n   */\n    async ngOnInit() {\n      this.pantry = await this.firebaseService.getPantry()\n      this.logoUrl = this.pantry.logoUrl\n    }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    {{pantry.name}} Admin App\n    \n    Use the hamburger menu to manage your application\n  \n\n    \n\n    \n                \n                    home.page.scss\n                \n                #container {\n  text-align: center;\n\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n\n  color: #8c8c8c;\n\n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{pantry.name}} Admin App        Use the hamburger menu to manage your application  '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InventoryManagementPage.html":{"url":"components/InventoryManagementPage.html","title":"component - InventoryManagementPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InventoryManagementPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventory-management/inventory-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                inventory-management\n            \n\n            \n                styleUrls\n                ./inventory-management.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./inventory-management.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Static\n                                addDialogRef\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                length\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                records\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                closeAddDialog\n                            \n                            \n                                    Async\n                                ngAfterViewInit\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                openAddDialog\n                            \n                            \n                                    Async\n                                openAlert\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                    Async\n                                removeItem\n                            \n                            \n                                updateFilter\n                            \n                            \n                                    Async\n                                updateTableSource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, alertController: AlertController, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventory-management/inventory-management.page.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        closeAddDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeAddDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        openAddDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAddDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        openAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAlert(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilter\n                        \n                    \n                \n            \n            \n                \nupdateFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTableSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTableSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatMenuTrigger)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        addDialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['name', 'quantity', 'limit', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [5, 10, 25, 100]\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        records\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog, } from '@angular/material/dialog';\nimport { AlertController, } from '@ionic/angular';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { LoadingService } from '../services/loading.service';\n\n\n\n\n@Component({\n  selector: 'inventory-management',\n  templateUrl: './inventory-management.page.html',\n  styleUrls: ['./inventory-management.page.scss'],\n})\nexport class InventoryManagementPage implements AfterViewInit{\n  \n\n  displayedColumns: string[] = ['name', 'quantity', 'limit', 'actions'];\n  records: MatTableDataSource\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n\n  static addDialogRef: any\n\n  constructor(\n    public dialog: MatDialog,\n    private alertController: AlertController,\n    private firebaseService: FirebaseService,\n    ) { }\n\n  async ngOnInit() {    \n    \n  }\n\n  async updateTableSource() {\n    let data = await this.firebaseService.getInventory()\n    this.records = new MatTableDataSource(data)\n    this.length = this.records.data.length;\n    this.records.paginator = this.paginator;\n    this.records.sort = this.sort;\n  }\n  async ngAfterViewInit() {\n    await this.updateTableSource()\n  }\n\n  updateFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n  async removeItem(item: FoodItem) {\n    //find the index from id\n    await this.firebaseService.removeItem(item)\n    let removed = this.records.data.splice(this.records.data.indexOf(item), 1)\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n \n  async openAlert(item: FoodItem){\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {}\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(item)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n   openEditDialog(item: FoodItem){\n    const dialogRef = this.dialog.open(EditDialog, {restoreFocus: false, data: item});\n    dialogRef.afterClosed().subscribe( () => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n   async openAddDialog(){\n    const dialogRef = this.dialog.open(AddDialog, {restoreFocus: false});\n    InventoryManagementPage.addDialogRef = dialogRef\n    dialogRef.afterClosed().subscribe( () => {\n      this.updateTableSource()\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    })\n  }\n\n  static async closeAddDialog() {\n    await InventoryManagementPage.addDialogRef.close()\n  }\n\n}\n\n@Component({\n  selector: 'add-dialog',\n  templateUrl: 'add-dialog.html'\n})\nexport class AddDialog implements OnInit {\n  nameInput: string\n  quantityInput: number\n  limitInput: number\n  urlInput: string\n  forceDisable = false\n  constructor(\n    private firebaseService: FirebaseService,\n    private loadingService: LoadingService\n    ){}\n  ngOnInit(): void {\n      \n  }\n\n  /**\n   * Adds item to the UI table and the DB\n   */\n  async AddItem(){\n    this.forceDisable = true\n    //write to db or something idk\n    if(!this.limitInput) {\n      this.limitInput = 0\n    }\n    let item: FoodItem = {\n      id: this.nameInput.toLowerCase(),\n      name: this.nameInput,\n      quantity: this.quantityInput,\n      limit: this.limitInput,\n      imageUrl: this.urlInput\n    }\n    console.log(item)\n    await this.firebaseService.addItem(item).then(() => {\n      InventoryManagementPage.closeAddDialog()\n      this.forceDisable = false\n    }).catch((err) => {\n      this.forceDisable = false\n    })\n    this.forceDisable = false\n  }\n}\n\n@Component({\n  selector: 'edit-dialog',\n  templateUrl: 'edit-dialog.html'\n})\nexport class EditDialog implements OnInit{\n  constructor(@Inject(MAT_DIALOG_DATA) public data: FoodItem,\n  private firebaseService: FirebaseService){}\n  private cancelItem = 0;\n  private cancelLimit = 0;\n  //private name = this.data.name;\n  nameInput: string = this.data.name\n  ngOnInit() {\n    console.log(this.data)\n  }\n\n  /**\n   * increments item quantity\n   * @param item FoodItem to increment\n   */\n  addItem(item: FoodItem){\n    item.quantity = item.quantity + 1;\n    this.cancelItem = this.cancelItem - 1;\n  }\n\n  /**\n   * decrements item quantity\n   * @param item FoodItem to decrement\n   */\n  removeItem(item: FoodItem){\n    item.quantity = item.quantity - 1;\n    this.cancelItem = this.cancelItem + 1;\n  }\n\n  /**\n   * increments and items's limit\n   * @param item FoodItem that will have limit modifed\n   */\n  addLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit + 1\n      this.cancelLimit = this.cancelLimit - 1\n    } else {\n      item.limit = 1\n      this.cancelLimit = this.cancelLimit - 1\n    }\n  }\n\n  /**\n   * decrements and item's limit\n   * @param item FoodItem that will have limit modified\n   */\n  removeLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit - 1;\n      this.cancelLimit = this.cancelLimit + 1\n    } else if(item.limit == 1) {\n      item.limit = undefined;\n      this.cancelLimit = this.cancelLimit + 1\n    }\n  }\n\n  /**\n   * Updates DB info for an item. Called when item changes are saved\n   * @param item FoodItem to update in database\n   */\n  async saveData(item: FoodItem){\n    //write to db\n    console.log(this.nameInput)\n    if(this.nameInput != \"\"){\n      item.name = this.nameInput\n    }\n    await this.firebaseService.updateInventoryItem(item)\n  }\n\n  /**\n   * Discards changes made to food item. Called when Cancel is pressed\n   * @param item FoodItem to discard changes for\n   */\n  cancelData(item: FoodItem){\n    item.quantity = item.quantity + this.cancelItem;\n    if(item.limit){\n      item.limit = item.limit + this.cancelLimit\n      if(item.limit == 0){\n        item.limit = undefined\n      }\n    }\n  }\n}\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      \n        \n          \n            Filter\n            \n          \n        \n        \n          Add Item\n        \n      \n    \n    \n\n    \n      \n        Name\n        {{element.name}}\n      \n      \n        Quantity\n        {{element.quantity}}\n      \n      \n        Limit\n        \n         {{element.limit}}\n        None\n      \n      \n        Actions\n        \n          \n                      \n          \n          \n            \n              Edit Item\n            \n            \n              Remove Item\n            \n          \n        \n      \n      \n      \n      \n      \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./inventory-management.page.scss\n                \n                .table-container{\n    height: 100vh\n}\n\n\ntable {\n    width: 100%;\n}\n\n.mat-cell {\n    width: 40%;\n}\n  \n.mat-column-gender {\n    width: 20%;\n}\n\nth.mat-sort-header-sorted {\n    color: black;\n}\n  \n\n.mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.actions {\n    fill: black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Filter                                                Add Item                                        Name        {{element.name}}                    Quantity        {{element.quantity}}                    Limit                 {{element.limit}}        None                    Actions                                                                                      Edit Item                                      Remove Item                                                                          '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InventoryManagementPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InventoryManagementPageModule.html":{"url":"modules/InventoryManagementPageModule.html","title":"module - InventoryManagementPageModule","body":"\n                   \n\n\n\n\n    Modules\n    InventoryManagementPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InventoryManagementPageModule\n\n\n\ncluster_InventoryManagementPageModule_declarations\n\n\n\ncluster_InventoryManagementPageModule_imports\n\n\n\n\nAddDialog\n\nAddDialog\n\n\n\nInventoryManagementPageModule\n\nInventoryManagementPageModule\n\nInventoryManagementPageModule -->\n\nAddDialog->InventoryManagementPageModule\n\n\n\n\n\nEditDialog\n\nEditDialog\n\nInventoryManagementPageModule -->\n\nEditDialog->InventoryManagementPageModule\n\n\n\n\n\nInventoryManagementPage\n\nInventoryManagementPage\n\nInventoryManagementPageModule -->\n\nInventoryManagementPage->InventoryManagementPageModule\n\n\n\n\n\nInventoryManagementPageRoutingModule\n\nInventoryManagementPageRoutingModule\n\nInventoryManagementPageModule -->\n\nInventoryManagementPageRoutingModule->InventoryManagementPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/inventory-management/inventory-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddDialog\n                        \n                        \n                            EditDialog\n                        \n                        \n                            InventoryManagementPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InventoryManagementPageRoutingModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InventoryManagementPageRoutingModule } from './inventory-management-routing.module';\n\nimport { AddDialog, EditDialog, InventoryManagementPage, } from './inventory-management.page';\n\nimport {MatTableModule} from '@angular/material/table'; \nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDialogModule} from '@angular/material/dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InventoryManagementPageRoutingModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDialogModule,\n    ],\n  declarations: [InventoryManagementPage, EditDialog, AddDialog],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class InventoryManagementPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InventoryManagementPageRoutingModule.html":{"url":"modules/InventoryManagementPageRoutingModule.html","title":"module - InventoryManagementPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    InventoryManagementPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/inventory-management/inventory-management-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InventoryManagementPage } from './inventory-management.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InventoryManagementPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InventoryManagementPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                dismissLoader\n                            \n                            \n                                    Async\n                                showLoader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingCtrl: LoadingController)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dismissLoader\n                        \n                    \n                \n            \n            \n                \n                    \n                    dismissLoader()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:22\n                \n            \n\n\n            \n                \n                    Removes the loading spinner overlay from the screen\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showLoader\n                        \n                    \n                \n            \n            \n                \n                    \n                    showLoader()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:14\n                \n            \n\n\n            \n                \n                    Shows a generic loading spinner\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(private loadingCtrl: LoadingController) { }\n\n  /**\n   * Shows a generic loading spinner\n   */\n  async showLoader() {\n    const loading = await this.loadingCtrl.create()\n    loading.present()\n  }\n\n  /**\n   * Removes the loading spinner overlay from the screen\n   */\n  async dismissLoader() {\n    await this.loadingCtrl.dismiss()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                pantries\n                            \n                            \n                                    Public\n                                pantry\n                            \n                            \n                                    Public\n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                setPantrySelection\n                            \n                            \n                                signInButton\n                            \n                            \n                                toForgotPassword\n                            \n                            \n                                toSignup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:40\n                \n            \n\n\n            \n                \n                    Signs a user out and initalizes inputs\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:28\n                \n            \n\n\n            \n                \n                    Pulls all pantries for selection on page init\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPantrySelection\n                        \n                    \n                \n            \n            \n                \nsetPantrySelection(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:59\n                \n            \n\n\n            \n                \n                    Sets the user's pantry selection\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        event emitted by ion-select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInButton\n                        \n                    \n                \n            \n            \n                \nsignInButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:67\n                \n            \n\n\n            \n                \n                    Signs the user in\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Returns if an error occurs and the function should abort\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toForgotPassword\n                        \n                    \n                \n            \n            \n                \ntoForgotPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSignup\n                        \n                    \n                \n            \n            \n                \ntoSignup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pantries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pantry[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pantry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { Pantry } from '../../../../globalModels/pantry';\nimport { FirebaseService } from '../services/firebase.service';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  public email: string = '';\n  public password: string = '';\n  public pantries: Pantry[] = []\n  public pantry: string = ''\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n  ) { }\n\n  /**\n   * Pulls all pantries for selection on page init\n   */\n  async ngOnInit() {\n    try {\n      this.pantries = await this.firebaseService.getPantries()\n    } catch (err) {\n      console.log(\"error\", err)\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n  }\n\n  /**\n   * Signs a user out and initalizes inputs\n   */\n  ionViewWillEnter() {\n    /*\n    Do NOT remove\n    This is the only way that the signout button which\n    exists in the app component can actually work.\n    The AuthService can't be injected there, so all\n    we can do is navigate to this page and then signout\n    here.\n    */\n    //console.log('signout')\n    this.authService.signOut()\n    this.email = ''\n    this.password = ''\n  }\n\n  /**\n   * Sets the user's pantry selection\n   * @param event event emitted by ion-select\n   */\n  setPantrySelection(event: any) {\n    this.pantry = event.detail.value\n  }\n\n  /**\n   * Signs the user in\n   * @returns Returns if an error occurs and the function should abort\n   */\n  signInButton() {\n    if (this.pantry.length  {\n        this.firebaseService.pantryId = this.pantry\n        let user = await this.authService.getCurrentUser()\n        \n        this.firebaseService.userId = user.uid\n        console.log('User:', this.firebaseService.userId, '   Pantry:', this.firebaseService.pantryId)\n        sessionStorage.setItem('uid', this.firebaseService.userId)\n        sessionStorage.setItem('pantryId', this.firebaseService.pantryId)\n        let pantry = await this.firebaseService.getPantry()\n          document.body.style.setProperty('--ion-color-primary', pantry.primaryColor)\n          document.body.style.setProperty('--ion-color-primary-contrast', pantry.secondaryColor)\n        this.router.navigateByUrl('/home')\n      })\n    } catch (err) {\n      console.log(err)\n      return\n    }\n  }\n\n  toForgotPassword() {\n    // this.router.navigateByUrl(\"forgot-password\")\n  }\n\n  toSignup() {\n    this.router.navigateByUrl(\"signup\")\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    \n    \n      Log into your Food Pantry - Admin\n      \n        \n          \n            \n              {{pantry.name}}\n            \n          \n        \n        \n          Enter your email:\n          \n        \n        \n          Enter your password:\n          \n        \n        Forgot Password?\n      \n      \n      Login\n      \n      \n      \n    \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .center {\n    display: flex;\n    flex-direction: column;\n    padding-top: 2em;\n    padding-left: 1em;\n    padding-right: 1em;\n    width: 100%;\n    justify-content: center;\n    justify-items: center;\n\n    .horizontal-container {\n        justify-content: center;\n        width: 100%;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row;\n\n        .logo {\n            text-align: center;\n\n            img {\n                min-width: 50px;\n                max-width: 300px;\n            }\n        }\n\n        .login {\n            margin-left: 20px;\n            text-align: center;\n\n            .inputs {\n                text-align: left !important;\n\n                ion-item {\n                    padding-top: 10px;\n                }\n            }\n\n            ion-button {\n                width: 100%;\n                padding: 0px;\n                margin: 0px;\n            }\n        }\n    }\n\n    ion-button {\n        width: 100%;\n        max-width: 36em;\n    }\n\n    .signup {\n        margin-top: 30px;\n        display: inline-block;\n        text-align: center;\n        padding-bottom: 30px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Log into your Food Pantry - Admin                                                  {{pantry.name}}                                                Enter your email:                                    Enter your password:                          Forgot Password?                  Login                      '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\nexport interface Pantry {\n  name: string\n  logoUrl: string\n  primaryColor: string\n  secondayColor: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderManagementPage.html":{"url":"components/OrderManagementPage.html","title":"component - OrderManagementPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderManagementPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-management/order-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-management\n            \n\n            \n                styleUrls\n                ./order-management.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./order-management.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                length\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                records\n                            \n                            \n                                sort\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                            \n                                    Async\n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                openAlert\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                openViewDialog\n                            \n                            \n                                removeItem\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, firebase: FirebaseService, alertController: AlertController, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-management/order-management.page.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(status: OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:89\n                \n            \n\n\n            \n                \n                    Converts the numerical order status to the coresponding string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        OrderStatus to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        String representaion of OrderStatus\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \n                    \n                    ionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:54\n                \n            \n\n\n            \n                \n                    Retrieves orders from the DB and initalizes table.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        openAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAlert(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:110\n                \n            \n\n\n            \n                \n                    Opens an alert for the user for confirm if they want to remove an order\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:134\n                \n            \n\n\n            \n                \n                    Opens the edit dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openViewDialog\n                        \n                    \n                \n            \n            \n                \nopenViewDialog(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:146\n                \n            \n\n\n            \n                \n                    Opens the order view dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to view\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:97\n                \n            \n\n\n            \n                \n                    Removes an order from the table\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilter\n                        \n                    \n                \n            \n            \n                \nupdateFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:75\n                \n            \n\n\n            \n                \n                    Updates the table based on the value in the filter input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event emited by filter changing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatMenuTrigger)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['timestamp', 'id', 'status', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [5, 10, 25, 100]\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        records\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                \n                    \n                        Default value : new MatTableDataSource([])\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatTable, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Order } from '../../../../globalModels/order';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { AlertController } from '@ionic/angular';\nimport { Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { Observable, from } from 'rxjs';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-order-management',\n  templateUrl: './order-management.page.html',\n  styleUrls: ['./order-management.page.scss'],\n})\n\nexport class OrderManagementPage implements AfterViewInit {\n\n  displayedColumns: string[] = ['timestamp', 'id', 'status', 'actions'];\n  records: MatTableDataSource = new MatTableDataSource([]);\n\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatTable, { static: true }) table: MatTable;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n  constructor(\n    public dialog: MatDialog,\n    private firebase: FirebaseService,\n    private alertController: AlertController,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async ionViewWillEnter() {\n\n  }\n\n  /**\n   * Retrieves orders from the DB and initalizes table.\n   */\n  async ngAfterViewInit() {\n    try {\n      let orders = await this.firebase.getOrders()\n      // orders.sort(function(a, b){\n      //   return b.timestamp.getDate() - a.timestamp.getDate()\n      // })\n      this.records.data = orders\n      this.length = this.records.data.length\n      this.records.paginator = this.paginator;\n      this.records.sort = this.sort;\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n\n  /**\n   * Updates the table based on the value in the filter input\n   * @param event Event emited by filter changing\n   */\n  updateFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Removes an order from the table\n   * @param order Order to be removed\n   */\n  removeItem(order: Order) {\n    //find the index from id\n    let removed = this.records.data.splice(this.records.data.indexOf(order), 1)\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n\n  /**\n   * Opens an alert for the user for confirm if they want to remove an order\n   * @param order Order to be removed\n   */\n  async openAlert(order: Order) {\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => { }\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(order)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param order Order to edit\n   */\n  openEditDialog(order: Order) {\n    const dialogRef = this.dialog.open(EditOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * Opens the order view dialog\n   * @param order Order to view\n   */\n  openViewDialog(order: Order) {\n    const dialogRef = this.dialog.open(ViewOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n}\n\n\n@Component({\n  selector: 'edit-order-dialog',\n  templateUrl: 'edit-order-dialog.html'\n})\n\nexport class EditOrderDialog implements OnInit {\n  values = Object.values(OrderStatus).filter((v) => isNaN(Number(v)))\n  enumvals = Object.values(OrderStatus).filter((v) => !isNaN(Number(v)))\n  value = this.getEnumKey(this.data.status)\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n\n  ngOnInit() {\n\n    // console.log(this.values)\n    // console.log(this.enumvals)\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getEnumKey(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Saves the changes made to an order in the DB (mainly order status)\n   * @param data Order to update in the DB\n   */\n  async saveOrder(data: Order) {\n    console.log(this.value)\n    data.status = this.values.indexOf(this.value) + 1\n    console.log(data.status)\n    try {\n      this.firebaseService.updateOrderStatus(data, data.status)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update order status. Please try again later.', ['Ok'])\n    }\n    \n  }\n}\n\n\n@Component({\n  selector: 'view-order-dialog',\n  templateUrl: 'view-order-dialog.html'\n})\nexport class ViewOrderDialog implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order) { }\n  ngOnInit() {\n\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n}\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      Filter\n      \n    \n\n    \n      \n        Date\n        {{element.timestamp.toLocaleString()}}\n      \n      \n        ID\n        {{element.id}}\n      \n      \n        Status\n        {{getStatus(element.status)}}\n      \n      \n        Actions\n        \n          \n                      \n          \n          \n            \n              View Order\n            \n            \n              Edit Order\n            \n          \n        \n      \n      \n      \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./order-management.page.scss\n                \n                .table-container{\n    height: 100vh\n}\n\n\ntable {\n    width: 100%;\n}\n\n.mat-cell {\n    width: 40%;\n}\n  \n.mat-column-gender {\n    width: 20%;\n}\n\nth.mat-sort-header-sorted {\n    color: black;\n}\n  \n\n.mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.actions {\n    fill: black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Filter                            Date        {{element.timestamp.toLocaleString()}}                    ID        {{element.id}}                    Status        {{getStatus(element.status)}}                    Actions                                                                                      View Order                                      Edit Order                                                              '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderManagementPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderManagementPageModule.html":{"url":"modules/OrderManagementPageModule.html","title":"module - OrderManagementPageModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderManagementPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderManagementPageModule\n\n\n\ncluster_OrderManagementPageModule_imports\n\n\n\ncluster_OrderManagementPageModule_declarations\n\n\n\n\nEditOrderDialog\n\nEditOrderDialog\n\n\n\nOrderManagementPageModule\n\nOrderManagementPageModule\n\nOrderManagementPageModule -->\n\nEditOrderDialog->OrderManagementPageModule\n\n\n\n\n\nOrderManagementPage\n\nOrderManagementPage\n\nOrderManagementPageModule -->\n\nOrderManagementPage->OrderManagementPageModule\n\n\n\n\n\nViewOrderDialog\n\nViewOrderDialog\n\nOrderManagementPageModule -->\n\nViewOrderDialog->OrderManagementPageModule\n\n\n\n\n\nOrderManagementPageRoutingModule\n\nOrderManagementPageRoutingModule\n\nOrderManagementPageModule -->\n\nOrderManagementPageRoutingModule->OrderManagementPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/order-management/order-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditOrderDialog\n                        \n                        \n                            OrderManagementPage\n                        \n                        \n                            ViewOrderDialog\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OrderManagementPageRoutingModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderManagementPageRoutingModule } from './order-management-routing.module';\n\nimport { EditOrderDialog, OrderManagementPage, ViewOrderDialog } from './order-management.page';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrderManagementPageRoutingModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatCardModule\n  ],\n  declarations: [OrderManagementPage, EditOrderDialog, ViewOrderDialog],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n\n})\nexport class OrderManagementPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderManagementPageRoutingModule.html":{"url":"modules/OrderManagementPageRoutingModule.html","title":"module - OrderManagementPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderManagementPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/order-management/order-management-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrderManagementPage } from './order-management.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderManagementPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrderManagementPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pantry.html":{"url":"interfaces/Pantry.html","title":"interface - Pantry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pantry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logoUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            primaryColor\n                                        \n                                \n                                \n                                        \n                                            secondayColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logoUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondayColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondayColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\nexport interface Pantry {\n  name: string\n  logoUrl: string\n  primaryColor: string\n  secondayColor: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PantryStatisticsPage.html":{"url":"components/PantryStatisticsPage.html","title":"component - PantryStatisticsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PantryStatisticsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pantry-statistics/pantry-statistics.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pantry-statistics\n            \n\n            \n                styleUrls\n                ./pantry-statistics.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./pantry-statistics.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endDate\n                            \n                            \n                                fromDate\n                            \n                            \n                                inventory\n                            \n                            \n                                itembyMonth\n                            \n                            \n                                itembyMonthMonths\n                            \n                            \n                                itembyMonthNums\n                            \n                            \n                                    Public\n                                lineChartDataItem\n                            \n                            \n                                    Public\n                                lineChartDataOrders\n                            \n                            \n                                    Public\n                                lineChartLegend\n                            \n                            \n                                    Public\n                                lineChartOptions\n                            \n                            \n                                ordersByMonth\n                            \n                            \n                                ordersByMonthMonths\n                            \n                            \n                                ordersByMonthNums\n                            \n                            \n                                selectedFoodItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertItemByMonth\n                            \n                            \n                                convertOrdersByMonth\n                            \n                            \n                                endDateChange\n                            \n                            \n                                fromDateChange\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                selectChange\n                            \n                            \n                                updateItemChart\n                            \n                            \n                                updateItemGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(forecaster: ForecastService, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:132\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        forecaster\n                                                  \n                                                        \n                                                                        ForecastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertItemByMonth\n                        \n                    \n                \n            \n            \n                \nconvertItemByMonth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:38\n                \n            \n\n\n            \n                \n                    Separates data into arrays for display in charts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertOrdersByMonth\n                        \n                    \n                \n            \n            \n                \nconvertOrdersByMonth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:69\n                \n            \n\n\n            \n                \n                    Separates data into arrays for display in charts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDateChange\n                        \n                    \n                \n            \n            \n                \nendDateChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:55\n                \n            \n\n\n            \n                \n                    DEBUG method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fromDateChange\n                        \n                    \n                \n            \n            \n                \nfromDateChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:48\n                \n            \n\n\n            \n                \n                    DEBUG method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:143\n                \n            \n\n\n            \n                \n                    Initializes Charts and Data\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectChange\n                        \n                    \n                \n            \n            \n                \nselectChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:62\n                \n            \n\n\n            \n                \n                    DEBUG method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemChart\n                        \n                    \n                \n            \n            \n                \nupdateItemChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:79\n                \n            \n\n\n            \n                \n                    Updates the item by month chart with proper data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemGraph\n                        \n                    \n                \n            \n            \n                \nupdateItemGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:98\n                \n            \n\n\n            \n                \n                    Updates data when the user presses submit on \"item by month\" graph\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fromDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inventory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FoodItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itembyMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimestampedItems[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itembyMonthMonths\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itembyMonthNums\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineChartDataItem\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineChartDataOrders\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineChartLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineChartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    responsive: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersByMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimestampedOrders[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersByMonthMonths\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersByMonthNums\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFoodItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ChartConfiguration, ChartOptions, ChartType } from \"chart.js\";\nimport { ForecastService } from '../services/forecast.service';\nimport { FirebaseService } from '../services/firebase.service';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { AlertService } from '../services/alert.service';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\n\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n@Component({\n  selector: 'app-pantry-statistics',\n  templateUrl: './pantry-statistics.page.html',\n  styleUrls: ['./pantry-statistics.page.scss'],\n})\nexport class PantryStatisticsPage implements OnInit {\n  fromDate = \"\"\n  endDate = \"\"\n  inventory: FoodItem[]\n  selectedFoodItem: string\n  ordersByMonth: TimestampedOrders[]\n  ordersByMonthMonths: string[] = []\n  ordersByMonthNums: number[] = []\n  itembyMonth: TimestampedItems[]\n  itembyMonthMonths: string[] = []\n  itembyMonthNums: number[] = []\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertItemByMonth() {\n    this.itembyMonth.forEach(element => {\n      this.itembyMonthMonths.push(element.month)\n      this.itembyMonthNums.push(element.items)\n    })\n  }\n\n  /**\n   * DEBUG method\n   */\n  fromDateChange() {\n    // console.log(this.fromDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  endDateChange() {\n    // console.log(this.endDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  selectChange() {\n    // console.log(this.selectedFoodItem)\n  }\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertOrdersByMonth() {\n    this.ordersByMonth.forEach(element => {\n      this.ordersByMonthMonths.push(element.month)\n      this.ordersByMonthNums.push(element.orders)\n    })\n  }\n\n  /**\n   * Updates the item by month chart with proper data.\n   */\n  updateItemChart() {\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n  }\n\n  /**\n   * Updates data when the user presses submit on \"item by month\" graph\n   */\n  updateItemGraph() {\n    this.itembyMonth = []\n    this.itembyMonthNums = []\n    this.itembyMonthMonths = []\n    console.log(\"submit clicked\")\n    if(this.selectedFoodItem){\n      let fromDateObj = new Date(this.fromDate)\n      let endDateObj\n      if(this.endDate) {\n        endDateObj = new Date(this.endDate)\n      } else {\n        endDateObj = new Date()\n      }\n      console.log(fromDateObj.getMonth())\n      console.log(endDateObj.getMonth())\n      \n      if(fromDateObj.getMonth() ['data']\n  public lineChartDataItem: ChartConfiguration['data']\n  public lineChartOptions: ChartOptions = {\n    responsive: true\n  };\n  public lineChartLegend = true;\n\n  constructor(\n    private forecaster: ForecastService, \n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n  \n  /**\n   * Initializes Charts and Data\n   */\n  async ngOnInit() {\n    try {\n      let pantry = await this.firebaseService.getPantry()\n      this.inventory = await this.firebaseService.getInventory()\n      let orders = await this.firebaseService.getOrders()\n      this.forecaster.setData(pantry, this.inventory, orders)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n    \n\n   \n    console.log(\"Getting number of orders by month\")\n    this.ordersByMonth = this.forecaster.getNumOrderByMonth()\n    console.log(this.forecaster.getNumOrderByMonth())\n    this.convertOrdersByMonth()\n    this.lineChartDataOrders = {\n      labels: this.ordersByMonthMonths,\n      datasets: [\n        {\n          data:this.ordersByMonthNums,\n          label: 'Orders',\n          fill: true,\n          tension: 0.5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(255,0,0,0.3)'\n        }\n      ]\n    };\n\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n    console.log(\"Searching for bread demand by month\")\n    console.log(this.forecaster.getItemDemandByMonth(\"bread\"))\n\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n       Orders by Month:\n      \n    \n    \n    \n    \n    \n      Demand by Month for an Item:\n      \n        \n          \n            \n              {{item.name}}\n            \n          \n          Start Date:\n          \n          End Date:\n          \n          Submit\n        \n      \n    \n    \n    \n    \n  \n \n\n    \n\n    \n                \n                    ./pantry-statistics.page.scss\n                \n                ion-col {\n    background-color: var( --ion-color-primary-contrast);\n    border: solid 1px #fff;\n    color: #fff;\n    text-align: center;\n}\n\n\n.center {\n    display: flex;\n    flex-direction: column;\n    padding-top: 2em;\n    padding-left: 1em;\n    padding-right: 1em;\n    width: 100%;\n    justify-content: center;\n    justify-items: center;\n\n    .horizontal-container {\n        justify-content: center;\n        width: 100%;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row;\n\n        .logo {\n            text-align: center;\n\n            img {\n                min-width: 50px;\n                max-width: 300px;\n            }\n        }\n\n        .login {\n            margin-left: 20px;\n            text-align: center;\n\n            .inputs {\n                text-align: left !important;\n\n                ion-item {\n                    padding-top: 10px;\n                }\n            }\n\n            ion-button {\n                width: 100%;\n                padding: 0px;\n                margin: 0px;\n            }\n        }\n    }\n\n    ion-button {\n        width: 100%;\n        max-width: 36em;\n    }\n}\n\n\n.chart {\n    height: 50rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                               Orders by Month:                                Demand by Month for an Item:                                                  {{item.name}}                                Start Date:                    End Date:                    Submit                                 '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PantryStatisticsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PantryStatisticsPageModule.html":{"url":"modules/PantryStatisticsPageModule.html","title":"module - PantryStatisticsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PantryStatisticsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PantryStatisticsPageModule\n\n\n\ncluster_PantryStatisticsPageModule_declarations\n\n\n\ncluster_PantryStatisticsPageModule_imports\n\n\n\n\nPantryStatisticsPage\n\nPantryStatisticsPage\n\n\n\nPantryStatisticsPageModule\n\nPantryStatisticsPageModule\n\nPantryStatisticsPageModule -->\n\nPantryStatisticsPage->PantryStatisticsPageModule\n\n\n\n\n\nPantryStatisticsPageRoutingModule\n\nPantryStatisticsPageRoutingModule\n\nPantryStatisticsPageModule -->\n\nPantryStatisticsPageRoutingModule->PantryStatisticsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pantry-statistics/pantry-statistics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PantryStatisticsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PantryStatisticsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PantryStatisticsPageRoutingModule } from './pantry-statistics-routing.module';\n\nimport { PantryStatisticsPage } from './pantry-statistics.page';\nimport { NgChartsModule } from 'ng2-charts';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PantryStatisticsPageRoutingModule,\n    NgChartsModule\n  ],\n  declarations: [PantryStatisticsPage]\n})\nexport class PantryStatisticsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PantryStatisticsPageRoutingModule.html":{"url":"modules/PantryStatisticsPageRoutingModule.html","title":"module - PantryStatisticsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PantryStatisticsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pantry-statistics/pantry-statistics-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PantryStatisticsPage } from './pantry-statistics.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PantryStatisticsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PantryStatisticsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Private\n                                iConStyle\n                            \n                            \n                                    Private\n                                iContentRef\n                            \n                            \n                                pantry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openEditDetailsDialog\n                            \n                            \n                                updateColors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService, dialog: MatDialog, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:31\n                \n            \n\n\n            \n                \n                    Gets pantry data on page init\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDetailsDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDetailsDialog(data: Pantry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:45\n                \n            \n\n\n            \n                \n                    Opens the Pantry edit dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Pantry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pantry to Edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateColors\n                        \n                    \n                \n            \n            \n                \nupdateColors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:55\n                \n            \n\n\n            \n                \n                    Updates UI Colors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatMenuTrigger)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iConStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CSSStyleDeclaration\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iContentRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('iContent', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pantry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pantry\n\n                    \n                \n                \n                    \n                        Default value : new Pantry('id', 'name', 'desc', 'address', 'logo', 'red', 'black', 2, [], [], [])\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { FirebaseService } from '../services/firebase.service';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { IonContent } from '@ionic/angular';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  pantry: Pantry = new Pantry('id', 'name', 'desc', 'address', 'logo', 'red', 'black', 2, [], [], [])\n  @ViewChild (MatMenuTrigger) actions: MatMenuTrigger\n\n  @ViewChild('iContent', {static: true})\n  private iContentRef: ElementRef\n  private iConStyle: CSSStyleDeclaration\n  constructor(\n    private firebase: FirebaseService,\n    public dialog: MatDialog,\n    private alertService: AlertService\n  ) { }\n\n  /**\n   * Gets pantry data on page init\n   */\n  async ngOnInit() {\n    try {\n      this.pantry = await this.firebase.getPantry()\n      console.log(this.pantry)\n      this.updateColors()\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n  }\n\n  /**\n   * Opens the Pantry edit dialog\n   * @param data Pantry to Edit\n   */\n  openEditDetailsDialog(data: Pantry){\n    const dialogRef = this.dialog.open(EditDetailsDialog, {restoreFocus: false, data: data});\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n    });\n  }\n\n  /**\n   * Updates UI Colors\n   */\n  updateColors(){\n    document.body.style.setProperty('--ion-color-primary', this.pantry.primaryColor)\n    document.body.style.setProperty('--ion-color-primary-contrast', this.pantry.secondaryColor)\n  }\n\n}\n\n@Component({\n  selector: 'edit-details-dialog',\n  templateUrl: 'edit-details-dialog.html'\n}) export class EditDetailsDialog implements OnInit {\n  public name: string = this.data.name\n  public description: string = this.data.desc\n  public address: string = this.data.address\n  public icon: string = this.data.logoUrl\n  public primary: string = this.data.primaryColor\n  public secondary: string = this.data.secondaryColor\n  public maxOrder: number = this.data.orderLimit\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Pantry,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n  ){}\n\n  ngOnInit(): void {\n    // console.log(this.data)\n  }\n\n  /**\n   * Saves the pantry data that is changed in the edit dialog\n   */\n  async saveData(){\n    let pantry: Pantry = {\n      \"name\": this.name,\n      \"id\": this.data.id,\n      \"desc\": this.description,\n      \"address\": this.address,\n      \"logoUrl\": this.icon,\n      \"primaryColor\": this.primary,\n      \"secondaryColor\": this.secondary,\n      \"orderLimit\": this.maxOrder\n    }\n    this.data.name = this.name\n    this.data.desc = this.description\n    this.data.address = this.address\n    this.data.logoUrl = this.icon\n    this.data.primaryColor = this.primary\n    this.data.secondaryColor = this.secondary\n    this.data.orderLimit = this.maxOrder\n    try {\n      await this.firebaseService.updatePantry(pantry)\n      this.updateColors()\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n  /**\n   * Updates UI Colors\n   */\n  updateColors(){\n    document.body.style.setProperty('--ion-color-primary', this.data.primaryColor)\n    document.body.style.setProperty('--ion-color-primary-contrast', this.data.secondaryColor)\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      Pantry Details\n      \n        \n          Edit Details\n      \n    \n    \n      Pantry Name\n      {{pantry.name}}\n    \n    \n      Description\n      {{pantry.desc}}\n    \n    \n      Address\n      {{pantry.address}}\n    \n    \n      Icon\n      \n    \n    \n      Theme Colors\n      \n        \n          Primary: {{pantry.primaryColor}} \n        \n        \n          Secondary: {{pantry.secondaryColor}}\n        \n      \n    \n    \n      Weekly Max Order\n      {{pantry.orderLimit}}\n    \n  \n  \n\n\n  \n    App Version: 0.0.1\n  \n\n    \n\n    \n                \n                    ./profile.page.scss\n                \n                @import \"../../global.scss\";\n\nion-header {\n  ion-toolbar {\n    ion-title {\n      padding: 10px;\n      margin: 10px;\n    }\n    ion-button {\n      float: right;\n    }\n  }\n}\n\nion-content {\n  .logo{\n    width: 75px;\n    height: 75px;\n  }\n  ion-grid {\n      --ion-grid-column-padding: 10px;\n      border-collapse: collapse;\n      border-style: hidden;\n      \n      ion-row:first-child {\n        font-weight: bold;\n      }\n      ion-col {\n        border: 1px solid white;\n        border-bottom: 0;\n        border-right: 0;\n      }\n      ion-col:last-child {\n        border-right: 1px solid white;\n      }\n      \n      ion-row:last-child {\n        border-bottom: 1px solid white;\n      }\n    }\n    ion-button {\n      width: 100%;\n      padding: 1px;\n      margin: 1px;\n      --color: white;\n    }\n\n    .primary-color {\n      fill: var(--ion-color-primary);\n    }\n\n    .secondary-color { \n      fill: var(--ion-color-primary-contrast);\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Pantry Details                        Edit Details                    Pantry Name      {{pantry.name}}              Description      {{pantry.desc}}              Address      {{pantry.address}}              Icon                    Theme Colors                        Primary: {{pantry.primaryColor}}                           Secondary: {{pantry.secondaryColor}}                            Weekly Max Order      {{pantry.orderLimit}}              App Version: 0.0.1  '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageModule.html":{"url":"modules/ProfilePageModule.html","title":"module - ProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\n\nEditDetailsDialog\n\nEditDetailsDialog\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nEditDetailsDialog->ProfilePageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditDetailsDialog\n                        \n                        \n                            ProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfilePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { EditDetailsDialog, ProfilePage } from './profile.page';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport {MatInputModule} from '@angular/material/input';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule,\n    MatDialogModule,\n    ColorPickerModule,\n    MatInputModule\n  ],\n  declarations: [ProfilePage, EditDetailsDialog]\n})\nexport class ProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageRoutingModule.html":{"url":"modules/ProfilePageRoutingModule.html","title":"module - ProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampedItems.html":{"url":"interfaces/TimestampedItems.html","title":"interface - TimestampedItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampedItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pantry-statistics/pantry-statistics.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            month\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ChartConfiguration, ChartOptions, ChartType } from \"chart.js\";\nimport { ForecastService } from '../services/forecast.service';\nimport { FirebaseService } from '../services/firebase.service';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { AlertService } from '../services/alert.service';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\n\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n@Component({\n  selector: 'app-pantry-statistics',\n  templateUrl: './pantry-statistics.page.html',\n  styleUrls: ['./pantry-statistics.page.scss'],\n})\nexport class PantryStatisticsPage implements OnInit {\n  fromDate = \"\"\n  endDate = \"\"\n  inventory: FoodItem[]\n  selectedFoodItem: string\n  ordersByMonth: TimestampedOrders[]\n  ordersByMonthMonths: string[] = []\n  ordersByMonthNums: number[] = []\n  itembyMonth: TimestampedItems[]\n  itembyMonthMonths: string[] = []\n  itembyMonthNums: number[] = []\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertItemByMonth() {\n    this.itembyMonth.forEach(element => {\n      this.itembyMonthMonths.push(element.month)\n      this.itembyMonthNums.push(element.items)\n    })\n  }\n\n  /**\n   * DEBUG method\n   */\n  fromDateChange() {\n    // console.log(this.fromDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  endDateChange() {\n    // console.log(this.endDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  selectChange() {\n    // console.log(this.selectedFoodItem)\n  }\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertOrdersByMonth() {\n    this.ordersByMonth.forEach(element => {\n      this.ordersByMonthMonths.push(element.month)\n      this.ordersByMonthNums.push(element.orders)\n    })\n  }\n\n  /**\n   * Updates the item by month chart with proper data.\n   */\n  updateItemChart() {\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n  }\n\n  /**\n   * Updates data when the user presses submit on \"item by month\" graph\n   */\n  updateItemGraph() {\n    this.itembyMonth = []\n    this.itembyMonthNums = []\n    this.itembyMonthMonths = []\n    console.log(\"submit clicked\")\n    if(this.selectedFoodItem){\n      let fromDateObj = new Date(this.fromDate)\n      let endDateObj\n      if(this.endDate) {\n        endDateObj = new Date(this.endDate)\n      } else {\n        endDateObj = new Date()\n      }\n      console.log(fromDateObj.getMonth())\n      console.log(endDateObj.getMonth())\n      \n      if(fromDateObj.getMonth() ['data']\n  public lineChartDataItem: ChartConfiguration['data']\n  public lineChartOptions: ChartOptions = {\n    responsive: true\n  };\n  public lineChartLegend = true;\n\n  constructor(\n    private forecaster: ForecastService, \n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n  \n  /**\n   * Initializes Charts and Data\n   */\n  async ngOnInit() {\n    try {\n      let pantry = await this.firebaseService.getPantry()\n      this.inventory = await this.firebaseService.getInventory()\n      let orders = await this.firebaseService.getOrders()\n      this.forecaster.setData(pantry, this.inventory, orders)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n    \n\n   \n    console.log(\"Getting number of orders by month\")\n    this.ordersByMonth = this.forecaster.getNumOrderByMonth()\n    console.log(this.forecaster.getNumOrderByMonth())\n    this.convertOrdersByMonth()\n    this.lineChartDataOrders = {\n      labels: this.ordersByMonthMonths,\n      datasets: [\n        {\n          data:this.ordersByMonthNums,\n          label: 'Orders',\n          fill: true,\n          tension: 0.5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(255,0,0,0.3)'\n        }\n      ]\n    };\n\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n    console.log(\"Searching for bread demand by month\")\n    console.log(this.forecaster.getItemDemandByMonth(\"bread\"))\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampedItems-1.html":{"url":"interfaces/TimestampedItems-1.html","title":"interface - TimestampedItems-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampedItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/forecast.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            month\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { FoodItem } from '../../../../globalModels/foodItem'\nimport { Order } from '../../../../globalModels/order'\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { FirebaseService } from './firebase.service';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ForecastService {\n\n  pantry: Pantry\n  inventory: FoodItem[]\n  orders: Order[]\n\n  constructor() {\n\n  }\n\n  setData(dataPantry: Pantry, dataInventory: FoodItem[], dataOrders: Order[]) {\n    this.pantry = dataPantry\n    this.inventory = dataInventory\n    this.orders = dataOrders\n  }\n  /**\n   * @brief Returns the total numbers of orders for a given pantry\n   * @param type optional OrderStatus stating the desired OrderStatus\n   * @returns number of orders, optionally of a type\n   */\n  getNumOrder(type?: OrderStatus): number {\n    let retval = 0\n    if (type) {\n      this.orders.forEach(order => {\n        if (order.status === type) {\n          retval += 1\n        }\n      });\n    }\n    else if (this.orders) {\n      retval = this.orders?.length\n    }\n    return retval\n  }\n\n  /**\n   * @brief Gets a list of all food items of order types not cancelled or picked up\n   * @returns FoodItem list of all active items\n   */\n  getOutstandingItems(): FoodItem[] {\n    let retval: FoodItem[] = []\n    this.orders.forEach(order => {\n      if (order.status === OrderStatus.Processing) {\n        retval = retval.concat(order.items)\n      }\n    });\n    return retval\n  }\n\n  /**\n   * @brief Sorts a list of orders by datetime\n   * @param orders The orderlist to be sorted\n   */\n  sortOrdersByDate(orders: Order[]) {\n    orders.sort((a: Order, b: Order) => {\n      return (- a.timestamp.getTime() + b.timestamp.getTime())\n    })\n  }\n\n  /**\n   * @brief Returns a list of orders that have been filled \n   * @returns Order[] of filled orders\n   */\n  getOrderHistory(): Order[] {\n    let retval: Order[] = []\n    this.orders.forEach(order => {\n      if (order.status === OrderStatus['Order Picked Up'])\n        retval.push(order)\n    });\n    this.sortOrdersByDate(retval)\n    return retval\n  }\n\n  /**\n   * @brief For a list of food items, returns the number of occurences for that item\n   * @param list The list of food items\n   * @param itemName The item name\n   * @returns number of occurences in the foodlist\n   */\n  getNumItemOccurrences(list: FoodItem[], itemName: string): number {\n    let counter: number = 0\n    list.forEach(item => {\n      if (item.name === itemName) {\n        counter += item.quantity\n      }\n    });\n    return counter\n  }\n\n  /**\n   * @brief Creates a list of all food items in a given order list\n   * @param orders The orders to parse\n   * @returns The full list of items from an order list\n   */\n  getItemsFromOrders(orders: Order[]) {\n    let retval: FoodItem[] = []\n    orders.forEach(order => {\n      retval = retval.concat(order.items)\n    });\n    return retval\n  }\n\n  /**\n   * @brief Returns a list of lists where sublist are the orders for a given month\n   * @returns History list of lists \n   */\n  orderHistoryByMonth() {\n    let retval: Order[][] = []\n    let history = this.getOrderHistory()\n    let i: number = 0\n    this.sortOrdersByDate(history)\n\n    history.forEach(order => {\n      if (retval.length === 0) {\n        retval.push([order])\n      }\n      else if (order.timestamp.getMonth() === retval[i][0].timestamp.getMonth()\n        && order.timestamp.getFullYear() === retval[i][0].timestamp.getFullYear()) {\n        retval[i].push(order)\n      }\n      else {\n        retval.push([order])\n        i += 1\n      }\n    });\n    return retval.reverse()\n  }\n\n  /**\n   * @brief Reshapes an order list to a list of order lists by month\n   * @param orderList The list of orders\n   * @returns List of order lists by month\n   */\n  sortOrderListByMonth(orderList: Order[]) {\n    let retval: Order[][] = []\n    let i: number = 0\n    this.sortOrdersByDate(orderList)\n\n    orderList.forEach(order => {\n      if (retval.length === 0) {\n        retval.push([order])\n      }\n      else if (order.timestamp.getMonth() === retval[i][0].timestamp.getMonth()\n        && order.timestamp.getFullYear() === retval[i][0].timestamp.getFullYear()) {\n        retval[i].push(order)\n      }\n      else {\n        retval.push([order])\n        i += 1\n      }\n    });\n    return retval\n  }\n\n  /**\n   * @brief Returns a list containing the number of orders by month\n   * @returns List of numbers of orders by month\n   */\n  getNumOrderByMonth() {\n    let retval: TimestampedOrders[] = []\n    let history = this.orderHistoryByMonth()\n    history.forEach(orderList => {\n      retval.push({\n        \"orders\": orderList.length,\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'})\n      })\n    });\n    return retval\n  }\n\n  /**\n   * @brief Returns a list of the number of item occurences by month\n   * @param itemName The name of the item to query\n   */\n  getItemDemandByMonth(itemName: string) {\n    let retval: TimestampedItems[] = []\n    let history = this.orderHistoryByMonth()\n    history.forEach(orderList => {\n      let sum: number = 0\n      orderList.forEach(order => {\n        sum += this.getNumItemOccurrences(order.items, itemName)\n      });\n      retval.push({\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'}),\n        \"items\": sum\n      })\n    })\n    return retval\n  }\n\n  /**\n   * @brief Returns a list of timestamped items within a date range\n   * @param itemName The name of the item to search for\n   * @param start The start date of the range\n   * @param end The end date of the range\n   * @returns List of timestamped items\n   */\n  getItemDemandInRange(itemName:string, start:Date, end:Date) {\n    let retval: TimestampedItems[] = []\n    let history = this.getOrderHistory()\n\n    let cut = this.getOrdersInDateRange(history, start, end)\n    let cutReshaped = this.sortOrderListByMonth(cut)\n\n    cutReshaped.forEach(orderList => {\n      let sum: number = 0\n      orderList.forEach(order => {\n        sum += this.getNumItemOccurrences(order.items, itemName)\n      });\n      retval.push({\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'}),\n        \"items\": sum\n      })\n    })\n    return retval\n  }\n\n  /**\n   * @brief Returns the list of orders within a given range\n   * @param orderList The list of orders to parse\n   * @param start The start date of the range\n   * @param end The end date of the range\n   * @returns The list of orders falling within the range\n   */\n  getOrdersInDateRange(orderList: Order[], start: Date, end: Date) {\n    let retval: Order[] = []\n    orderList.forEach(order => {\n      if (order.timestamp.getTime() >= start.getTime() && order.timestamp.getTime()  {\n        i++\n        a += i * element\n        b += i\n        c += element\n        d += i ** 2\n      });\n\n      return (n * (a) - b * c) / (n * d - (b ** 2))\n    }\n  }\n\n  //FORECASTING AND PREDICTION FUNCTIONS\n\n  /**\n   * @brief Computes the current month order demand percent difference to previous year order demand\n   * @returns The percent difference in current year order demand to previous year order demand\n   */\n  prevYearDiff() {\n    let history = this.getOrderHistory()\n    let t2 = new Date()\n    let t1 = this.calcPrevDate(t2, 1)\n    let t3 = this.calcPrevDate(t2, 13)\n    let t4 = this.calcPrevDate(t2, 12)\n    let period1 = this.getOrdersInDateRange(history, t1, t2)\n    let period2 = this.getOrdersInDateRange(history, t3, t4)\n\n    if (period2.length == 0) {\n      return 0\n    }\n\n    return (period1.length - period2.length) / period2.length\n  }\n\n  /**\n   * @brief Computes the current month item demand percent difference compared to previous year\n   * @param itemName The name of the item to parse\n   * @returns The percent difference of current to previous year item demand\n   */\n  prevYearItemDiff(itemName: string) {\n    let history = this.getOrderHistory()\n    let t2 = new Date()\n    let t1 = this.calcPrevDate(t2, 1)\n    let t3 = this.calcPrevDate(t2, 13)\n    let t4 = this.calcPrevDate(t2, 12)\n    let period1 = this.getOrdersInDateRange(history, t1, t2)\n    let period2 = this.getOrdersInDateRange(history, t3, t4)\n\n    let currentDemand = this.getNumItemOccurrences(this.getItemsFromOrders(period1), itemName)\n    let previousDemand = this.getNumItemOccurrences(this.getItemsFromOrders(period2), itemName)\n\n    if (previousDemand == 0) {\n      return 0\n    }\n\n    return (currentDemand - previousDemand) / previousDemand\n  }\n\n  /**\n   * @brief Returns The linear regression of total order frequency trend on a monthly basis for n months\n   * @param n The number of months n to compute the linear regression on\n   * @returns A trend, positive or negative, corresponding to the desired period\n   */\n  getXMonthTrend(n: number): number {\n    let history = this.getOrderHistory()\n    let now = new Date()\n    let then = this.calcPrevDate(now, n)\n    let cut = this.getOrdersInDateRange(history, then, now)\n    let i: number = 0\n\n    let buckets: number[] = []\n    let curMonth: number = 0\n\n    cut.forEach(order => {\n      if (buckets.length == 0) {\n        buckets = [1]\n        curMonth = order.timestamp.getMonth()\n      }\n      else if (order.timestamp.getMonth() == curMonth) {\n        buckets[i] += 1\n      }\n      else {\n        buckets.push(1)\n        curMonth = order.timestamp.getMonth()\n        i++\n      }\n    });\n\n    // Negation a result of most recent months occurring at front of array\n    return -this.calcLinearRegression(buckets)\n  }\n\n  /**\n   * @brief Returns The linear regression of item frequency trend on a monthly basis for n months\n   * @param n The number of months n to compute the linear regression on\n   * @param itemName The name of the item to parse for\n   * @returns A trend, positive or negative, corresponding to the desired period\n   */\n  getXMonthItemTrend(n: number, itemName: string): number {\n    let history = this.getOrderHistory()\n    let now = new Date()\n    let then = this.calcPrevDate(now, n)\n    let cut = this.getOrdersInDateRange(history, then, now)\n    let i: number = 0\n\n    let buckets: number[] = []\n    let curMonth: number = 0\n\n    cut.forEach(order => {\n      if (buckets.length == 0) {\n        buckets = [this.getNumItemOccurrences(order.items, itemName)]\n        curMonth = order.timestamp.getMonth()\n      }\n      else if (order.timestamp.getMonth() == curMonth) {\n        buckets[i] += this.getNumItemOccurrences(order.items, itemName)\n      }\n      else {\n        buckets.push(this.getNumItemOccurrences(order.items, itemName))\n        curMonth = order.timestamp.getMonth()\n        i++\n      }\n    });\n    // Negation a result of most recent months occurring at front of array\n    return -this.calcLinearRegression(buckets)\n  }\n\n  /**\n   * @brief Computes the 1 Dimensional Convolution of an array with a kernel\n   * @note Uses average padding\n   * @param array The array to be convolved\n   * @param kernel The kernel to convolve with\n   * @param norm The normalization factor of the convolution\n   * @returns The result of the convolution, an array of numbers\n   */\n  convolve1D(array: number[], kernel: number[], norm: number): number[] {\n    let copy = []\n    let retval = []\n    let avg = 0\n\n    array.forEach(num => {\n      copy.push(num)\n      avg += num\n    });\n\n    avg /= array.length\n    let paddingNum = (kernel.length / 2) | 0\n\n    for (let i = 0; i  {\n      demandHist.push(element.orders)\n    })\n    return this.convolve1D(demandHist, [-1, -2, 0, 2, 1], 6)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampedOrders.html":{"url":"interfaces/TimestampedOrders.html","title":"interface - TimestampedOrders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampedOrders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pantry-statistics/pantry-statistics.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            month\n                                        \n                                \n                                \n                                        \n                                            orders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orders:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ChartConfiguration, ChartOptions, ChartType } from \"chart.js\";\nimport { ForecastService } from '../services/forecast.service';\nimport { FirebaseService } from '../services/firebase.service';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { AlertService } from '../services/alert.service';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\n\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n@Component({\n  selector: 'app-pantry-statistics',\n  templateUrl: './pantry-statistics.page.html',\n  styleUrls: ['./pantry-statistics.page.scss'],\n})\nexport class PantryStatisticsPage implements OnInit {\n  fromDate = \"\"\n  endDate = \"\"\n  inventory: FoodItem[]\n  selectedFoodItem: string\n  ordersByMonth: TimestampedOrders[]\n  ordersByMonthMonths: string[] = []\n  ordersByMonthNums: number[] = []\n  itembyMonth: TimestampedItems[]\n  itembyMonthMonths: string[] = []\n  itembyMonthNums: number[] = []\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertItemByMonth() {\n    this.itembyMonth.forEach(element => {\n      this.itembyMonthMonths.push(element.month)\n      this.itembyMonthNums.push(element.items)\n    })\n  }\n\n  /**\n   * DEBUG method\n   */\n  fromDateChange() {\n    // console.log(this.fromDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  endDateChange() {\n    // console.log(this.endDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  selectChange() {\n    // console.log(this.selectedFoodItem)\n  }\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertOrdersByMonth() {\n    this.ordersByMonth.forEach(element => {\n      this.ordersByMonthMonths.push(element.month)\n      this.ordersByMonthNums.push(element.orders)\n    })\n  }\n\n  /**\n   * Updates the item by month chart with proper data.\n   */\n  updateItemChart() {\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n  }\n\n  /**\n   * Updates data when the user presses submit on \"item by month\" graph\n   */\n  updateItemGraph() {\n    this.itembyMonth = []\n    this.itembyMonthNums = []\n    this.itembyMonthMonths = []\n    console.log(\"submit clicked\")\n    if(this.selectedFoodItem){\n      let fromDateObj = new Date(this.fromDate)\n      let endDateObj\n      if(this.endDate) {\n        endDateObj = new Date(this.endDate)\n      } else {\n        endDateObj = new Date()\n      }\n      console.log(fromDateObj.getMonth())\n      console.log(endDateObj.getMonth())\n      \n      if(fromDateObj.getMonth() ['data']\n  public lineChartDataItem: ChartConfiguration['data']\n  public lineChartOptions: ChartOptions = {\n    responsive: true\n  };\n  public lineChartLegend = true;\n\n  constructor(\n    private forecaster: ForecastService, \n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n  \n  /**\n   * Initializes Charts and Data\n   */\n  async ngOnInit() {\n    try {\n      let pantry = await this.firebaseService.getPantry()\n      this.inventory = await this.firebaseService.getInventory()\n      let orders = await this.firebaseService.getOrders()\n      this.forecaster.setData(pantry, this.inventory, orders)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n    \n\n   \n    console.log(\"Getting number of orders by month\")\n    this.ordersByMonth = this.forecaster.getNumOrderByMonth()\n    console.log(this.forecaster.getNumOrderByMonth())\n    this.convertOrdersByMonth()\n    this.lineChartDataOrders = {\n      labels: this.ordersByMonthMonths,\n      datasets: [\n        {\n          data:this.ordersByMonthNums,\n          label: 'Orders',\n          fill: true,\n          tension: 0.5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(255,0,0,0.3)'\n        }\n      ]\n    };\n\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n    console.log(\"Searching for bread demand by month\")\n    console.log(this.forecaster.getItemDemandByMonth(\"bread\"))\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampedOrders-1.html":{"url":"interfaces/TimestampedOrders-1.html","title":"interface - TimestampedOrders-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampedOrders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/forecast.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            month\n                                        \n                                \n                                \n                                        \n                                            orders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orders:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { FoodItem } from '../../../../globalModels/foodItem'\nimport { Order } from '../../../../globalModels/order'\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { FirebaseService } from './firebase.service';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ForecastService {\n\n  pantry: Pantry\n  inventory: FoodItem[]\n  orders: Order[]\n\n  constructor() {\n\n  }\n\n  setData(dataPantry: Pantry, dataInventory: FoodItem[], dataOrders: Order[]) {\n    this.pantry = dataPantry\n    this.inventory = dataInventory\n    this.orders = dataOrders\n  }\n  /**\n   * @brief Returns the total numbers of orders for a given pantry\n   * @param type optional OrderStatus stating the desired OrderStatus\n   * @returns number of orders, optionally of a type\n   */\n  getNumOrder(type?: OrderStatus): number {\n    let retval = 0\n    if (type) {\n      this.orders.forEach(order => {\n        if (order.status === type) {\n          retval += 1\n        }\n      });\n    }\n    else if (this.orders) {\n      retval = this.orders?.length\n    }\n    return retval\n  }\n\n  /**\n   * @brief Gets a list of all food items of order types not cancelled or picked up\n   * @returns FoodItem list of all active items\n   */\n  getOutstandingItems(): FoodItem[] {\n    let retval: FoodItem[] = []\n    this.orders.forEach(order => {\n      if (order.status === OrderStatus.Processing) {\n        retval = retval.concat(order.items)\n      }\n    });\n    return retval\n  }\n\n  /**\n   * @brief Sorts a list of orders by datetime\n   * @param orders The orderlist to be sorted\n   */\n  sortOrdersByDate(orders: Order[]) {\n    orders.sort((a: Order, b: Order) => {\n      return (- a.timestamp.getTime() + b.timestamp.getTime())\n    })\n  }\n\n  /**\n   * @brief Returns a list of orders that have been filled \n   * @returns Order[] of filled orders\n   */\n  getOrderHistory(): Order[] {\n    let retval: Order[] = []\n    this.orders.forEach(order => {\n      if (order.status === OrderStatus['Order Picked Up'])\n        retval.push(order)\n    });\n    this.sortOrdersByDate(retval)\n    return retval\n  }\n\n  /**\n   * @brief For a list of food items, returns the number of occurences for that item\n   * @param list The list of food items\n   * @param itemName The item name\n   * @returns number of occurences in the foodlist\n   */\n  getNumItemOccurrences(list: FoodItem[], itemName: string): number {\n    let counter: number = 0\n    list.forEach(item => {\n      if (item.name === itemName) {\n        counter += item.quantity\n      }\n    });\n    return counter\n  }\n\n  /**\n   * @brief Creates a list of all food items in a given order list\n   * @param orders The orders to parse\n   * @returns The full list of items from an order list\n   */\n  getItemsFromOrders(orders: Order[]) {\n    let retval: FoodItem[] = []\n    orders.forEach(order => {\n      retval = retval.concat(order.items)\n    });\n    return retval\n  }\n\n  /**\n   * @brief Returns a list of lists where sublist are the orders for a given month\n   * @returns History list of lists \n   */\n  orderHistoryByMonth() {\n    let retval: Order[][] = []\n    let history = this.getOrderHistory()\n    let i: number = 0\n    this.sortOrdersByDate(history)\n\n    history.forEach(order => {\n      if (retval.length === 0) {\n        retval.push([order])\n      }\n      else if (order.timestamp.getMonth() === retval[i][0].timestamp.getMonth()\n        && order.timestamp.getFullYear() === retval[i][0].timestamp.getFullYear()) {\n        retval[i].push(order)\n      }\n      else {\n        retval.push([order])\n        i += 1\n      }\n    });\n    return retval.reverse()\n  }\n\n  /**\n   * @brief Reshapes an order list to a list of order lists by month\n   * @param orderList The list of orders\n   * @returns List of order lists by month\n   */\n  sortOrderListByMonth(orderList: Order[]) {\n    let retval: Order[][] = []\n    let i: number = 0\n    this.sortOrdersByDate(orderList)\n\n    orderList.forEach(order => {\n      if (retval.length === 0) {\n        retval.push([order])\n      }\n      else if (order.timestamp.getMonth() === retval[i][0].timestamp.getMonth()\n        && order.timestamp.getFullYear() === retval[i][0].timestamp.getFullYear()) {\n        retval[i].push(order)\n      }\n      else {\n        retval.push([order])\n        i += 1\n      }\n    });\n    return retval\n  }\n\n  /**\n   * @brief Returns a list containing the number of orders by month\n   * @returns List of numbers of orders by month\n   */\n  getNumOrderByMonth() {\n    let retval: TimestampedOrders[] = []\n    let history = this.orderHistoryByMonth()\n    history.forEach(orderList => {\n      retval.push({\n        \"orders\": orderList.length,\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'})\n      })\n    });\n    return retval\n  }\n\n  /**\n   * @brief Returns a list of the number of item occurences by month\n   * @param itemName The name of the item to query\n   */\n  getItemDemandByMonth(itemName: string) {\n    let retval: TimestampedItems[] = []\n    let history = this.orderHistoryByMonth()\n    history.forEach(orderList => {\n      let sum: number = 0\n      orderList.forEach(order => {\n        sum += this.getNumItemOccurrences(order.items, itemName)\n      });\n      retval.push({\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'}),\n        \"items\": sum\n      })\n    })\n    return retval\n  }\n\n  /**\n   * @brief Returns a list of timestamped items within a date range\n   * @param itemName The name of the item to search for\n   * @param start The start date of the range\n   * @param end The end date of the range\n   * @returns List of timestamped items\n   */\n  getItemDemandInRange(itemName:string, start:Date, end:Date) {\n    let retval: TimestampedItems[] = []\n    let history = this.getOrderHistory()\n\n    let cut = this.getOrdersInDateRange(history, start, end)\n    let cutReshaped = this.sortOrderListByMonth(cut)\n\n    cutReshaped.forEach(orderList => {\n      let sum: number = 0\n      orderList.forEach(order => {\n        sum += this.getNumItemOccurrences(order.items, itemName)\n      });\n      retval.push({\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'}),\n        \"items\": sum\n      })\n    })\n    return retval\n  }\n\n  /**\n   * @brief Returns the list of orders within a given range\n   * @param orderList The list of orders to parse\n   * @param start The start date of the range\n   * @param end The end date of the range\n   * @returns The list of orders falling within the range\n   */\n  getOrdersInDateRange(orderList: Order[], start: Date, end: Date) {\n    let retval: Order[] = []\n    orderList.forEach(order => {\n      if (order.timestamp.getTime() >= start.getTime() && order.timestamp.getTime()  {\n        i++\n        a += i * element\n        b += i\n        c += element\n        d += i ** 2\n      });\n\n      return (n * (a) - b * c) / (n * d - (b ** 2))\n    }\n  }\n\n  //FORECASTING AND PREDICTION FUNCTIONS\n\n  /**\n   * @brief Computes the current month order demand percent difference to previous year order demand\n   * @returns The percent difference in current year order demand to previous year order demand\n   */\n  prevYearDiff() {\n    let history = this.getOrderHistory()\n    let t2 = new Date()\n    let t1 = this.calcPrevDate(t2, 1)\n    let t3 = this.calcPrevDate(t2, 13)\n    let t4 = this.calcPrevDate(t2, 12)\n    let period1 = this.getOrdersInDateRange(history, t1, t2)\n    let period2 = this.getOrdersInDateRange(history, t3, t4)\n\n    if (period2.length == 0) {\n      return 0\n    }\n\n    return (period1.length - period2.length) / period2.length\n  }\n\n  /**\n   * @brief Computes the current month item demand percent difference compared to previous year\n   * @param itemName The name of the item to parse\n   * @returns The percent difference of current to previous year item demand\n   */\n  prevYearItemDiff(itemName: string) {\n    let history = this.getOrderHistory()\n    let t2 = new Date()\n    let t1 = this.calcPrevDate(t2, 1)\n    let t3 = this.calcPrevDate(t2, 13)\n    let t4 = this.calcPrevDate(t2, 12)\n    let period1 = this.getOrdersInDateRange(history, t1, t2)\n    let period2 = this.getOrdersInDateRange(history, t3, t4)\n\n    let currentDemand = this.getNumItemOccurrences(this.getItemsFromOrders(period1), itemName)\n    let previousDemand = this.getNumItemOccurrences(this.getItemsFromOrders(period2), itemName)\n\n    if (previousDemand == 0) {\n      return 0\n    }\n\n    return (currentDemand - previousDemand) / previousDemand\n  }\n\n  /**\n   * @brief Returns The linear regression of total order frequency trend on a monthly basis for n months\n   * @param n The number of months n to compute the linear regression on\n   * @returns A trend, positive or negative, corresponding to the desired period\n   */\n  getXMonthTrend(n: number): number {\n    let history = this.getOrderHistory()\n    let now = new Date()\n    let then = this.calcPrevDate(now, n)\n    let cut = this.getOrdersInDateRange(history, then, now)\n    let i: number = 0\n\n    let buckets: number[] = []\n    let curMonth: number = 0\n\n    cut.forEach(order => {\n      if (buckets.length == 0) {\n        buckets = [1]\n        curMonth = order.timestamp.getMonth()\n      }\n      else if (order.timestamp.getMonth() == curMonth) {\n        buckets[i] += 1\n      }\n      else {\n        buckets.push(1)\n        curMonth = order.timestamp.getMonth()\n        i++\n      }\n    });\n\n    // Negation a result of most recent months occurring at front of array\n    return -this.calcLinearRegression(buckets)\n  }\n\n  /**\n   * @brief Returns The linear regression of item frequency trend on a monthly basis for n months\n   * @param n The number of months n to compute the linear regression on\n   * @param itemName The name of the item to parse for\n   * @returns A trend, positive or negative, corresponding to the desired period\n   */\n  getXMonthItemTrend(n: number, itemName: string): number {\n    let history = this.getOrderHistory()\n    let now = new Date()\n    let then = this.calcPrevDate(now, n)\n    let cut = this.getOrdersInDateRange(history, then, now)\n    let i: number = 0\n\n    let buckets: number[] = []\n    let curMonth: number = 0\n\n    cut.forEach(order => {\n      if (buckets.length == 0) {\n        buckets = [this.getNumItemOccurrences(order.items, itemName)]\n        curMonth = order.timestamp.getMonth()\n      }\n      else if (order.timestamp.getMonth() == curMonth) {\n        buckets[i] += this.getNumItemOccurrences(order.items, itemName)\n      }\n      else {\n        buckets.push(this.getNumItemOccurrences(order.items, itemName))\n        curMonth = order.timestamp.getMonth()\n        i++\n      }\n    });\n    // Negation a result of most recent months occurring at front of array\n    return -this.calcLinearRegression(buckets)\n  }\n\n  /**\n   * @brief Computes the 1 Dimensional Convolution of an array with a kernel\n   * @note Uses average padding\n   * @param array The array to be convolved\n   * @param kernel The kernel to convolve with\n   * @param norm The normalization factor of the convolution\n   * @returns The result of the convolution, an array of numbers\n   */\n  convolve1D(array: number[], kernel: number[], norm: number): number[] {\n    let copy = []\n    let retval = []\n    let avg = 0\n\n    array.forEach(num => {\n      copy.push(num)\n      avg += num\n    });\n\n    avg /= array.length\n    let paddingNum = (kernel.length / 2) | 0\n\n    for (let i = 0; i  {\n      demandHist.push(element.orders)\n    })\n    return this.convolve1D(demandHist, [-1, -2, 0, 2, 1], 6)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementPage.html":{"url":"components/UserManagementPage.html","title":"component - UserManagementPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                styleUrls\n                ./user-management.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-management.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                length\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                pantryId\n                            \n                            \n                                records\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                makeAdmin\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                removeAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, alertController: AlertController, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.page.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        makeAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeAdmin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-management/user-management.page.ts:63\n                \n            \n\n\n            \n                \n                    Calls the firebase service to promote a user. Then updates user perms on the table\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user to promote\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-management/user-management.page.ts:42\n                \n            \n\n\n            \n                \n                    Retreives a pantry's users and intializes the table data\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAdmin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-management/user-management.page.ts:75\n                \n            \n\n\n            \n                \n                    Calls the firebase service to demote a user. Then updates user perms on the table.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user to demote\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatMenuTrigger)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['email', 'permissions', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [5, 10, 25, 100]\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pantryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        records\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { User } from '../../../../globalModels/user';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AlertController } from '@ionic/angular';\nimport { FirebaseService } from '../services/firebase.service';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.page.html',\n  styleUrls: ['./user-management.page.scss'],\n})\nexport class UserManagementPage implements OnInit {\n\n  displayedColumns: string[] = ['email', 'permissions', 'actions']\n  records: MatTableDataSource\n  length: number = 0\n  pageSize = 5\n  pageSizeOptions: number[] = [5, 10, 25, 100]\n  pantryId = ''\n\n  @ViewChild(MatPaginator) paginator: MatPaginator\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger\n\n  constructor(\n    public dialog: MatDialog,\n    private alertController: AlertController,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n  ) {\n\n  }\n\n  /**\n   * Retreives a pantry's users and intializes the table data\n   */\n  async ngOnInit() {\n    try {\n      this.pantryId = this.firebaseService.getPantryId()\n      let data = await this.firebaseService.getUsers()\n      this.records = new MatTableDataSource(data)\n      this.length = this.records.data.length\n      this.records.paginator = this.paginator\n      this.records.sort = this.sort\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n    // for (let d of data) {\n    //   console.log(d)\n    // }\n  }\n\n  /**\n   * Calls the firebase service to promote a user. Then updates user perms on the table\n   * @param user user to promote\n   */\n  async makeAdmin(user: User) {\n    await this.firebaseService.promoteUser(user.uid).then(async () => {\n      console.log('getPerms')\n      user.perms = await this.firebaseService.getPerms(user)\n      console.log(user.perms)\n    })\n  }\n\n  /**\n   * Calls the firebase service to demote a user. Then updates user perms on the table.\n   * @param user user to demote\n   */\n  async removeAdmin(user: User) {\n    await this.firebaseService.demoteUser(user.uid).then(async () => {\n      user.perms = await this.firebaseService.getPerms(user)\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    User Management\n  \n\n\n\n    \n      \n        Email\n        {{element.email}}\n      \n      \n        Permissions\n        \n          {{element.perms.admin === true && element.perms.pantry == pantryId ? 'Admin' : 'Not Admin'}}\n        \n      \n      \n        Actions\n        \n          \n                      \n          \n          \n            \n              Grant Admin Access\n            \n            \n              Revoke Admin Access\n            \n          \n        \n      \n\n      \n      \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./user-management.page.scss\n                \n                .table-container{\n    height: 100vh\n}\n\n\ntable {\n    width: 100%;\n}\n\n.mat-cell {\n    width: 40%;\n}\n  \n.mat-column-gender {\n    width: 20%;\n}\n\nth.mat-sort-header-sorted {\n    color: black;\n}\n  \n\n.mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.actions {\n    fill: black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      User Management                    Email        {{element.email}}                    Permissions                  {{element.perms.admin === true && element.perms.pantry == pantryId ? \\'Admin\\' : \\'Not Admin\\'}}                            Actions                                                                                      Grant Admin Access                                      Revoke Admin Access                                                            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserManagementPageModule.html":{"url":"modules/UserManagementPageModule.html","title":"module - UserManagementPageModule","body":"\n                   \n\n\n\n\n    Modules\n    UserManagementPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserManagementPageModule\n\n\n\ncluster_UserManagementPageModule_declarations\n\n\n\ncluster_UserManagementPageModule_imports\n\n\n\n\nUserManagementPage\n\nUserManagementPage\n\n\n\nUserManagementPageModule\n\nUserManagementPageModule\n\nUserManagementPageModule -->\n\nUserManagementPage->UserManagementPageModule\n\n\n\n\n\nUserManagementPageRoutingModule\n\nUserManagementPageRoutingModule\n\nUserManagementPageModule -->\n\nUserManagementPageRoutingModule->UserManagementPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user-management/user-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserManagementPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserManagementPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserManagementPageRoutingModule } from './user-management-routing.module';\n\nimport { UserManagementPage } from './user-management.page';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserManagementPageRoutingModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDialogModule,\n  ],\n  declarations: [UserManagementPage]\n})\nexport class UserManagementPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserManagementPageRoutingModule.html":{"url":"modules/UserManagementPageRoutingModule.html","title":"module - UserManagementPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserManagementPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user-management/user-management-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserManagementPage } from './user-management.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserManagementPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserManagementPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOrderDialog.html":{"url":"components/ViewOrderDialog.html","title":"component - ViewOrderDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOrderDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-management/order-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                view-order-dialog\n            \n\n\n\n\n            \n                templateUrl\n                view-order-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Order)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-management/order-management.page.ts:207\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Order\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(status: OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:218\n                \n            \n\n\n            \n                \n                    Converts the numerical order status to the coresponding string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        OrderStatus to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        String representaion of OrderStatus\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:208\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Order } from '../../../../globalModels/order';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { AlertController } from '@ionic/angular';\nimport { Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { Observable, from } from 'rxjs';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-order-management',\n  templateUrl: './order-management.page.html',\n  styleUrls: ['./order-management.page.scss'],\n})\n\nexport class OrderManagementPage implements AfterViewInit {\n\n  displayedColumns: string[] = ['timestamp', 'id', 'status', 'actions'];\n  records: MatTableDataSource = new MatTableDataSource([]);\n\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatTable, { static: true }) table: MatTable;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n  constructor(\n    public dialog: MatDialog,\n    private firebase: FirebaseService,\n    private alertController: AlertController,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async ionViewWillEnter() {\n\n  }\n\n  /**\n   * Retrieves orders from the DB and initalizes table.\n   */\n  async ngAfterViewInit() {\n    try {\n      let orders = await this.firebase.getOrders()\n      // orders.sort(function(a, b){\n      //   return b.timestamp.getDate() - a.timestamp.getDate()\n      // })\n      this.records.data = orders\n      this.length = this.records.data.length\n      this.records.paginator = this.paginator;\n      this.records.sort = this.sort;\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n\n  /**\n   * Updates the table based on the value in the filter input\n   * @param event Event emited by filter changing\n   */\n  updateFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Removes an order from the table\n   * @param order Order to be removed\n   */\n  removeItem(order: Order) {\n    //find the index from id\n    let removed = this.records.data.splice(this.records.data.indexOf(order), 1)\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n\n  /**\n   * Opens an alert for the user for confirm if they want to remove an order\n   * @param order Order to be removed\n   */\n  async openAlert(order: Order) {\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => { }\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(order)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param order Order to edit\n   */\n  openEditDialog(order: Order) {\n    const dialogRef = this.dialog.open(EditOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * Opens the order view dialog\n   * @param order Order to view\n   */\n  openViewDialog(order: Order) {\n    const dialogRef = this.dialog.open(ViewOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n}\n\n\n@Component({\n  selector: 'edit-order-dialog',\n  templateUrl: 'edit-order-dialog.html'\n})\n\nexport class EditOrderDialog implements OnInit {\n  values = Object.values(OrderStatus).filter((v) => isNaN(Number(v)))\n  enumvals = Object.values(OrderStatus).filter((v) => !isNaN(Number(v)))\n  value = this.getEnumKey(this.data.status)\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n\n  ngOnInit() {\n\n    // console.log(this.values)\n    // console.log(this.enumvals)\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getEnumKey(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Saves the changes made to an order in the DB (mainly order status)\n   * @param data Order to update in the DB\n   */\n  async saveOrder(data: Order) {\n    console.log(this.value)\n    data.status = this.values.indexOf(this.value) + 1\n    console.log(data.status)\n    try {\n      this.firebaseService.updateOrderStatus(data, data.status)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update order status. Please try again later.', ['Ok'])\n    }\n    \n  }\n}\n\n\n@Component({\n  selector: 'view-order-dialog',\n  templateUrl: 'view-order-dialog.html'\n})\nexport class ViewOrderDialog implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order) { }\n  ngOnInit() {\n\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n}\n    \n\n    \n        Order Number: {{data.id}}\n\n    \n        General\n        Order Number: {{data.id}}\n        Timestamp: {{data.timestamp.toLocaleString()}}\n        Order Status: {{getStatus(data.status)}}\n        \n        \n        \n            \n                Order Contents:\n                \n                    \n                        \n                            \n                                {{item.name}}, {{item.quantity}}\n                            \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        \n            Close\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Order Number: {{data.id}}            General        Order Number: {{data.id}}        Timestamp: {{data.timestamp.toLocaleString()}}        Order Status: {{getStatus(data.status)}}                                                    Order Contents:                                                                                                                        {{item.name}}, {{item.quantity}}                                                                                                                                                                    Close            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewOrderDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/forgot-password/forgot-password.page.ts\n            \n            component\n            ForgotPasswordPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/home.page.ts\n            \n            component\n            HomePage\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/inventory-management/inventory-management.page.ts\n            \n            component\n            AddDialog\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/inventory-management/inventory-management.page.ts\n            \n            component\n            EditDialog\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/inventory-management/inventory-management.page.ts\n            \n            component\n            InventoryManagementPage\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/login/login.module.ts\n            \n            interface\n            Pantry\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/order-management/order-management.page.ts\n            \n            component\n            EditOrderDialog\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/order-management/order-management.page.ts\n            \n            component\n            OrderManagementPage\n            \n                33 %\n                (7/21)\n            \n        \n        \n            \n                \n                src/app/order-management/order-management.page.ts\n            \n            component\n            ViewOrderDialog\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/pantry-statistics/pantry-statistics.page.ts\n            \n            component\n            PantryStatisticsPage\n            \n                33 %\n                (8/24)\n            \n        \n        \n            \n                \n                src/app/pantry-statistics/pantry-statistics.page.ts\n            \n            interface\n            TimestampedItems\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pantry-statistics/pantry-statistics.page.ts\n            \n            interface\n            TimestampedOrders\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/profile/profile.page.ts\n            \n            component\n            EditDetailsDialog\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/profile/profile.page.ts\n            \n            component\n            ProfilePage\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/services/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            variable\n            auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            variable\n            functions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/firebase.service.ts\n            \n            injectable\n            FirebaseService\n            \n                81 %\n                (18/22)\n            \n        \n        \n            \n                \n                src/app/services/firebase.service.ts\n            \n            variable\n            db\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/firebase.service.ts\n            \n            variable\n            functions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/forecast.service.ts\n            \n            injectable\n            ForecastService\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                src/app/services/forecast.service.ts\n            \n            interface\n            TimestampedItems\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/forecast.service.ts\n            \n            interface\n            TimestampedOrders\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.page.ts\n            \n            component\n            UserManagementPage\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            analytics\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            authentication\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            db\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            firebaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.4\n        \n            @angular/cdk : ^15.2.3\n        \n            @angular/common : ^15.2.4\n        \n            @angular/core : ^15.2.4\n        \n            @angular/forms : ^15.2.4\n        \n            @angular/material : ^15.2.3\n        \n            @angular/platform-browser : ^15.2.4\n        \n            @angular/platform-browser-dynamic : ^15.2.4\n        \n            @angular/router : ^15.2.4\n        \n            @capacitor/app : 4.1.1\n        \n            @capacitor/core : 4.6.3\n        \n            @capacitor/haptics : 4.1.0\n        \n            @capacitor/keyboard : 4.1.1\n        \n            @capacitor/status-bar : 4.1.1\n        \n            @ionic/angular : ^6.1.9\n        \n            @swimlane/ngx-datatable : ^20.1.0\n        \n            firebase : ^9.17.1\n        \n            ionicons : ^6.0.3\n        \n            ng2-charts : ^4.1.1\n        \n            ngx-color-picker : ^14.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ForgotPasswordPageModule\n\n\n\ncluster_ForgotPasswordPageModule_declarations\n\n\n\ncluster_ForgotPasswordPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_InventoryManagementPageModule\n\n\n\ncluster_InventoryManagementPageModule_declarations\n\n\n\ncluster_InventoryManagementPageModule_imports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_OrderManagementPageModule\n\n\n\ncluster_OrderManagementPageModule_declarations\n\n\n\ncluster_OrderManagementPageModule_imports\n\n\n\ncluster_PantryStatisticsPageModule\n\n\n\ncluster_PantryStatisticsPageModule_declarations\n\n\n\ncluster_PantryStatisticsPageModule_imports\n\n\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_UserManagementPageModule\n\n\n\ncluster_UserManagementPageModule_declarations\n\n\n\ncluster_UserManagementPageModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\n\n\nForgotPasswordPageModule\n\nForgotPasswordPageModule\n\nForgotPasswordPageModule -->\n\nForgotPasswordPage->ForgotPasswordPageModule\n\n\n\n\n\nForgotPasswordPageRoutingModule\n\nForgotPasswordPageRoutingModule\n\nForgotPasswordPageModule -->\n\nForgotPasswordPageRoutingModule->ForgotPasswordPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nAddDialog\n\nAddDialog\n\n\n\nInventoryManagementPageModule\n\nInventoryManagementPageModule\n\nInventoryManagementPageModule -->\n\nAddDialog->InventoryManagementPageModule\n\n\n\n\n\nEditDialog\n\nEditDialog\n\nInventoryManagementPageModule -->\n\nEditDialog->InventoryManagementPageModule\n\n\n\n\n\nInventoryManagementPage\n\nInventoryManagementPage\n\nInventoryManagementPageModule -->\n\nInventoryManagementPage->InventoryManagementPageModule\n\n\n\n\n\nInventoryManagementPageRoutingModule\n\nInventoryManagementPageRoutingModule\n\nInventoryManagementPageModule -->\n\nInventoryManagementPageRoutingModule->InventoryManagementPageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nEditOrderDialog\n\nEditOrderDialog\n\n\n\nOrderManagementPageModule\n\nOrderManagementPageModule\n\nOrderManagementPageModule -->\n\nEditOrderDialog->OrderManagementPageModule\n\n\n\n\n\nOrderManagementPage\n\nOrderManagementPage\n\nOrderManagementPageModule -->\n\nOrderManagementPage->OrderManagementPageModule\n\n\n\n\n\nViewOrderDialog\n\nViewOrderDialog\n\nOrderManagementPageModule -->\n\nViewOrderDialog->OrderManagementPageModule\n\n\n\n\n\nOrderManagementPageRoutingModule\n\nOrderManagementPageRoutingModule\n\nOrderManagementPageModule -->\n\nOrderManagementPageRoutingModule->OrderManagementPageModule\n\n\n\n\n\nPantryStatisticsPage\n\nPantryStatisticsPage\n\n\n\nPantryStatisticsPageModule\n\nPantryStatisticsPageModule\n\nPantryStatisticsPageModule -->\n\nPantryStatisticsPage->PantryStatisticsPageModule\n\n\n\n\n\nPantryStatisticsPageRoutingModule\n\nPantryStatisticsPageRoutingModule\n\nPantryStatisticsPageModule -->\n\nPantryStatisticsPageRoutingModule->PantryStatisticsPageModule\n\n\n\n\n\nEditDetailsDialog\n\nEditDetailsDialog\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nEditDetailsDialog->ProfilePageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nUserManagementPage\n\nUserManagementPage\n\n\n\nUserManagementPageModule\n\nUserManagementPageModule\n\nUserManagementPageModule -->\n\nUserManagementPage->UserManagementPageModule\n\n\n\n\n\nUserManagementPageRoutingModule\n\nUserManagementPageRoutingModule\n\nUserManagementPageModule -->\n\nUserManagementPageRoutingModule->UserManagementPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        27 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForgotPasswordPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForgotPasswordPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InventoryManagementPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InventoryManagementPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderManagementPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderManagementPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PantryStatisticsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PantryStatisticsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserManagementPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserManagementPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            analytics   (src/.../main.ts)\n                        \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            auth   (src/.../auth.service.ts)\n                        \n                        \n                            authentication   (src/.../main.ts)\n                        \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            db   (src/.../main.ts)\n                        \n                        \n                            db   (src/.../firebase.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            firebaseConfig   (src/.../main.ts)\n                        \n                        \n                            functions   (src/.../auth.service.ts)\n                        \n                        \n                            functions   (src/.../firebase.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        analytics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getAnalytics(app)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : initializeApp(firebaseConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authentication\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getAuth(app)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFirestore(app)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firebaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.firebaseConfig\n                    \n                \n\n\n        \n    \n\n    src/app/services/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : authentication\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        functions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFunctions()\n                    \n                \n\n\n        \n    \n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'adminApp',\n  webDir: 'www',\n  bundledWebRuntime: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/services/firebase.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFirestore()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        functions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFunctions()\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n\n  firebaseConfig: {\n    apiKey: \"AIzaSyAKaIr2_B6rLny9ctiI-e4EGa5wuCycgJY\",\n    authDomain: \"foodpantry-64c40.firebaseapp.com\",\n    projectId: \"foodpantry-64c40\",\n    storageBucket: \"foodpantry-64c40.appspot.com\",\n    messagingSenderId: \"393456523030\",\n    appId: \"1:393456523030:web:1d160ece617e4e8eaf2237\",\n    measurementId: \"G-P8H232S2F7\"\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n\n  firebaseConfig: {\n    apiKey: \"AIzaSyAKaIr2_B6rLny9ctiI-e4EGa5wuCycgJY\",\n    authDomain: \"foodpantry-64c40.firebaseapp.com\",\n    projectId: \"foodpantry-64c40\",\n    storageBucket: \"foodpantry-64c40.appspot.com\",\n    messagingSenderId: \"393456523030\",\n    appId: \"1:393456523030:web:1d160ece617e4e8eaf2237\",\n    measurementId: \"G-P8H232S2F7\"\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
