var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddDialog.html",[0,0.24,1,1.014]],["body/components/AddDialog.html",[0,0.344,1,1.339,2,1.137,3,0.158,4,0.158,5,0.771,6,0.771,7,0.771,8,0.087,9,3.503,10,3.257,11,1.104,12,0.729,13,2.094,14,2.505,15,2.214,16,2.114,17,1.494,18,1.578,19,1.668,20,0.771,21,2.138,22,1.494,23,2.114,24,0.616,25,0.819,26,3.883,27,4.296,28,3.582,29,3.172,30,3.883,31,0.914,32,1.778,33,3.244,34,1.812,35,0.901,36,1.866,37,1.653,38,2.683,39,1.573,40,3.404,41,0.619,42,0.022,43,1.262,44,0.983,45,0.555,46,2.184,47,2.338,48,2.143,49,2.387,50,2.425,51,0.819,52,2.184,53,1.271,54,0.863,55,0.815,56,2.521,57,1.915,58,2.184,59,1.235,60,2.184,61,2.184,62,2.184,63,0.299,64,1.981,65,0.863,66,0.166,67,1.612,68,0.863,69,1.842,70,0.972,71,1.842,72,0.972,73,1.842,74,0.972,75,1.612,76,1.271,77,2.114,78,0.47,79,2.722,80,0.863,81,0.771,82,1.104,83,1.104,84,1.5,85,1.166,86,1.019,87,1.182,88,0.69,89,1.182,90,0.194,91,0.194,92,0.914,93,1.182,94,3.725,95,4.024,96,1.612,97,1.182,98,1.182,99,2.38,100,1.182,101,1.427,102,1.182,103,1.182,104,1.182,105,0.972,106,1.182,107,1.182,108,1.182,109,1.182,110,1.104,111,1.612,112,1.656,113,1.271,114,1.754,115,1.562,116,1.494,117,1.656,118,1.661,119,1.271,120,1.5,121,0.619,122,1.5,123,1.182,124,1.182,125,1.182,126,1.182,127,1.182,128,1.182,129,1.271,130,2.582,131,1.656,132,1.271,133,1.981,134,2.173,135,2.263,136,1.271,137,1.271,138,1.271,139,1.137,140,1.271,141,1.271,142,1.271,143,1.271,144,1.271,145,2.582,146,1.981,147,1.104,148,2.387,149,2.582,150,1.271,151,1.612,152,1.656,153,1.271,154,1.656,155,2.706,156,2.434,157,2.114,158,2.263,159,1.981,160,0.775,161,1.656,162,1.182,163,1.034,164,1.182,165,1.182,166,1.271,167,1.182,168,1.612,169,2.77,170,1.981,171,1.981,172,1.271,173,1.656,174,1.182,175,1.957,176,1.656,177,2.114,178,1.656,179,1.72,180,1.72,181,1.72,182,1.656,183,1.656,184,1.656,185,1.656,186,1.656,187,1.656,188,3.582,189,0.771,190,2.582,191,1.656,192,1.656,193,1.656,194,2.582,195,1.656,196,2.582,197,1.656,198,1.5,199,1.656,200,1.656,201,1.656,202,1.656,203,1.5,204,0.965,205,1.104,206,1.656,207,1.656,208,2.143,209,1.375,210,2.582,211,1.656,212,1.656,213,2.935,214,3.883,215,2.582,216,1.656,217,1.656,218,1.656,219,1.656,220,3.883,221,4.566,222,4.566,223,1.656,224,1.656,225,1.656,226,2.338,227,2.582,228,2.434,229,1.656,230,1.034,231,1.5,232,1.656,233,1.656,234,1.656,235,1.104,236,1.656,237,1.656,238,1.271,239,1.104,240,1.656,241,1.656,242,1.656,243,3.404,244,2.908,245,3.404,246,0.771,247,1.202,248,1.076,249,0.771,250,1.578,251,0.771,252,1.668,253,0.619,254,1.573,255,0.771,256,0.619,257,0.729,258,0.619,259,1.064,260,0.586,261,0.654,262,0.771,263,0.555,264,0.771,265,1.477,266,0.555,267,0.771,268,0.586,269,0.526,270,0.372,271,0.771,272,0.586,273,0.771,274,0.586,275,0.619,276,0.771,277,0.771,278,0.771,279,0.01,280,0.01]],["title/injectables/AlertService.html",[281,1.414,282,1.263]],["body/injectables/AlertService.html",[3,0.221,4,0.221,8,0.189,12,1.589,16,2.974,24,0.862,31,1.581,32,1.812,35,1.025,39,1.581,41,1.669,42,0.022,43,1.267,44,1.13,45,1.497,51,1.145,59,1.592,63,0.273,66,0.189,77,3.533,78,1.025,90,0.221,91,0.221,118,1.669,134,2.256,139,1.145,158,3.904,162,2.574,163,3.311,164,3.873,167,3.873,174,2.574,279,0.017,280,0.017,281,2.327,282,2.078,283,2.995,284,4.065,285,5.886,286,4.758,287,4.758,288,5.886,289,4.758,290,5.886,291,5.029,292,5.886,293,3.705,294,4.464,295,5.886,296,2.574,297,2.405,298,3.609]],["title/components/AppComponent.html",[0,0.24,253,1.014]],["body/components/AppComponent.html",[0,0.386,1,1.078,2,1.702,3,0.176,4,0.176,5,1.342,6,1.342,7,1.342,8,0.151,13,1.27,14,1.342,15,1.342,17,1.816,20,1.342,21,2.292,22,1.611,24,0.689,25,1.226,31,1.368,35,0.819,38,1.801,39,1.836,41,1.444,42,0.022,43,1.321,44,1.229,45,1.295,51,1.477,53,1.902,59,1.457,63,0.297,66,0.151,78,0.819,84,2.611,85,1.308,86,2.046,88,1.611,90,0.176,91,0.176,92,1.021,160,1.308,175,1.919,204,1.078,239,2.574,246,1.342,247,1.798,248,1.611,249,1.342,250,2.05,251,1.342,252,2.166,253,1.74,254,1.878,255,1.342,256,1.078,257,1.27,258,1.078,259,1.627,260,1.021,261,1.139,262,1.342,263,0.967,264,1.342,265,2.028,266,0.967,267,1.342,268,1.021,269,0.915,270,1.091,271,1.342,272,1.021,273,1.342,274,1.021,275,1.078,276,1.342,277,1.342,278,1.342,279,0.015,280,0.015,297,2.574,298,2.884,299,1.801,300,3.249,301,5.745,302,5.094,303,4.145,304,5.745,305,5.745,306,6.136,307,5.094,308,6.136,309,4.654,310,2.884,311,5.25,312,5.094,313,3.803,314,5.094,315,3.803,316,3.803,317,3.249,318,3.803,319,3.803,320,3.803,321,1.342,322,3.249,323,3.249,324,3.803,325,3.803,326,3.803,327,3.803,328,2.267,329,5.094,330,5.094,331,2.756,332,4.352,333,4.352,334,3.498,335,2.756,336,3.207,337,4.352,338,2.964,339,5.094,340,2.014,341,3.249,342,3.803,343,3.803]],["title/modules/AppModule.html",[344,1.014,345,2.457]],["body/modules/AppModule.html",[3,0.23,4,0.23,8,0.197,42,0.022,63,0.331,66,0.197,78,1.071,90,0.23,91,0.23,253,2.091,254,1.335,279,0.017,280,0.017,321,1.755,340,1.966,345,4.992,346,1.197,347,2.391,348,4.248,349,4.248,350,4.248,351,4.248,352,4.447,353,2.691,354,2.084,355,4.973,356,2.691,357,1.624,358,6.047,359,3.771,360,1.624,361,6.047,362,5.166,363,3.771,364,6.047,365,2.213,366,6.047,367,4.973,368,2.213,369,6.047,370,4.973,371,4.973,372,4.973,373,4.973,374,4.973]],["title/modules/AppRoutingModule.html",[344,1.014,352,2.252]],["body/modules/AppRoutingModule.html",[3,0.204,4,0.204,8,0.175,10,2.38,42,0.022,63,0.286,66,0.175,85,1.002,86,1.846,90,0.204,91,0.204,139,1.059,160,1.002,259,1.118,261,1.317,270,0.75,279,0.016,280,0.016,321,1.553,331,3.335,334,3.847,335,2.38,336,2.769,346,1.059,352,3.527,357,1.181,360,1.504,375,4.398,376,2.083,377,5.603,378,2.653,379,2.437,380,4.782,381,4.398,382,3.419,383,7.118,384,4.398,385,7.118,386,4.398,387,5.855,388,5.603,389,5.603,390,4.249,391,5.603,392,5.603,393,2.559,394,4.398,395,2.769,396,4.398,397,4.398,398,4.398,399,6.165,400,4.398,401,4.398,402,2.38,403,4.398,404,4.398,405,4.398,406,4.398,407,2.38,408,4.398,409,4.398,410,4.398,411,2.769,412,4.398,413,4.398,414,4.398,415,2.083]],["title/guards/AuthGuard.html",[380,2.457,416,2.713]],["body/guards/AuthGuard.html",[3,0.222,4,0.222,8,0.19,18,1.598,24,0.867,31,1.586,35,1.272,39,1.586,41,1.675,42,0.022,43,1.272,44,1.134,45,1.502,51,1.152,63,0.319,66,0.19,90,0.222,91,0.222,114,1.433,121,1.357,160,1.345,165,2.589,279,0.017,280,0.017,281,2.335,296,2.589,297,2.418,310,3.629,311,5.309,317,5.047,321,1.689,328,2.13,338,2.785,380,4.056,387,5.872,417,4.786,418,4.089,419,4.786,420,4.786,421,6.691,422,6.407,423,6.691,424,4.786,425,5.907,426,4.033,427,4.48,428,6.407,429,2.785,430,4.089,431,5.047,432,4.089,433,4.786,434,4.089,435,4.786,436,4.786,437,4.786,438,4.786]],["title/injectables/AuthService.html",[281,1.414,303,2.252]],["body/injectables/AuthService.html",[3,0.163,4,0.163,8,0.14,24,0.639,31,1.3,32,1.99,35,1.042,38,3.05,39,1.771,41,1.687,42,0.022,43,1.281,44,1.142,45,1.513,51,1.55,53,1.808,56,1.57,59,1.648,63,0.306,66,0.14,90,0.163,91,0.163,111,2.618,114,1.449,118,1.87,121,1,139,1.617,160,1.467,189,1.245,203,2.422,270,1.125,279,0.014,280,0.014,281,1.914,282,2.329,283,2.221,296,1.908,297,1.783,303,3.047,309,5.169,328,1.57,393,3.216,426,2.221,427,3.672,429,2.052,430,4.136,431,3.014,439,2.675,440,5.949,441,4.841,442,4.841,443,4.841,444,3.014,445,3.528,446,3.528,447,4.841,448,3.528,449,5.326,450,4.841,451,3.528,452,4.841,453,3.528,454,3.047,455,3.528,456,3.528,457,3.528,458,3.528,459,3.528,460,3.672,461,3.014,462,3.014,463,3.014,464,3.325,465,3.528,466,3.528,467,2.052,468,3.672,469,3.528,470,4.841,471,2.675,472,3.528,473,3.528,474,4.841,475,3.528,476,3.528,477,3.528,478,3.014,479,3.528,480,3.528,481,3.528,482,4.841,483,4.722,484,4.841,485,3.528,486,4.722,487,3.528,488,3.528,489,3.528,490,4.136,491,4.136,492,3.528,493,3.528,494,3.528,495,4.841,496,4.841,497,2.493,498,4.841,499,4.841,500,2.352,501,2.493,502,2.493,503,2.493,504,4.841,505,3.528,506,2.675,507,3.014,508,3.528,509,2.029,510,4.841,511,3.672,512,4.136,513,3.528]],["title/components/EditDetailsDialog.html",[0,0.24,256,1.014]],["body/components/EditDetailsDialog.html",[0,0.356,1,0.774,2,1.347,3,0.127,4,0.127,5,0.964,6,0.964,7,0.964,8,0.108,12,1.888,13,0.912,15,2.16,17,1.275,18,1.602,19,1.87,20,0.964,21,2.203,22,1.517,23,2.038,24,0.494,25,0.971,31,1.083,32,1.502,34,1.888,35,0.869,37,1.687,39,1.798,41,0.774,42,0.022,43,1.405,44,1.232,45,0.694,48,3.019,51,1.155,53,1.791,54,2.419,55,2.285,56,1.215,57,1.424,59,1.525,63,0.284,65,1.595,66,0.108,67,2.272,68,1.08,75,1.911,76,1.02,78,0.588,81,0.964,82,1.38,83,1.38,85,0.622,86,0.818,88,0.863,90,0.187,91,0.187,92,0.733,96,1.293,111,1.293,113,2.685,114,1.771,115,1.791,116,2.117,118,1.144,121,0.774,134,0.964,139,0.657,151,1.293,157,1.38,160,0.622,169,2.182,175,2.259,177,1.38,179,1.38,180,1.38,181,1.38,189,0.964,204,0.774,205,1.38,208,3.019,209,1.719,230,1.293,244,3.446,246,0.964,247,1.424,248,1.275,249,0.964,250,1.769,251,0.964,252,1.87,253,0.774,254,1.722,255,0.964,256,1.502,257,2.044,258,0.774,259,1.22,260,0.733,261,0.818,262,0.964,263,0.694,264,0.964,265,1.693,266,0.694,267,0.964,268,0.733,269,0.657,270,1.21,271,0.964,272,1.083,273,0.964,274,0.733,275,0.774,276,0.964,277,0.964,278,0.964,279,0.012,280,0.012,282,2.264,293,4.037,336,1.719,497,1.691,500,2.094,501,1.691,502,1.691,503,1.691,509,1.691,514,2.071,515,4.641,516,4.098,517,4.098,518,4.828,519,4.018,520,4.828,521,1.875,522,4.034,523,2.731,524,2.731,525,2.539,526,3.446,527,2.731,528,4.098,529,4.098,530,2.731,531,1.38,532,1.875,533,2.731,534,4.098,535,2.731,536,4.098,537,2.731,538,4.098,539,2.731,540,4.526,541,2.731,542,4.526,543,2.731,544,3.446,545,1.478,546,2.333,547,1.215,548,2.333,549,2.333,550,2.333,551,2.333,552,3.446,553,3.019,554,2.333,555,1.38,556,1.875,557,2.333,558,2.333,559,2.333,560,2.333,561,1.38,562,1.875,563,1.875,564,1.589,565,2.333,566,2.333,567,3.446,568,1.691,569,1.691,570,1.145,571,2.333,572,2.333,573,4.018,574,3.638,575,2.796,576,2.333,577,2.77,578,2.333,579,3.446,580,2.333,581,3.446,582,3.446,583,1.589,584,3.446,585,1.719,586,3.446,587,2.071,588,3.446,589,2.071,590,3.446,591,2.333,592,3.446,593,2.77,594,1.795,595,3.059]],["title/components/EditDialog.html",[0,0.24,204,1.014]],["body/components/EditDialog.html",[0,0.33,1,0.9,2,1.06,3,0.183,4,0.147,5,0.705,6,0.705,7,0.705,8,0.079,9,3.679,10,3.421,11,1.01,12,1.829,13,1.898,14,2.523,15,2.161,16,1.996,17,1.422,18,1.502,19,1.588,20,0.705,21,2.105,22,1.422,23,1.996,24,0.575,25,0.764,26,1.515,27,1.515,28,3.411,29,1.515,30,1.515,31,0.852,32,1.736,33,2.712,34,1.745,35,0.85,37,1.644,38,1.87,39,1.673,41,1.553,42,0.022,43,1.379,44,1.176,45,1.392,47,1.372,48,1.258,49,1.996,50,2.324,51,1.318,53,2.045,54,1.561,55,1.475,56,2.325,57,1.844,59,1.117,63,0.293,64,1.847,65,0.79,66,0.157,67,1.503,68,0.79,69,1.717,70,0.889,71,1.717,72,0.889,73,1.717,74,0.889,75,1.503,76,1.185,77,1.996,78,0.43,79,2.855,80,0.79,81,0.705,82,1.01,83,1.01,84,1.372,85,1.117,86,0.95,87,1.081,88,0.632,89,1.081,90,0.183,91,0.183,92,0.852,93,1.081,94,3.902,95,4.494,96,1.503,97,1.081,98,1.081,99,2.165,100,1.081,101,1.33,102,1.081,103,1.081,104,1.081,105,0.889,106,1.081,107,1.081,108,1.081,109,1.081,110,1.01,111,1.503,112,1.515,113,1.679,114,1.865,115,1.679,116,1.731,117,1.515,118,1.611,119,1.163,120,1.372,121,0.567,122,1.372,123,1.081,124,1.081,125,1.081,126,1.081,127,1.081,128,1.081,129,1.163,130,2.407,131,1.515,132,1.163,133,1.847,134,2.118,135,2.136,136,1.163,137,1.163,138,1.163,139,1.083,140,1.163,141,1.163,142,1.163,143,1.163,144,1.163,145,2.407,146,1.847,147,1.01,148,2.273,149,2.995,150,1.163,151,1.503,152,1.515,153,1.163,154,1.515,155,2.65,156,2.298,157,1.996,158,2.136,159,1.847,160,0.723,161,1.515,162,1.081,163,0.946,164,1.081,165,1.081,166,1.163,167,2.136,168,1.503,169,2.433,170,1.847,171,1.847,172,1.163,173,1.515,174,1.081,175,2.045,176,1.515,177,1.996,178,1.515,179,1.604,180,1.604,181,1.604,182,1.515,183,1.515,184,1.515,185,1.515,186,1.515,187,1.515,188,3.411,189,0.705,190,2.407,191,1.515,192,1.515,193,1.515,194,2.407,195,1.515,196,2.407,197,1.515,198,1.372,199,1.515,200,1.515,201,1.515,202,1.515,203,1.372,204,1.275,205,1.01,206,2.995,207,2.995,208,2.486,209,1.258,210,3.411,211,2.407,212,2.407,213,2.826,214,3.721,215,3.411,216,2.407,217,2.407,218,2.407,219,2.407,220,3.721,221,4.439,222,4.439,223,2.407,224,2.407,225,2.407,226,2.18,227,3.411,228,3.039,229,2.407,230,1.503,231,2.18,232,2.407,233,1.515,234,1.515,235,1.01,236,1.515,237,2.407,238,1.847,239,1.604,240,2.407,241,2.407,242,2.407,246,0.705,247,1.121,248,1.004,249,0.705,250,1.502,251,0.705,252,1.588,253,0.567,254,1.526,255,0.705,256,0.567,257,0.667,258,0.567,259,1.004,260,0.537,261,0.598,262,0.705,263,0.508,264,0.705,265,1.394,266,0.508,267,0.705,268,0.537,269,0.481,270,0.341,271,0.705,272,0.537,273,0.705,274,0.537,275,0.567,276,0.705,277,0.705,278,0.705,279,0.009,280,0.009,519,2.407,521,1.372,531,1.01,532,1.372,595,2.407,596,3.174,597,3.174,598,2.18,599,3.174,600,1.998,601,1.998,602,1.998,603,1.998,604,1.998,605,1.998,606,1.998,607,1.998,608,1.998,609,1.998,610,1.998,611,1.998,612,3.174,613,2.712,614,3.174,615,3.174,616,3.174,617,2.407,618,2.712]],["title/components/EditOrderDialog.html",[0,0.24,258,1.014]],["body/components/EditOrderDialog.html",[0,0.349,1,0.636,2,1.161,3,0.104,4,0.104,5,0.792,6,0.792,7,0.792,8,0.089,11,1.133,12,1.421,13,0.749,14,1.227,15,2.189,16,2.15,17,1.515,18,1.601,19,1.692,20,0.792,21,2.148,22,1.515,23,2.15,24,0.629,25,0.837,31,0.933,32,1.555,34,1.832,35,0.748,37,1.588,39,1.588,41,1.206,42,0.022,43,1.116,44,0.92,45,1.082,49,2.422,50,2.456,51,1.32,53,0.838,54,1.682,55,2.136,56,1.547,57,1.936,59,1.382,63,0.308,64,2.022,65,0.887,66,0.138,67,1.646,68,0.887,69,1.88,70,0.998,71,1.88,72,0.998,73,2.302,74,0.998,75,1.646,76,1.298,77,2.15,78,0.483,79,0.887,80,0.887,81,0.792,82,1.133,83,1.133,85,0.511,86,1.041,87,1.214,88,0.709,89,1.214,90,0.197,91,0.197,92,0.602,93,1.214,96,1.646,97,1.214,98,1.214,99,0.887,100,1.214,101,1.457,102,1.214,103,1.214,104,1.214,105,0.998,106,1.214,107,1.214,108,1.214,109,1.214,110,1.133,111,1.062,113,1.936,114,1.552,115,0.838,116,1.961,118,1.206,121,0.636,123,1.214,124,1.214,125,2.302,126,1.214,127,1.214,128,1.214,129,1.305,132,1.305,133,2.022,134,2.143,135,2.302,136,1.305,137,1.305,138,1.305,139,1.153,140,1.305,141,1.305,142,1.305,143,1.305,144,1.305,146,2.022,147,1.133,148,1.756,150,1.305,151,1.646,153,2.476,155,1.457,156,2.476,157,2.15,158,2.302,159,2.022,160,0.791,162,1.214,163,1.062,164,1.214,165,1.214,166,2.022,167,1.214,168,1.646,169,2.593,170,2.022,171,2.022,172,1.305,174,1.214,175,2.109,177,1.756,179,1.756,180,1.756,181,1.756,189,0.792,204,0.636,205,1.756,213,1.88,228,2.022,230,2.015,235,1.756,238,2.022,246,0.792,247,1.227,248,1.099,249,0.792,250,1.601,251,0.792,252,1.692,253,0.636,254,1.63,255,0.792,256,0.636,257,0.749,258,1.359,259,1.884,260,0.602,261,0.672,262,0.792,263,0.57,264,0.792,265,1.502,266,0.57,267,0.792,268,0.933,269,0.54,270,0.382,271,0.792,272,0.602,273,0.792,274,0.602,275,0.985,276,1.936,277,0.792,278,0.792,279,0.01,280,0.01,282,2.143,328,2.133,402,3.284,426,1.412,429,1.305,497,1.457,500,1.895,501,1.457,502,1.457,503,1.457,509,1.457,521,1.54,525,2.188,531,1.133,532,1.54,547,0.998,561,1.133,568,1.457,569,1.457,570,0.94,594,1.894,595,2.636,619,3.531,620,3.227,621,3.227,622,3.476,623,3.476,624,3.476,625,2.636,626,3.822,627,2.243,628,3.291,629,3.634,630,4.597,631,3.634,632,3.634,633,3.291,634,2.243,635,2.636,636,2.243,637,2.636,638,2.243,639,3.634,640,3.634,641,2.243,642,2.636,643,2.243,644,1.701,645,2.636,646,1.305,647,1.305,648,1.701,649,3.227,650,1.701,651,1.54,652,1.412,653,1.54,654,1.701,655,1.701,656,1.412,657,1.701,658,1.701,659,1.701,660,1.701,661,2.636,662,3.227,663,1.701,664,1.701,665,1.701,666,1.701,667,1.701,668,1.701,669,1.701,670,1.701,671,1.701,672,1.701,673,1.701,674,2.636,675,1.701,676,1.701,677,1.701,678,4.094,679,2.969,680,2.969,681,2.969]],["title/injectables/FirebaseService.html",[37,0.961,281,1.414]],["body/injectables/FirebaseService.html",[3,0.071,4,0.071,8,0.061,12,1.968,13,0.855,14,1.942,16,0.776,17,0.81,24,0.278,25,0.616,31,0.688,32,2.008,33,1.759,35,0.551,37,0.688,38,2.187,39,1.738,41,1.67,42,0.022,43,1.327,44,1.168,45,1.498,47,1.759,50,2.525,51,1.643,54,1.012,55,0.956,59,1.214,63,0.247,66,0.061,79,2.654,80,0.607,85,1.253,90,0.071,91,0.071,94,1.759,95,1.759,114,0.46,115,1.724,116,1.827,118,1.921,121,1.309,134,2.08,139,1.111,147,1.943,148,1.294,151,1.821,160,1.474,175,0.513,198,1.054,226,3.777,230,2.187,231,4.233,239,2.333,250,0.855,257,0.855,259,1.707,270,1.155,279,0.007,280,0.007,281,1.012,283,0.966,294,4.381,296,0.831,297,0.776,328,2.707,331,1.386,337,1.312,338,2.237,427,5.01,432,2.188,434,2.188,444,1.312,449,4.699,454,0.966,460,1.942,461,1.312,462,1.312,463,1.312,464,1.759,467,0.893,471,1.164,478,4.935,483,3.285,486,2.815,490,5.707,491,1.312,500,1.937,506,2.916,507,1.312,511,1.942,512,3.285,515,1.164,545,0.831,561,3.028,568,2.053,569,1.612,570,1.073,583,0.893,585,0.966,587,1.164,589,1.164,594,1.902,598,1.759,626,2.237,628,3.171,630,2.935,633,2.641,646,0.893,647,0.893,652,3.772,682,1.164,683,2.815,684,3.295,685,2.561,686,2.561,687,3.845,688,3.295,689,3.845,690,3.845,691,3.845,692,3.845,693,4.274,694,4.617,695,2.561,696,2.561,697,2.561,698,2.561,699,2.561,700,2.561,701,2.561,702,2.561,703,1.535,704,2.561,705,2.561,706,1.535,707,3.845,708,3.945,709,3.945,710,2.561,711,3.845,712,3.241,713,3.845,714,3.285,715,2.561,716,6.238,717,1.535,718,6.774,719,5.266,720,3.845,721,2.561,722,4.617,723,1.535,724,4.381,725,4.172,726,4.617,727,2.561,728,1.535,729,2.561,730,2.884,731,2.561,732,2.561,733,1.535,734,1.535,735,5.119,736,3.845,737,2.188,738,1.535,739,3.845,740,1.535,741,2.188,742,2.561,743,2.561,744,1.535,745,2.561,746,2.561,747,2.561,748,2.561,749,1.535,750,3.945,751,2.561,752,1.535,753,3.845,754,2.561,755,1.535,756,2.561,757,1.535,758,2.561,759,2.561,760,2.561,761,1.535,762,2.561,763,2.561,764,1.535,765,2.561,766,2.561,767,4.274,768,1.535,769,2.561,770,2.561,771,2.561,772,1.535,773,1.535,774,2.188,775,1.535,776,1.535,777,1.535,778,1.535,779,1.535,780,1.535,781,2.561,782,1.535,783,1.535,784,1.535,785,1.312,786,1.535,787,1.535,788,1.535,789,1.535,790,3.295,791,1.535,792,3.295,793,1.535,794,2.561,795,1.535,796,4.825,797,3.845,798,6.305,799,3.845,800,3.845,801,5.132,802,1.535,803,1.535,804,1.535,805,1.535,806,3.845,807,1.535,808,1.535,809,1.535,810,1.535,811,1.535,812,1.535,813,1.535,814,1.535,815,1.535,816,1.535,817,2.561,818,1.535,819,2.561,820,1.535,821,2.561,822,2.561,823,1.535,824,1.535,825,1.535,826,1.535,827,1.535,828,1.535,829,1.535,830,2.561,831,1.535,832,1.535,833,1.535,834,2.561,835,1.535,836,1.535,837,1.535,838,2.561,839,1.312,840,1.535,841,1.535,842,1.535,843,1.535,844,1.535,845,1.535,846,1.535,847,4.274,848,4.274,849,1.535,850,3.845,851,3.845,852,3.845,853,3.295,854,2.561,855,1.535,856,1.312,857,1.535,858,1.535,859,1.535,860,1.535,861,1.535,862,1.535,863,3.295,864,1.535,865,1.535,866,1.535,867,1.535,868,1.535,869,1.535,870,1.535,871,1.312,872,1.312,873,1.535,874,1.054,875,1.312,876,1.164,877,1.164,878,1.535,879,1.535,880,2.561,881,1.535,882,1.535,883,2.561,884,1.535,885,1.535,886,1.535,887,1.535,888,1.535,889,1.535,890,1.535,891,1.535]],["title/components/ForgotPasswordPage.html",[0,0.24,260,0.961]],["body/components/ForgotPasswordPage.html",[0,0.411,1,1.226,2,1.851,3,0.2,4,0.2,5,1.526,6,1.526,7,1.526,8,0.172,13,1.444,15,1.526,18,1.851,19,2.159,20,1.526,21,2.325,22,1.752,24,0.783,31,1.488,34,2.154,35,1.317,39,1.488,42,0.021,43,1.193,51,1.041,53,1.614,63,0.2,66,0.172,85,0.985,88,1.752,90,0.2,91,0.2,92,1.161,160,0.985,175,2.043,204,1.226,246,1.526,247,1.956,248,1.752,249,1.526,250,2.154,251,1.526,252,2.277,253,1.226,254,1.921,255,1.526,256,1.226,257,1.444,258,1.226,259,1.555,260,1.732,261,2.142,262,1.526,263,1.099,264,1.526,265,2.159,266,1.099,267,1.526,268,1.161,269,1.041,270,0.737,271,1.526,272,1.161,273,1.526,274,1.161,275,1.226,276,1.526,277,1.526,278,1.526,279,0.016,280,0.016,299,2.048,354,2.703,393,4.088,395,3.85,454,4.295,892,4.2,893,3.694,894,6.116,895,5.542,896,4.324,897,4.324,898,4.734,899,5.542,900,5.542,901,5.542,902,5.542,903,2.339,904,2.722,905,2.969,906,4.324,907,2.969,908,4.324,909,2.969]],["title/modules/ForgotPasswordPageModule.html",[344,1.014,910,2.457]],["body/modules/ForgotPasswordPageModule.html",[3,0.237,4,0.237,8,0.203,42,0.022,63,0.33,66,0.203,78,1.102,90,0.237,91,0.237,260,1.91,261,1.842,279,0.018,280,0.018,340,2.024,346,1.232,347,2.433,353,2.739,354,2.145,356,2.739,357,1.652,360,1.652,365,2.739,368,2.278,393,2.978,395,3.222,892,3.515,910,4.982,911,4.373,912,4.373,913,4.373,914,4.478,915,5.118,916,2.915,917,2.278,918,2.915,919,2.278,920,4.373]],["title/modules/ForgotPasswordPageRoutingModule.html",[344,1.014,914,2.252]],["body/modules/ForgotPasswordPageRoutingModule.html",[0,0.364,3,0.251,4,0.251,8,0.215,42,0.022,63,0.313,66,0.215,90,0.251,91,0.251,139,1.302,260,1.708,261,1.62,279,0.018,280,0.018,321,1.91,346,1.302,357,1.453,360,1.708,376,2.563,378,3.012,379,2.671,382,2.563,393,3.148,395,3.406,415,2.563,892,3.716,914,4.004,920,4.623,921,2.734]],["title/components/HomePage.html",[0,0.24,263,0.91]],["body/components/HomePage.html",[0,0.39,1,1.098,2,1.723,3,0.18,4,0.18,5,1.368,6,1.368,7,1.368,8,0.154,12,1.294,13,1.294,15,1.368,17,1.631,20,1.368,21,2.297,22,1.631,24,0.701,25,1.241,31,1.385,32,1.644,34,2.065,35,1.111,36,3.31,37,1.778,39,1.66,41,1.098,42,0.022,43,1.386,44,1.113,45,0.985,51,0.932,59,1.175,63,0.269,66,0.154,81,1.368,85,0.882,88,1.631,90,0.18,91,0.18,92,1.04,99,2.292,114,1.16,118,1.098,160,0.882,168,2.443,175,1.937,204,1.098,246,1.368,247,1.821,248,1.631,249,1.368,250,2.065,251,1.368,252,2.182,253,1.098,254,1.935,255,1.368,256,1.098,257,1.294,258,1.098,259,1.474,260,1.04,261,1.16,262,1.368,263,1.572,264,1.368,265,2.047,266,0.985,267,1.368,268,1.04,269,0.932,270,1.185,271,1.368,272,1.04,273,1.368,274,1.04,275,1.098,276,1.368,277,1.368,278,1.368,279,0.015,280,0.015,299,1.835,334,3.542,338,3.597,341,4.406,545,2.096,553,3.247,563,3.542,564,2.254,575,1.724,583,3.374,613,4.406,617,2.938,652,3.247,874,3.542,903,3.345,904,2.439,905,2.66,907,2.66,909,2.66,922,3.31,923,5.158,924,5.798,925,5.158,926,5.158,927,3.874,928,3.542,929,5.158,930,5.158,931,3.874,932,2.439,933,3.874,934,3.874,935,5.158,936,5.158,937,5.158,938,3.874,939,3.874,940,2.938,941,2.66,942,4.406,943,3.874,944,3.874,945,3.874,946,3.247,947,3.542,948,2.938,949,5.158,950,3.001,951,3.874,952,3.874,953,3.874,954,3.874,955,3.874,956,3.874]],["title/modules/HomePageModule.html",[344,1.014,957,2.457]],["body/modules/HomePageModule.html",[3,0.239,4,0.239,8,0.205,42,0.022,63,0.33,66,0.205,78,1.109,90,0.239,91,0.239,263,1.811,279,0.018,280,0.018,334,3.537,340,2.036,346,1.24,347,2.442,353,2.749,354,2.159,356,2.749,357,1.659,360,1.659,365,2.749,368,2.292,916,2.925,917,2.292,918,2.925,919,2.292,957,4.987,958,4.4,959,4.4,960,4.4,961,4.484,962,5.15,963,4.4]],["title/modules/HomePageRoutingModule.html",[344,1.014,961,2.252]],["body/modules/HomePageRoutingModule.html",[0,0.366,3,0.252,4,0.252,8,0.216,42,0.022,63,0.314,66,0.216,90,0.252,91,0.252,139,1.309,263,1.622,279,0.018,280,0.018,321,1.92,346,1.309,357,1.46,360,1.713,376,2.575,378,3.021,379,2.676,382,2.575,415,2.575,921,2.748,961,4.015,963,4.645,964,5.438]],["title/components/InventoryManagementPage.html",[0,0.24,92,0.961]],["body/components/InventoryManagementPage.html",[0,0.318,1,0.85,2,1.001,3,0.139,4,0.174,5,0.656,6,0.656,7,0.656,8,0.074,9,3.903,10,3.629,11,0.94,12,1.581,13,1.96,14,2.499,15,2.251,16,1.514,17,1.365,18,1.442,19,1.329,20,0.656,21,2.076,22,1.365,23,1.514,24,0.543,25,0.721,26,1.41,27,1.41,28,2.272,29,1.41,30,1.41,31,0.805,32,1.924,33,1.277,34,1.69,35,0.81,37,1.61,38,1.782,39,1.79,41,1.342,42,0.022,43,1.337,44,1.224,45,1.203,47,1.277,48,1.17,49,2.689,50,2.044,51,1.375,53,1.405,54,1.706,55,1.612,56,2.252,57,1.878,59,1.078,63,0.288,64,2.19,65,0.735,66,0.149,67,1.782,68,0.735,69,2.036,70,0.827,71,2.036,72,0.827,73,2.036,74,0.827,75,2.242,76,1.119,77,2.689,78,0.4,79,2.76,80,0.735,81,0.656,82,0.94,83,0.94,84,1.277,85,1.336,86,1.292,87,1.621,88,0.947,89,2.036,90,0.174,91,0.174,92,1.159,93,2.036,94,3.654,95,3.924,96,2.622,97,2.036,98,2.036,99,2,100,2.036,101,1.809,102,2.036,103,1.621,104,1.621,105,1.921,106,1.621,107,2.036,108,1.621,109,2.335,110,1.514,111,2.396,112,2.854,113,1.612,114,1.657,115,1.767,116,1.496,117,3.273,118,1.57,119,1.082,120,1.277,121,0.527,122,1.277,123,1.006,124,1.006,125,1.006,126,1.006,127,1.006,128,1.006,129,2.511,130,2.272,131,2.272,132,1.743,133,2.944,134,2.071,135,2.879,136,1.743,137,1.743,138,1.743,139,1.039,140,1.082,141,1.082,142,1.082,143,1.082,144,1.082,145,2.272,146,1.743,147,1.514,148,2.888,149,2.854,150,1.082,151,1.419,152,1.41,153,1.082,154,1.41,155,2.603,156,2.19,157,2.556,158,2.335,159,2.19,160,0.857,161,2.272,162,1.006,163,1.419,164,1.006,165,1.006,166,1.082,167,1.006,168,1.419,169,2.036,170,1.743,171,1.743,172,1.082,173,1.41,174,1.006,175,2.041,176,2.272,177,1.902,178,1.41,179,1.514,180,1.514,181,1.514,182,3.273,183,1.41,184,1.41,185,2.272,186,3.273,187,1.41,188,3.273,189,0.656,190,2.272,191,1.41,192,1.41,193,1.41,194,2.272,195,1.41,196,2.272,197,1.41,198,1.277,199,1.41,200,1.41,201,1.41,202,1.41,203,1.277,204,0.85,205,0.94,206,1.41,207,1.41,208,1.886,209,1.17,210,2.272,211,1.41,212,1.41,213,2.737,214,3.59,215,2.272,216,1.41,217,1.41,218,1.41,219,1.41,220,3.59,221,4.334,222,4.334,223,1.41,224,1.41,225,1.41,226,2.058,227,2.272,228,2.19,229,1.41,230,0.881,231,1.277,232,1.41,233,1.41,234,1.41,235,0.94,236,1.41,237,1.41,238,1.082,239,0.94,240,1.41,241,1.41,242,1.41,246,0.656,247,1.058,248,0.947,249,0.656,250,1.442,251,0.656,252,1.524,253,0.527,254,1.486,255,0.656,256,0.527,257,0.621,258,0.527,259,0.957,260,0.499,261,0.557,262,0.656,263,0.473,264,0.656,265,1.329,266,0.473,267,0.656,268,0.499,269,0.447,270,0.317,271,0.656,272,0.499,273,0.656,274,0.499,275,0.527,276,0.656,277,0.656,278,0.656,279,0.009,280,0.009,299,0.881,531,1.902,555,1.514,575,0.827,598,2.058,617,2.272,903,1.006,946,1.17,947,1.277,950,1.082,965,2.56,966,2.56,967,2.56,968,1.41,969,2.56,970,1.859,971,1.859,972,1.859,973,1.859,974,1.859,975,1.859,976,1.859,977,1.859,978,1.859,979,1.588,980,1.588,981,1.859,982,1.41,983,1.588,984,1.588,985,1.41,986,1.41,987,1.859,988,2.996,989,2.996,990,2.996,991,1.41,992,2.511,993,2.854,994,1.41,995,1.277,996,1.082,997,1.41,998,1.41,999,1.41,1000,1.17,1001,1.41,1002,1.41,1003,1.41,1004,1.006]],["title/modules/InventoryManagementPageModule.html",[344,1.014,1005,2.457]],["body/modules/InventoryManagementPageModule.html",[1,1.981,3,0.22,4,0.22,8,0.188,9,2.761,10,2.567,42,0.022,63,0.34,66,0.188,68,1.876,70,2.112,72,2.112,74,2.112,76,1.772,78,1.022,85,1.338,86,1.421,90,0.22,91,0.22,92,1.876,204,1.981,279,0.017,280,0.017,340,1.876,346,1.142,347,2.323,353,2.615,354,1.989,356,2.615,357,1.578,359,4.84,360,1.578,365,2.615,368,2.112,916,2.783,917,2.112,918,2.783,919,2.112,1005,5.035,1006,4.054,1007,4.054,1008,4.054,1009,4.397,1010,3.598,1011,5.02,1012,2.761,1013,4.456,1014,4.456,1015,4.456,1016,4.035,1017,3.258,1018,4.456,1019,4.035]],["title/modules/InventoryManagementPageRoutingModule.html",[344,1.014,1009,2.252]],["body/modules/InventoryManagementPageRoutingModule.html",[0,0.364,3,0.251,4,0.251,8,0.215,9,3.148,10,2.927,42,0.022,63,0.313,66,0.215,85,1.232,86,1.62,90,0.251,91,0.251,92,1.708,139,1.302,279,0.018,280,0.018,321,1.91,346,1.302,357,1.453,360,1.708,376,2.563,378,3.012,379,2.671,382,2.563,415,2.563,921,2.734,1009,4.004,1012,3.148]],["title/injectables/LoadingService.html",[38,1.694,281,1.414]],["body/injectables/LoadingService.html",[3,0.23,4,0.23,8,0.197,24,0.899,31,1.622,32,2.003,35,1.069,38,2.861,39,1.749,41,1.408,42,0.022,43,1.069,44,0.953,45,1.262,51,1.454,63,0.28,66,0.197,78,1.069,90,0.23,91,0.23,118,1.713,139,1.195,147,3.053,279,0.017,280,0.017,281,2.389,283,3.125,291,5.162,296,2.686,297,2.509,298,3.765,323,5.789,333,5.162,1020,4.242,1021,6.776,1022,6.776,1023,4.965,1024,4.965,1025,6.042,1026,4.965,1027,6.945,1028,6.776,1029,6.042,1030,4.965,1031,6.042,1032,4.965,1033,4.965,1034,4.965]],["title/components/LoginPage.html",[0,0.24,266,0.91]],["body/components/LoginPage.html",[0,0.355,1,0.767,2,1.338,3,0.125,4,0.125,5,0.955,6,0.955,7,0.955,8,0.107,12,1.338,13,0.904,14,0.955,15,0.955,17,1.78,18,1.338,19,1.684,20,0.955,21,2.186,22,1.267,24,0.49,25,0.964,31,1.076,32,1.353,34,1.762,35,0.863,37,1.638,39,1.773,41,1.136,42,0.022,43,1.136,44,1.132,45,1.019,51,1.54,53,2.102,54,2.085,55,1.969,59,1.343,63,0.273,66,0.107,81,0.955,85,0.616,88,1.267,90,0.125,91,0.125,92,0.727,105,2.348,113,2.496,114,1.579,116,0.856,118,1.353,134,0.955,135,2.854,148,1.368,160,1.343,168,2.498,175,1.594,204,0.767,239,2.025,246,0.955,247,1.415,248,1.267,249,0.955,250,1.762,251,0.955,252,1.862,253,0.767,254,1.773,255,0.955,256,0.767,257,0.904,258,0.767,259,1.213,260,0.727,261,1.429,262,0.955,263,0.688,264,0.955,265,1.684,266,1.341,267,0.955,268,0.727,269,0.651,270,1.151,271,0.955,272,0.727,273,0.955,274,0.727,275,0.767,276,0.955,277,0.955,278,0.955,279,0.011,280,0.011,282,2.154,293,2.522,294,3.039,299,1.282,303,3.944,309,3.039,310,2.053,311,4.471,321,0.955,322,2.312,328,1.205,331,3.301,332,2.312,338,2.331,340,1.584,393,3.645,454,3.544,471,2.053,497,1.134,500,1.584,501,1.134,502,1.134,503,1.134,509,1.134,545,1.464,547,1.205,553,1.704,563,2.752,564,2.331,568,1.679,569,2,570,1.134,573,3.039,574,4.19,575,1.783,577,1.859,593,2.752,651,3.622,653,2.752,708,3.423,714,3.423,730,1.464,735,4.81,839,2.312,856,2.312,874,2.752,876,2.053,877,2.053,898,4.506,903,1.464,904,3.004,905,3.277,907,3.622,909,4.19,932,1.704,940,3.619,941,1.859,948,2.053,992,3.55,996,1.575,1035,2.312,1036,4.772,1037,4.007,1038,4.007,1039,5.275,1040,5.275,1041,5.275,1042,4.007,1043,2.707,1044,5.275,1045,4.076,1046,2.707,1047,4.007,1048,5.275,1049,4.007,1050,2.707,1051,3.039,1052,4.007,1053,4.007,1054,2.707,1055,4.007,1056,4.007,1057,2.707,1058,2.707,1059,2.707,1060,2.707,1061,2.707,1062,2.707,1063,2.707,1064,2.707,1065,2.707,1066,3.619,1067,2.707,1068,2.707,1069,2.707,1070,2.707,1071,2.707,1072,2.707,1073,2.707,1074,2.707,1075,2.707,1076,2.707,1077,4.772,1078,2.707,1079,4.772,1080,2.707,1081,2.707,1082,2.707,1083,2.707,1084,2.707,1085,2.707,1086,2.707,1087,4.007,1088,3.277,1089,4.81,1090,3.423,1091,3.711,1092,2.312,1093,3.423,1094,4.076,1095,3.039,1096,2.312,1097,3.423,1098,2.312,1099,2.312,1100,2.312,1101,2.312,1102,2.312,1103,2.312,1104,2.053,1105,3.423,1106,2.312,1107,2.707,1108,4.007,1109,2.707,1110,2.707,1111,2.312]],["title/modules/LoginPageModule.html",[344,1.014,1112,2.252]],["body/modules/LoginPageModule.html",[3,0.234,4,0.234,8,0.2,42,0.022,43,1.087,59,1.552,63,0.329,66,0.2,78,1.087,90,0.283,91,0.234,266,1.803,270,0.861,279,0.017,280,0.017,331,2.731,340,1.996,346,1.215,347,2.413,353,2.716,354,2.116,356,2.716,357,1.639,360,1.639,365,2.716,368,2.247,583,2.937,585,3.178,916,2.89,917,2.247,918,2.89,919,2.247,1112,4.555,1113,4.313,1114,4.313,1115,4.313,1116,4.125,1117,3.828,1118,3.828,1119,1.885,1120,4.313]],["title/modules/LoginPageRoutingModule.html",[344,1.014,1116,2.082]],["body/modules/LoginPageRoutingModule.html",[0,0.366,3,0.252,4,0.252,8,0.216,42,0.022,63,0.314,66,0.216,90,0.252,91,0.252,139,1.309,266,1.622,279,0.018,280,0.018,321,1.92,346,1.309,357,1.46,360,1.713,376,2.575,378,3.021,379,2.676,382,2.575,415,2.575,921,2.748,1116,3.711,1118,4.124,1121,5.438]],["title/components/OrderManagementPage.html",[0,0.24,268,0.961]],["body/components/OrderManagementPage.html",[0,0.323,1,0.542,2,1.023,3,0.089,4,0.089,5,0.675,6,0.675,7,0.675,8,0.076,11,0.966,12,1.797,13,0.639,14,1.082,15,2.208,16,1.548,17,1.387,18,1.465,19,1.354,20,0.675,21,2.087,22,1.387,23,1.548,24,0.555,25,0.738,31,0.823,32,1.678,34,1.711,35,0.66,37,1.376,39,1.799,41,1.526,42,0.022,43,1.242,44,1.257,45,1.368,49,3.055,50,2.077,51,1.482,53,1.792,54,1.898,55,2.088,56,1.364,57,1.695,59,1.348,63,0.297,64,2.231,65,0.756,66,0.122,67,1.816,68,0.756,69,2.075,70,0.851,71,2.075,72,0.851,73,2.597,74,0.851,75,2.274,76,1.144,77,2.719,78,0.412,79,0.756,80,0.756,81,0.675,82,0.966,83,0.966,85,0.435,86,1.313,87,1.658,88,0.969,89,2.075,90,0.178,91,0.178,92,0.513,93,2.075,96,2.649,97,2.075,98,2.075,99,1.211,100,2.075,101,1.838,102,2.075,103,1.658,104,1.658,105,1.952,106,1.658,107,2.075,108,1.658,109,2.373,110,1.548,111,1.451,113,1.792,114,1.437,115,1.144,116,1.62,118,1.087,121,0.869,123,1.034,124,1.034,125,2.075,126,1.034,127,1.034,128,1.034,129,2.552,132,1.783,133,2.981,134,2.037,135,2.911,136,1.783,137,1.783,138,1.783,139,1.056,140,1.112,141,1.112,142,1.112,143,1.112,144,1.112,146,1.783,147,1.548,148,1.938,150,1.112,151,2.274,153,2.793,155,1.284,156,2.231,157,2.589,158,2.373,159,2.231,160,0.873,162,1.034,163,1.451,164,1.034,165,1.034,166,2.231,167,1.034,168,1.451,169,1.658,170,1.783,171,1.783,172,1.112,174,1.034,175,2.056,177,1.548,179,1.548,180,1.548,181,1.548,189,1.082,204,0.542,205,1.548,228,1.112,230,1.451,238,1.112,246,0.675,247,1.082,248,0.969,249,0.675,250,1.465,251,0.675,252,1.548,253,0.542,254,1.589,255,0.675,256,0.542,257,0.639,258,0.869,259,1.88,260,0.513,261,0.572,262,0.675,263,0.486,264,0.675,265,1.354,266,0.486,267,0.675,268,1.178,269,0.46,270,0.326,271,0.675,272,0.513,273,0.675,274,0.513,275,0.869,276,2.089,277,0.675,278,0.675,279,0.009,280,0.009,282,2.037,299,0.905,328,1.952,402,3.647,426,1.203,429,1.112,497,1.284,500,1.734,501,1.284,502,1.284,503,1.284,509,1.284,525,1.203,531,2.216,547,0.851,555,1.548,561,1.938,568,1.284,569,1.284,570,0.801,575,0.851,594,1.952,598,2.104,619,3.922,620,1.45,621,1.45,625,1.45,626,3.689,628,3.012,629,3.326,630,4.354,631,3.326,632,3.326,633,3.012,635,1.45,637,1.45,639,2.324,640,2.324,642,1.45,644,1.45,645,2.908,646,1.112,647,1.112,648,1.45,649,2.324,650,2.324,651,3.012,652,1.929,653,2.104,654,1.45,655,1.45,656,1.203,657,1.45,658,1.45,659,1.45,660,2.324,661,2.908,662,2.908,663,2.324,664,1.45,665,2.324,666,1.45,667,2.324,668,1.45,669,2.324,670,1.45,671,1.45,672,1.45,673,1.45,674,2.324,675,1.45,676,1.45,677,1.45,903,1.034,946,1.203,947,1.313,950,1.112,965,2.618,966,2.618,967,2.618,968,1.45,969,1.633,979,1.633,980,1.633,982,1.45,984,1.633,985,1.45,986,1.45,991,1.45,992,2.552,993,2.908,994,1.45,995,1.313,996,1.112,997,1.45,998,1.45,999,1.45,1000,1.203,1001,1.45,1002,1.45,1003,1.45,1004,1.034,1122,2.618,1123,3.064,1124,3.064,1125,1.912,1126,1.912,1127,1.912,1128,1.912,1129,1.912,1130,1.912,1131,1.912,1132,1.912,1133,1.912,1134,1.912,1135,1.912,1136,1.783,1137,3.064,1138,3.064,1139,3.064]],["title/modules/OrderManagementPageModule.html",[344,1.014,1140,2.457]],["body/modules/OrderManagementPageModule.html",[3,0.214,4,0.214,8,0.183,42,0.022,63,0.342,66,0.183,68,1.824,70,2.053,72,2.053,74,2.053,76,1.722,78,0.993,86,1.381,90,0.214,91,0.214,258,1.967,259,1.468,268,1.863,275,1.967,279,0.017,280,0.017,340,1.824,346,1.11,347,2.282,353,2.569,354,1.933,356,2.569,357,1.55,359,4.779,360,1.55,365,2.569,368,2.053,402,2.496,619,2.684,916,2.734,917,2.053,918,2.734,919,2.053,1010,3.498,1011,4.932,1012,2.684,1013,4.378,1014,4.378,1015,4.378,1016,3.965,1017,3.168,1018,4.378,1019,3.965,1140,5.016,1141,3.941,1142,3.941,1143,3.941,1144,4.367,1145,5.773,1146,4.613,1147,5.773,1148,4.613,1149,5.773,1150,4.613]],["title/modules/OrderManagementPageRoutingModule.html",[344,1.014,1144,2.252]],["body/modules/OrderManagementPageRoutingModule.html",[0,0.364,3,0.251,4,0.251,8,0.215,42,0.022,63,0.313,66,0.215,86,1.62,90,0.251,91,0.251,139,1.302,259,1.376,268,1.708,279,0.018,280,0.018,321,1.91,346,1.302,357,1.453,360,1.708,376,2.563,378,3.012,379,2.671,382,2.563,402,2.927,415,2.563,619,3.148,921,2.734,1012,3.148,1144,4.004]],["title/interfaces/Pantry.html",[270,0.61,1119,1.336]],["body/interfaces/Pantry.html",[3,0.233,4,0.233,8,0.199,24,0.908,25,1.463,42,0.022,43,1.464,44,1.306,59,1.681,63,0.328,66,0.199,78,1.08,90,0.282,91,0.233,266,1.546,270,1.037,279,0.017,280,0.017,331,2.715,356,2.233,357,1.347,360,1.633,365,2.706,368,2.233,583,3.957,585,4.281,916,2.88,917,2.233,918,2.88,919,2.233,1112,3.159,1116,3.538,1117,3.805,1118,3.805,1119,1.874,1120,5.81,1151,2.919]],["title/components/PantryStatisticsPage.html",[0,0.24,269,0.861]],["body/components/PantryStatisticsPage.html",[0,0.281,1,0.62,2,1.138,3,0.101,4,0.101,5,0.771,6,0.771,7,0.771,8,0.087,12,0.73,13,0.73,14,2,15,0.771,17,1.077,18,1.138,19,1.477,20,0.771,21,2.106,22,1.077,24,0.396,25,0.82,31,0.915,32,1.187,34,1.578,35,0.733,37,1.522,39,1.866,41,0.62,42,0.022,43,0.901,44,1.223,45,0.556,51,1.411,53,2.116,54,2.317,55,2.188,57,2,59,1.402,63,0.251,65,0.864,66,0.087,79,1.655,80,0.864,81,0.771,85,1.076,88,1.077,90,0.101,91,0.101,92,0.587,101,1.427,105,2.103,113,2.342,114,1.253,115,1.764,116,2.106,118,1.187,119,1.272,121,1.187,160,0.953,168,2.238,175,1.398,189,2,204,0.62,235,1.721,246,0.771,247,1.202,248,1.077,249,0.771,250,1.711,251,0.771,252,1.668,253,0.62,254,1.653,255,0.771,256,0.62,257,0.73,258,0.62,259,1.064,260,0.587,261,0.654,262,0.771,263,0.556,264,0.771,265,1.477,266,0.556,267,0.771,268,0.587,269,1.137,270,1.069,271,0.771,272,0.587,273,0.771,274,0.587,275,0.62,276,0.771,277,0.771,278,0.771,279,0.01,280,0.01,282,2,293,1.376,299,1.035,331,1.182,335,2.557,407,3.776,497,0.916,500,1.347,501,0.916,502,0.916,503,0.916,509,0.916,547,0.973,553,1.376,555,2.115,568,0.916,569,0.916,570,0.916,574,3.518,575,1.863,577,1.501,593,2.339,594,2.522,730,1.843,903,1.182,904,2.144,905,2.339,907,3.245,909,3.891,928,3.726,932,1.376,940,3.174,941,1.501,948,1.657,950,1.272,992,3.297,996,1.272,1004,2.264,1045,1.867,1066,2.583,1088,3.726,1089,4.376,1090,2.91,1091,3.224,1092,1.867,1093,2.91,1094,3.575,1095,2.583,1096,1.867,1097,2.91,1098,1.867,1099,1.867,1100,1.867,1101,1.867,1102,1.867,1103,1.867,1104,1.657,1105,2.91,1106,1.867,1119,1.272,1136,2.98,1152,4.06,1153,1.501,1154,3.689,1155,2.583,1156,2.583,1157,3.174,1158,2.583,1159,3.174,1160,3.174,1161,3.174,1162,3.174,1163,3.174,1164,3.174,1165,3.406,1166,3.174,1167,3.174,1168,3.174,1169,3.174,1170,3.174,1171,3.174,1172,3.584,1173,3.584,1174,3.584,1175,3.584,1176,3.584,1177,3.584,1178,3.584,1179,2.185,1180,2.749,1181,3.406,1182,2.583,1183,2.185,1184,3.584,1185,3.584,1186,2.185,1187,2.185,1188,4.115,1189,2.185,1190,2.185,1191,2.583,1192,2.185,1193,2.185,1194,4.01,1195,3.174,1196,2.583,1197,2.185,1198,2.583,1199,3.584,1200,2.339,1201,2.185,1202,2.185,1203,2.185,1204,2.115,1205,2.185,1206,2.185,1207,2.185,1208,2.185,1209,2.185,1210,3.174,1211,2.583,1212,2.185,1213,2.115,1214,2.185,1215,2.185,1216,2.185,1217,2.185,1218,1.657,1219,1.657,1220,1.657,1221,1.657,1222,1.657,1223,1.657,1224,1.657,1225,1.657,1226,1.657,1227,1.657,1228,1.657,1229,1.657,1230,1.657,1231,2.583,1232,3.174,1233,3.174,1234,3.174,1235,3.174,1236,3.174,1237,2.583,1238,3.174,1239,3.174,1240,3.174,1241,2.583,1242,1.657,1243,1.657,1244,1.657,1245,1.657,1246,1.657,1247,1.657,1248,3.174,1249,1.657,1250,1.657,1251,1.657,1252,1.657,1253,1.657,1254,1.657,1255,2.144,1256,1.657,1257,1.657,1258,1.657,1259,1.657,1260,1.657,1261,1.657,1262,1.657,1263,1.657,1264,1.657,1265,1.657,1266,1.657,1267,1.657,1268,1.657,1269,1.657,1270,2.634,1271,1.657,1272,2.583,1273,2.583,1274,1.867,1275,2.185,1276,1.867,1277,1.867,1278,1.867,1279,3.406,1280,2.185]],["title/modules/PantryStatisticsPageModule.html",[344,1.014,1281,2.457]],["body/modules/PantryStatisticsPageModule.html",[3,0.235,4,0.235,8,0.201,42,0.022,63,0.333,66,0.201,78,1.09,90,0.235,91,0.235,269,1.708,270,1.042,279,0.018,280,0.018,335,2.74,340,2.002,346,1.219,347,2.417,353,2.721,354,2.122,356,2.721,357,1.642,360,1.642,365,2.721,368,2.254,407,2.74,916,2.896,917,2.254,918,2.896,919,2.254,1152,2.946,1154,3.187,1281,4.972,1282,4.326,1283,4.326,1284,4.326,1285,4.466,1286,5.064,1287,4.326,1288,6.114,1289,4.326]],["title/modules/PantryStatisticsPageRoutingModule.html",[344,1.014,1285,2.252]],["body/modules/PantryStatisticsPageRoutingModule.html",[0,0.364,3,0.251,4,0.251,8,0.215,42,0.022,63,0.313,66,0.215,90,0.251,91,0.251,139,1.302,269,1.531,270,0.923,279,0.018,280,0.018,321,1.91,335,2.927,346,1.302,357,1.453,360,1.708,376,2.563,378,3.012,379,2.671,382,2.563,407,2.927,415,2.563,921,2.734,1152,3.148,1285,4.004,1287,4.623]],["title/components/ProfilePage.html",[0,0.24,272,0.961]],["body/components/ProfilePage.html",[0,0.34,1,0.706,2,1.257,3,0.115,4,0.115,5,0.879,6,0.879,7,0.879,8,0.099,12,1.815,13,0.831,15,2.251,17,1.6,18,1.516,19,1.786,20,0.879,21,2.171,22,1.435,23,1.258,24,0.451,25,0.906,31,1.011,32,1.434,34,1.815,35,0.81,37,1.535,39,1.68,41,1.067,42,0.022,43,1.373,44,1.14,45,0.957,48,2.857,51,1.092,53,1.695,54,0.984,55,0.929,56,1.108,57,0.879,59,1.301,63,0.283,65,1.488,66,0.099,67,2.396,68,0.984,75,2.573,76,0.929,78,0.536,81,0.879,82,1.258,83,1.258,85,0.567,86,1.127,88,1.19,90,0.174,91,0.174,92,0.668,96,2.149,99,1.488,105,1.108,110,1.258,111,1.783,113,2.419,114,1.909,115,1.695,116,2.016,118,1.067,121,1.067,134,0.879,139,0.599,151,1.179,157,1.902,160,0.567,163,1.179,175,2.193,177,1.258,179,1.258,180,1.258,181,1.258,189,1.329,204,0.706,205,1.258,208,2.369,209,1.567,230,1.179,246,0.879,247,1.329,248,1.19,249,0.879,250,1.909,251,0.879,252,1.786,253,0.706,254,1.763,255,0.879,256,1.067,257,1.982,258,0.706,259,1.381,260,0.668,261,0.745,262,0.879,263,0.633,264,0.879,265,1.602,266,0.633,267,0.879,268,0.668,269,0.599,270,1.217,271,0.879,272,1.359,273,0.879,274,0.668,275,0.706,276,0.879,277,0.879,278,0.879,279,0.011,280,0.011,282,2.208,293,4.013,299,1.179,336,2.369,497,1.577,500,2,501,1.577,502,1.577,503,1.577,509,1.577,514,1.888,515,4.334,516,3.877,517,2.126,518,4.322,519,1.888,520,4.642,525,1.567,526,2.126,528,4.642,529,3.215,531,1.902,534,3.215,536,3.215,538,3.215,540,3.877,542,3.877,544,3.877,545,1.347,546,2.126,547,1.108,548,3.215,549,3.215,550,3.877,551,3.215,552,3.877,553,2.857,554,3.215,555,1.902,556,2.585,557,3.215,558,3.877,559,3.877,560,3.215,561,1.902,562,2.585,563,2.585,564,1.448,565,2.126,566,2.126,567,3.215,568,1.577,569,1.577,570,1.043,571,3.215,572,2.126,573,3.837,574,4.744,575,2.784,576,2.126,577,3.117,578,2.126,579,3.215,580,2.126,581,3.215,582,3.215,583,1.448,584,3.215,585,1.567,586,3.215,587,1.888,588,3.215,589,1.888,590,3.215,591,2.126,592,3.215,593,2.585,871,3.215,872,3.215,874,2.585,875,3.215,876,2.854,877,2.854,904,2.369,941,3.117,946,1.567,950,1.448,992,2.19,996,1.448,1004,2.036,1066,2.854,1091,2.857,1095,1.888,1104,3.442,1111,3.215,1274,2.126,1276,5.07,1277,3.877,1278,4.642,1290,3.764,1291,2.489,1292,3.764,1293,2.489,1294,2.489,1295,2.489,1296,2.489,1297,2.489,1298,2.489,1299,2.489,1300,3.764,1301,3.215,1302,3.215,1303,2.489,1304,2.489,1305,2.489,1306,2.489,1307,3.764,1308,3.764,1309,3.764,1310,2.489,1311,2.489,1312,2.489,1313,4.538,1314,2.489,1315,2.489,1316,5.059,1317,2.489,1318,2.489]],["title/modules/ProfilePageModule.html",[344,1.014,1319,2.457]],["body/modules/ProfilePageModule.html",[3,0.229,4,0.229,8,0.196,42,0.022,63,0.337,66,0.196,76,1.846,78,1.064,90,0.229,91,0.229,256,2,272,1.894,279,0.017,280,0.017,336,3.111,340,1.954,346,1.19,347,2.382,353,2.682,354,2.072,356,2.682,357,1.618,360,1.618,365,2.682,368,2.2,575,2.2,916,2.854,917,2.2,918,2.854,919,2.2,1016,4.138,1017,3.394,1019,4.138,1319,5.016,1320,4.223,1321,4.223,1322,4.223,1323,4.441,1324,4.943,1325,4.223,1326,6.025,1327,4.223,1328,4.223]],["title/modules/ProfilePageRoutingModule.html",[344,1.014,1323,2.252]],["body/modules/ProfilePageRoutingModule.html",[0,0.366,3,0.252,4,0.252,8,0.216,42,0.022,63,0.314,66,0.216,90,0.252,91,0.252,139,1.309,272,1.713,279,0.018,280,0.018,321,1.92,346,1.309,357,1.46,360,1.713,376,2.575,378,3.021,379,2.676,382,2.575,415,2.575,921,2.748,1323,4.015,1325,4.645,1329,5.438]],["title/interfaces/TimestampedItems.html",[1119,1.336,1204,1.808]],["body/interfaces/TimestampedItems.html",[0,0.318,3,0.158,4,0.158,8,0.135,14,1.67,17,1.079,18,1.139,19,1.67,21,1.079,22,1.079,24,0.618,25,1.139,32,0.967,34,1.139,35,0.735,37,1.458,42,0.022,44,0.908,57,2.308,59,1.488,63,0.295,65,1.349,66,0.135,79,1.87,80,1.349,81,1.204,85,0.777,88,1.079,90,0.158,91,0.158,101,1.983,113,2.028,114,1.626,115,1.766,116,2.166,118,1.54,119,1.985,121,1.54,160,0.777,189,2.175,254,0.916,269,0.821,270,1.05,279,0.014,280,0.014,282,1.917,335,2.559,407,1.846,497,1.43,500,1.87,501,1.43,502,1.43,503,1.43,509,1.43,547,1.518,555,2.744,568,1.43,569,1.43,570,1.43,594,2.742,730,3.173,928,3.729,932,2.147,1004,2.938,1088,3.249,1119,1.766,1136,1.985,1151,1.985,1152,1.985,1153,2.343,1154,3.692,1155,2.587,1156,2.587,1157,2.587,1158,2.587,1159,2.587,1160,2.587,1161,2.587,1162,2.587,1163,2.587,1164,2.587,1166,2.587,1167,2.587,1168,2.587,1169,2.587,1170,2.587,1171,2.587,1172,2.587,1173,2.587,1174,2.587,1175,2.587,1176,2.587,1177,2.587,1178,2.587,1180,2.753,1182,2.587,1184,3.588,1185,3.588,1188,4.119,1191,2.587,1194,4.259,1195,2.587,1196,2.587,1198,2.587,1199,2.587,1200,2.343,1204,2.744,1210,3.588,1211,2.587,1213,2.391,1218,2.587,1219,2.587,1220,2.587,1221,2.587,1222,2.587,1223,2.587,1224,2.587,1225,2.587,1226,2.587,1227,2.587,1228,2.587,1229,2.587,1230,2.587,1231,3.588,1232,4.119,1233,4.119,1234,4.119,1235,4.119,1236,4.119,1237,3.588,1238,4.119,1239,4.119,1240,4.119,1241,3.588,1242,2.587,1243,2.587,1244,2.587,1245,2.587,1246,2.587,1247,2.587,1248,4.119,1249,2.587,1250,2.587,1251,2.587,1252,2.587,1253,2.587,1254,2.587,1255,2.978,1256,2.587,1257,2.587,1258,2.587,1259,2.587,1260,2.587,1261,2.587,1262,2.587,1263,2.587,1264,2.587,1265,2.587,1266,2.587,1267,2.587,1268,2.587,1269,2.587,1270,2.147,1271,2.587]],["title/interfaces/TimestampedItems-1.html",[155,1.251,1119,1.115,1204,1.508]],["body/interfaces/TimestampedItems-1.html",[3,0.088,4,0.088,8,0.075,14,2.082,24,0.342,25,0.731,35,0.407,37,0.508,42,0.022,43,1.028,44,0.979,45,0.481,51,1.653,57,2.484,59,1.268,63,0.236,66,0.075,79,2.202,80,0.748,85,0.431,90,0.088,91,0.088,99,2.675,116,0.598,121,1.236,134,2.402,155,2.472,213,1.023,235,0.956,239,2.203,248,0.96,259,1.754,270,0.814,279,0.009,280,0.009,281,1.201,296,1.023,297,0.956,328,2.955,390,1.434,467,1.1,545,1.023,556,3.278,562,1.299,564,1.1,594,2.932,626,2.536,646,1.1,647,1.1,656,2.744,712,2.887,724,1.434,725,3.866,730,3.421,1000,1.19,1051,1.434,1091,1.19,1119,1.134,1136,3.507,1151,1.1,1180,1.1,1194,4.179,1204,2.203,1213,1.535,1255,1.19,1270,3.209,1272,3.866,1273,3.866,1330,1.434,1331,1.616,1332,1.616,1333,2.595,1334,3.252,1335,3.252,1336,1.616,1337,2.595,1338,2.595,1339,3.252,1340,3.724,1341,1.616,1342,3.252,1343,1.616,1344,1.616,1345,5.812,1346,3.252,1347,3.252,1348,1.616,1349,5.868,1350,1.616,1351,1.616,1352,2.595,1353,2.595,1354,1.616,1355,1.616,1356,1.616,1357,2.595,1358,1.616,1359,1.616,1360,3.252,1361,1.616,1362,1.616,1363,1.616,1364,1.616,1365,2.595,1366,1.616,1367,1.616,1368,1.616,1369,1.616,1370,3.252,1371,5.468,1372,1.616,1373,1.616,1374,3.252,1375,1.616,1376,1.616,1377,3.724,1378,1.616,1379,1.616,1380,3.724,1381,1.616,1382,4.91,1383,1.616,1384,4.355,1385,1.616,1386,1.616,1387,2.595,1388,3.724,1389,4.759,1390,2.595,1391,2.595,1392,2.595,1393,2.595,1394,1.616,1395,1.616,1396,1.616,1397,1.616,1398,3.724,1399,1.616,1400,2.595,1401,2.595,1402,3.252,1403,1.616,1404,3.252,1405,3.252,1406,4.759,1407,3.252,1408,1.616,1409,1.616,1410,4.355,1411,3.724,1412,2.595,1413,3.252,1414,4.577,1415,1.616,1416,1.616,1417,1.616,1418,1.616,1419,3.252,1420,4.577,1421,1.616,1422,1.616,1423,1.616,1424,1.616,1425,1.616,1426,2.595,1427,1.616,1428,2.595,1429,2.304,1430,5.039,1431,1.616,1432,1.616,1433,3.252,1434,3.724,1435,3.724,1436,3.724,1437,3.724,1438,1.616,1439,3.724,1440,3.724,1441,4.355,1442,3.724,1443,2.595,1444,3.724,1445,2.595,1446,2.595,1447,2.595,1448,3.252,1449,1.616,1450,1.616,1451,1.616,1452,2.595,1453,1.616,1454,3.724,1455,1.616,1456,3.724,1457,3.724,1458,2.595,1459,3.724,1460,2.595,1461,2.595,1462,4.355,1463,2.595,1464,2.595,1465,2.595,1466,2.595,1467,2.595,1468,1.616,1469,3.724,1470,2.595,1471,3.724,1472,4.759,1473,2.595,1474,2.595,1475,2.595,1476,1.616,1477,2.595,1478,2.595,1479,2.595,1480,2.595,1481,2.595,1482,1.616,1483,1.616,1484,1.616,1485,3.252,1486,3.724,1487,1.616,1488,1.616,1489,1.616,1490,1.616,1491,1.616,1492,2.595,1493,1.616,1494,1.616,1495,1.616,1496,1.616,1497,3.252,1498,1.616,1499,1.616,1500,1.616,1501,1.616,1502,1.616,1503,1.616,1504,1.616,1505,1.616,1506,1.616]],["title/interfaces/TimestampedOrders.html",[1119,1.336,1213,1.808]],["body/interfaces/TimestampedOrders.html",[0,0.318,3,0.158,4,0.158,8,0.135,14,1.67,17,1.079,18,1.139,19,1.67,21,1.079,22,1.079,24,0.618,25,1.139,32,0.967,34,1.139,35,0.735,37,1.458,42,0.022,44,0.908,57,2.308,59,1.488,63,0.295,65,1.349,66,0.135,79,1.87,80,1.349,81,1.204,85,0.777,88,1.079,90,0.158,91,0.158,101,1.983,113,2.028,114,1.626,115,1.766,116,2.166,118,1.54,119,1.985,121,1.54,160,0.777,189,2.175,254,0.916,269,0.821,270,1.05,279,0.014,280,0.014,282,1.917,335,2.559,407,1.846,497,1.43,500,1.87,501,1.43,502,1.43,503,1.43,509,1.43,547,1.518,555,2.744,568,1.43,569,1.43,570,1.43,594,2.966,730,1.846,928,3.729,932,2.147,1004,2.938,1088,3.249,1119,1.766,1136,1.985,1151,1.985,1152,1.985,1153,2.343,1154,3.692,1155,2.587,1156,2.587,1157,2.587,1158,2.587,1159,2.587,1160,2.587,1161,2.587,1162,2.587,1163,2.587,1164,2.587,1166,2.587,1167,2.587,1168,2.587,1169,2.587,1170,2.587,1171,2.587,1172,2.587,1173,2.587,1174,2.587,1175,2.587,1176,2.587,1177,2.587,1178,2.587,1180,2.753,1182,2.587,1184,3.588,1185,3.588,1188,4.119,1191,2.587,1194,4.259,1195,2.587,1196,2.587,1198,2.587,1199,2.587,1200,2.343,1204,2.391,1210,3.588,1211,2.587,1213,2.744,1218,2.587,1219,2.587,1220,2.587,1221,2.587,1222,2.587,1223,2.587,1224,2.587,1225,2.587,1226,2.587,1227,2.587,1228,2.587,1229,2.587,1230,2.587,1231,3.588,1232,4.119,1233,4.119,1234,4.119,1235,4.119,1236,4.119,1237,3.588,1238,4.119,1239,4.119,1240,4.119,1241,3.588,1242,2.587,1243,2.587,1244,2.587,1245,2.587,1246,2.587,1247,2.587,1248,4.119,1249,2.587,1250,2.587,1251,2.587,1252,2.587,1253,2.587,1254,2.587,1255,2.978,1256,2.587,1257,2.587,1258,2.587,1259,2.587,1260,2.587,1261,2.587,1262,2.587,1263,2.587,1264,2.587,1265,2.587,1266,2.587,1267,2.587,1268,2.587,1269,2.587,1270,2.147,1271,2.587]],["title/interfaces/TimestampedOrders-1.html",[155,1.251,1119,1.115,1213,1.508]],["body/interfaces/TimestampedOrders-1.html",[3,0.088,4,0.088,8,0.075,14,2.082,24,0.342,25,0.731,35,0.407,37,0.508,42,0.022,43,1.028,44,0.979,45,0.481,51,1.653,57,2.484,59,1.268,63,0.236,66,0.075,79,2.202,80,0.748,85,0.431,90,0.088,91,0.088,99,2.675,116,0.598,121,1.236,134,2.402,155,2.472,213,1.023,235,0.956,239,2.203,248,0.96,259,1.754,270,0.814,279,0.009,280,0.009,281,1.201,296,1.023,297,0.956,328,2.955,390,1.434,467,1.1,545,1.023,556,3.278,562,1.299,564,1.1,594,2.994,626,2.536,646,1.1,647,1.1,656,2.744,712,2.887,724,1.434,725,3.866,730,3.261,1000,1.19,1051,1.434,1091,1.19,1119,1.134,1136,3.507,1151,1.1,1180,1.1,1194,4.179,1204,1.924,1213,1.924,1255,1.19,1270,3.209,1272,3.866,1273,3.866,1330,1.434,1331,1.616,1332,1.616,1333,2.595,1334,3.252,1335,3.252,1336,1.616,1337,2.595,1338,2.595,1339,3.252,1340,3.724,1341,1.616,1342,3.252,1343,1.616,1344,1.616,1345,5.812,1346,3.252,1347,3.252,1348,1.616,1349,5.868,1350,1.616,1351,1.616,1352,2.595,1353,2.595,1354,1.616,1355,1.616,1356,1.616,1357,2.595,1358,1.616,1359,1.616,1360,3.252,1361,1.616,1362,1.616,1363,1.616,1364,1.616,1365,2.595,1366,1.616,1367,1.616,1368,1.616,1369,1.616,1370,3.252,1371,5.468,1372,1.616,1373,1.616,1374,3.252,1375,1.616,1376,1.616,1377,3.724,1378,1.616,1379,1.616,1380,3.724,1381,1.616,1382,4.91,1383,1.616,1384,4.355,1385,1.616,1386,1.616,1387,2.595,1388,3.724,1389,4.759,1390,2.595,1391,2.595,1392,2.595,1393,2.595,1394,1.616,1395,1.616,1396,1.616,1397,1.616,1398,3.724,1399,1.616,1400,2.595,1401,2.595,1402,3.252,1403,1.616,1404,3.252,1405,3.252,1406,4.759,1407,3.252,1408,1.616,1409,1.616,1410,4.355,1411,3.724,1412,2.595,1413,3.252,1414,4.577,1415,1.616,1416,1.616,1417,1.616,1418,1.616,1419,3.252,1420,4.577,1421,1.616,1422,1.616,1423,1.616,1424,1.616,1425,1.616,1426,2.595,1427,1.616,1428,2.595,1429,2.304,1430,5.039,1431,1.616,1432,1.616,1433,3.252,1434,3.724,1435,3.724,1436,3.724,1437,3.724,1438,1.616,1439,3.724,1440,3.724,1441,4.355,1442,3.724,1443,2.595,1444,3.724,1445,2.595,1446,2.595,1447,2.595,1448,3.252,1449,1.616,1450,1.616,1451,1.616,1452,2.595,1453,1.616,1454,3.724,1455,1.616,1456,3.724,1457,3.724,1458,2.595,1459,3.724,1460,2.595,1461,2.595,1462,4.355,1463,2.595,1464,2.595,1465,2.595,1466,2.595,1467,2.595,1468,1.616,1469,3.724,1470,2.595,1471,3.724,1472,4.759,1473,2.595,1474,2.595,1475,2.595,1476,1.616,1477,2.595,1478,2.595,1479,2.595,1480,2.595,1481,2.595,1482,1.616,1483,1.616,1484,1.616,1485,3.252,1486,3.724,1487,1.616,1488,1.616,1489,1.616,1490,1.616,1491,1.616,1492,2.595,1493,1.616,1494,1.616,1495,1.616,1496,1.616,1497,3.252,1498,1.616,1499,1.616,1500,1.616,1501,1.616,1502,1.616,1503,1.616,1504,1.616,1505,1.616,1506,1.616]],["title/components/UserManagementPage.html",[0,0.24,274,0.961]],["body/components/UserManagementPage.html",[0,0.315,1,0.745,2,1.31,3,0.122,4,0.122,5,0.928,6,0.928,7,0.928,8,0.104,11,1.329,12,1.567,13,0.878,15,1.964,17,1.24,18,1.31,19,1.656,20,0.928,21,2.176,22,1.24,24,0.476,25,0.944,31,1.053,32,1.8,34,1.737,35,0.844,37,1.623,39,1.82,41,1.33,42,0.022,43,1.198,44,1.29,45,1.193,49,3.139,51,1.129,54,2.199,55,2.077,57,1.964,59,1.068,63,0.3,65,1.039,66,0.104,67,2.221,68,1.039,69,2.538,70,1.17,71,2.538,72,1.17,73,2.538,74,1.17,75,2.635,76,0.982,77,3.054,78,0.566,81,0.928,85,0.599,86,1.747,87,2.122,88,1.24,89,2.538,90,0.122,91,0.122,92,0.706,93,2.538,96,2.942,97,2.538,98,2.538,99,1.55,100,2.538,101,2.179,102,2.538,103,2.122,104,2.122,105,2.314,106,2.122,107,2.538,108,2.122,109,2.813,110,1.982,113,1.751,114,1.404,115,1.942,116,1.759,118,1.577,120,1.805,121,0.745,122,1.805,123,1.422,124,1.422,125,1.422,126,1.422,127,1.422,128,1.422,134,1.384,160,1.665,163,1.245,175,1.567,189,1.384,204,0.745,246,0.928,247,1.384,248,1.24,249,0.928,250,1.737,251,0.928,252,1.836,253,0.745,254,1.736,255,0.928,256,0.745,257,0.878,258,0.745,259,1.193,260,0.706,261,0.787,262,0.928,263,0.669,264,0.928,265,1.656,266,0.669,267,0.928,268,0.706,269,0.633,270,0.448,271,0.928,272,0.706,273,0.928,274,1.396,275,0.745,276,0.928,277,0.928,278,0.928,279,0.011,280,0.011,282,2.134,299,1.245,338,3.615,411,4.301,454,3.273,497,1.102,500,1.55,501,1.102,502,1.102,503,1.102,506,2.974,509,1.102,511,3.944,531,2.37,547,1.17,555,1.982,561,2.628,568,1.102,569,1.102,570,1.102,575,1.17,683,4.752,709,4.443,741,3.35,750,3.35,785,2.246,796,2.246,903,1.422,946,1.655,947,1.805,950,1.53,968,1.994,982,1.994,983,3.35,985,1.994,986,1.994,991,1.994,992,3.026,993,3.557,994,1.994,995,1.805,996,1.53,997,1.994,998,1.994,999,1.994,1000,1.655,1001,1.994,1002,1.994,1003,1.994,1004,1.422,1429,1.994,1507,4.692,1508,3.922,1509,3.922,1510,2.629,1511,5.2,1512,5.2,1513,5.2,1514,2.629,1515,3.922,1516,3.922,1517,3.922,1518,2.629,1519,5.2,1520,2.629,1521,2.629,1522,2.629,1523,2.629,1524,2.629,1525,2.629,1526,2.629,1527,2.629,1528,2.629,1529,2.629,1530,2.629,1531,3.922,1532,3.922,1533,2.629,1534,2.629,1535,3.922,1536,3.922,1537,3.922,1538,3.922,1539,5.2,1540,3.922]],["title/modules/UserManagementPageModule.html",[344,1.014,1541,2.457]],["body/modules/UserManagementPageModule.html",[3,0.225,4,0.225,8,0.193,42,0.022,63,0.341,66,0.193,68,1.917,70,2.158,72,2.158,74,2.158,76,1.811,78,1.044,86,1.452,90,0.225,91,0.225,160,1.356,274,1.886,279,0.017,280,0.017,340,1.917,346,1.167,347,2.354,353,2.65,354,2.032,356,2.65,357,1.599,360,1.599,365,2.65,368,2.158,411,3.052,916,2.82,917,2.158,918,2.82,919,2.158,1010,3.677,1012,2.821,1013,4.516,1014,4.516,1015,4.516,1016,4.089,1017,3.33,1018,4.516,1019,4.089,1507,3.33,1541,4.933,1542,4.143,1543,4.143,1544,4.143,1545,4.421]],["title/modules/UserManagementPageRoutingModule.html",[344,1.014,1545,2.252]],["body/modules/UserManagementPageRoutingModule.html",[0,0.364,3,0.251,4,0.251,8,0.215,42,0.022,63,0.313,66,0.215,86,1.62,90,0.251,91,0.251,139,1.302,160,1.232,274,1.708,279,0.018,280,0.018,321,1.91,346,1.302,357,1.453,360,1.708,376,2.563,378,3.012,379,2.671,382,2.563,411,3.406,415,2.563,921,2.734,1012,3.148,1507,3.716,1545,4.004]],["title/components/ViewOrderDialog.html",[0,0.24,275,1.014]],["body/components/ViewOrderDialog.html",[0,0.357,1,0.669,2,1.207,3,0.109,4,0.109,5,0.833,6,0.833,7,0.833,8,0.094,11,1.192,12,1.207,13,0.788,14,1.276,15,2.22,16,2.219,17,1.556,18,1.644,19,1.738,20,0.833,21,2.166,22,1.556,23,2.219,24,0.654,25,0.87,31,0.97,32,1.396,34,1.87,35,0.778,37,1.322,39,1.322,41,1.025,42,0.022,43,1.06,44,0.843,45,0.919,49,2.487,50,2.08,51,1.277,53,0.881,55,1.349,56,1.608,57,1.976,59,1.403,63,0.311,64,2.103,65,0.933,66,0.144,67,1.712,68,0.933,69,1.955,70,1.05,71,1.955,72,1.05,73,2.376,74,1.05,75,1.712,76,1.349,77,2.219,78,0.508,79,0.933,80,0.933,81,0.833,82,1.192,83,1.192,85,0.537,86,1.082,87,1.277,88,0.746,89,1.277,90,0.204,91,0.204,92,0.634,93,1.277,96,1.712,97,1.277,98,1.277,99,0.933,100,1.277,101,1.515,102,1.277,103,1.277,104,1.277,105,1.05,106,1.277,107,1.277,108,1.277,109,1.277,110,1.192,111,1.118,113,1.981,114,1.589,115,0.881,116,1.948,118,1.245,121,0.669,123,1.277,124,1.277,125,2.376,126,1.277,127,1.277,128,1.277,129,1.373,132,1.373,133,2.103,134,2.175,135,2.376,136,1.373,137,1.373,138,1.373,139,1.185,140,1.373,141,1.373,142,1.373,143,1.373,144,1.373,146,2.103,147,1.192,148,1.826,150,1.373,151,1.712,153,2.555,155,1.515,156,2.555,157,2.219,158,2.376,159,2.103,160,0.823,162,1.277,163,1.118,164,1.277,165,1.277,166,2.103,167,1.277,168,1.712,169,1.955,170,2.103,171,2.103,172,1.373,174,1.277,175,2.007,177,1.826,179,1.826,180,1.826,181,1.826,189,0.833,204,0.669,205,1.826,213,1.955,228,1.373,230,1.712,235,1.826,238,1.373,246,0.833,247,1.276,248,1.143,249,0.833,250,1.644,251,0.833,252,1.738,253,0.669,254,1.654,255,0.833,256,0.669,257,0.788,258,1.025,259,1.885,260,0.634,261,0.706,262,0.833,263,0.6,264,0.833,265,1.55,266,0.6,267,0.833,268,0.97,269,0.568,270,0.402,271,0.833,272,0.634,273,0.833,274,0.634,275,1.396,276,2.175,277,0.833,278,0.833,279,0.01,280,0.01,282,1.873,328,2.191,402,2.871,426,1.485,429,1.373,497,1.515,500,1.946,501,1.515,502,1.515,503,1.515,509,1.515,521,1.62,525,1.485,531,1.192,532,1.62,547,1.05,561,1.192,568,1.515,569,1.515,570,0.989,594,1.955,618,3.087,619,3.087,620,1.789,621,1.789,625,1.789,626,3.862,628,3.38,629,3.733,630,4.51,631,3.733,632,3.733,633,3.38,635,1.789,637,1.789,639,2.741,640,2.741,642,1.789,644,1.789,645,2.741,646,1.373,647,1.373,648,1.789,649,3.331,650,1.789,651,1.62,652,1.485,653,1.62,654,1.789,655,1.789,656,1.485,657,1.789,658,1.789,659,1.789,660,1.789,661,3.331,662,3.331,663,1.789,664,1.789,665,1.789,666,1.789,667,1.789,668,1.789,669,1.789,670,1.789,671,1.789,672,1.789,673,1.789,674,2.741,675,1.789,676,1.789,677,1.789,678,4.205,679,3.087,680,3.087,681,3.087,1122,3.087,1546,2.36,1547,2.36,1548,2.36,1549,2.36,1550,3.614]],["title/coverage.html",[1551,4.176]],["body/coverage.html",[0,0.487,1,1.149,8,0.161,9,3.45,10,3.208,11,3.453,37,1.089,38,1.92,42,0.022,44,0.778,49,2.049,50,2.517,92,1.089,99,2.924,121,1.149,204,1.149,253,1.149,254,1.089,256,1.149,258,1.149,260,1.089,263,1.031,266,1.031,268,1.089,269,0.976,270,0.691,272,1.089,274,1.089,275,1.149,279,0.015,280,0.015,281,2.583,282,1.431,284,3.463,300,3.463,303,2.552,380,2.784,395,2.552,402,3.208,407,3.208,411,2.552,416,3.074,418,3.463,439,4.497,464,2.784,467,3.092,468,3.074,514,4.031,619,3.45,682,4.497,892,2.784,893,3.463,922,3.463,942,3.463,995,4.072,1020,3.463,1035,3.463,1117,3.074,1119,2.44,1152,3.45,1153,4.072,1180,2.359,1204,2.686,1213,2.686,1330,4.497,1507,2.784,1551,3.463,1552,4.054,1553,4.054,1554,4.054,1555,3.463,1556,7.175,1557,3.463,1558,7.175,1559,4.054,1560,6.705,1561,5.315,1562,4.054,1563,4.054,1564,4.054,1565,4.054,1566,5.315,1567,5.315,1568,4.054,1569,4.054,1570,4.054,1571,5.315,1572,4.054,1573,4.054,1574,4.054,1575,4.054,1576,4.054,1577,4.054,1578,4.054,1579,4.054,1580,4.054,1581,4.054,1582,4.054,1583,4.054,1584,4.054,1585,4.054,1586,4.054,1587,3.463,1588,4.541,1589,3.463,1590,5.583,1591,3.463,1592,3.463,1593,4.054]],["title/dependencies.html",[347,1.702,1594,2.55]],["body/dependencies.html",[42,0.022,66,0.205,78,1.111,279,0.018,280,0.018,321,1.821,347,2.039,362,5.282,363,4.689,429,3.001,561,2.607,575,2.296,917,2.296,919,2.296,1154,3.247,1289,4.407,1327,4.407,1328,4.407,1595,5.158,1596,7.204,1597,5.158,1598,6.183,1599,5.158,1600,5.158,1601,5.158,1602,6.864,1603,5.158,1604,5.158,1605,5.158,1606,5.158,1607,5.158,1608,5.158,1609,5.158,1610,5.158,1611,5.158,1612,5.158,1613,5.158,1614,5.158,1615,5.158,1616,5.158,1617,5.158,1618,5.158,1619,5.158,1620,5.158,1621,5.158,1622,5.158]],["title/index.html",[24,0.648,1623,3.056]],["body/index.html",[1,1.727,2,1.431,42,0.021,92,1.635,101,2.309,155,1.796,204,1.727,253,1.963,256,1.727,258,1.727,260,1.635,263,1.548,266,1.548,268,1.635,269,1.466,272,1.635,274,1.635,275,1.727,279,0.016,280,0.016,283,2.697,340,1.694,345,4.754,346,1.031,347,2.178,348,3.66,349,3.66,350,3.66,351,3.66,352,3.833,353,2.452,354,1.796,379,1.694,416,3.249,910,4.674,911,3.66,912,3.66,913,3.66,914,3.833,957,4.674,958,3.66,959,3.66,960,3.66,961,3.833,1005,4.905,1006,3.66,1007,3.66,1008,3.66,1009,3.833,1112,4.284,1113,3.66,1114,3.66,1115,3.66,1116,3.543,1140,4.905,1141,3.66,1142,3.66,1143,3.66,1144,3.833,1151,2.493,1281,4.674,1282,3.66,1283,3.66,1284,3.66,1285,3.833,1319,4.816,1320,3.66,1321,3.66,1322,3.66,1323,3.833,1541,4.674,1542,3.66,1543,3.66,1544,3.66,1545,3.833,1623,3.66,1624,4.285,1625,4.285,1626,4.285]],["title/modules.html",[346,1.177]],["body/modules.html",[42,0.018,279,0.018,280,0.018,345,3.52,346,1.234,352,3.227,363,5.54,737,6.241,910,3.52,914,3.227,957,3.52,961,3.227,1005,3.52,1009,3.227,1112,3.227,1116,2.983,1140,3.52,1144,3.227,1200,5.016,1281,3.52,1285,3.227,1319,3.52,1323,3.227,1541,3.52,1545,3.227,1627,7.305,1628,7.305,1629,7.504]],["title/properties.html",[25,1.036,1594,2.55]],["body/properties.html",[12,1.91,25,1.376,42,0.021,263,1.454,279,0.019,280,0.019,1301,4.886,1302,4.886,1630,6.569,1631,5.719,1632,5.719,1633,5.719,1634,5.719]],["title/routes.html",[379,1.933]],["body/routes.html",[42,0.019,279,0.019,280,0.019,379,2.317]],["title/miscellaneous/variables.html",[1635,2.55,1636,3.677]],["body/miscellaneous/variables.html",[24,0.827,42,0.022,44,1.205,50,3.117,54,2.884,55,2.724,56,2.554,189,1.613,254,1.541,279,0.016,280,0.016,439,3.464,460,4.352,464,4.308,467,3.829,468,4.352,682,3.464,719,4.902,774,3.903,1555,4.902,1557,4.902,1587,3.903,1588,5.622,1589,3.903,1590,3.903,1591,4.902,1592,5.622,1635,3.903,1636,3.903,1637,6.78,1638,5.738,1639,5.738,1640,4.568,1641,4.568,1642,4.568,1643,4.568,1644,4.568,1645,4.568,1646,4.568,1647,4.568,1648,6.274,1649,4.568,1650,4.568,1651,4.568,1652,4.568,1653,4.568,1654,4.568,1655,5.738,1656,5.738,1657,5.738,1658,5.738,1659,5.738,1660,6.92,1661,5.738,1662,5.738,1663,5.738,1664,5.738,1665,5.738,1666,5.738,1667,5.738,1668,5.738,1669,5.738,1670,5.738,1671,5.738]]],"invertedIndex":[["",{"_index":42,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":99,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1302,"title":{},"body":{"components/ProfilePage.html":{},"properties.html":{}}}],["0.11.4",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1266,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["0/1",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1579,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1105,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["1",{"_index":155,"title":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{},"index.html":{}}}],["1/3",{"_index":1578,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":103,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["100",{"_index":105,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["100vh",{"_index":991,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["10px",{"_index":1104,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["12",{"_index":1445,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["13",{"_index":1443,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["14",{"_index":1625,"title":{},"body":{"index.html":{}}}],["14.0.0",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":1003,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["15",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["15.2.3",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["15.2.4",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":953,"title":{},"body":{"components/HomePage.html":{}}}],["18",{"_index":1624,"title":{},"body":{"index.html":{}}}],["18/22",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["1:393456523030:web:1d160ece617e4e8eaf2237",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1em",{"_index":1093,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["1px",{"_index":1278,"title":{},"body":{"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["2",{"_index":556,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["2.3.0",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1584,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":998,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["20.1.0",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":948,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["22",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["22px",{"_index":954,"title":{},"body":{"components/HomePage.html":{}}}],["23/28",{"_index":1583,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":104,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["26",{"_index":1585,"title":{},"body":{"coverage.html":{}}}],["26px",{"_index":951,"title":{},"body":{"components/HomePage.html":{}}}],["27",{"_index":1626,"title":{},"body":{"index.html":{}}}],["2em",{"_index":1092,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["3/9",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":1102,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["30px",{"_index":1108,"title":{},"body":{"components/LoginPage.html":{}}}],["33",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["36em",{"_index":1106,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["37",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["393456523030",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.1.0",{"_index":1606,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1602,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":1604,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["4/15",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":995,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"coverage.html":{}}}],["41",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["4em",{"_index":906,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["5",{"_index":101,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"index.html":{}}}],["5/12",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":942,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["50px",{"_index":1101,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["50rem",{"_index":1280,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["53",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1506,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["6.0.3",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["6.1.9",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["64c40",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64c40.appspot.com",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64c40.firebaseapp.com",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.5.0",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["7/13",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["75px",{"_index":1307,"title":{},"body":{"components/ProfilePage.html":{}}}],["8/21",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":1580,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":1582,"title":{},"body":{"coverage.html":{}}}],["8c8c8c",{"_index":955,"title":{},"body":{"components/HomePage.html":{}}}],["9.17.1",{"_index":1614,"title":{},"body":{"dependencies.html":{}}}],["9/24",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["a.timestamp.getdate",{"_index":658,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["a.timestamp.gettime",{"_index":1363,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["abort",{"_index":1056,"title":{},"body":{"components/LoginPage.html":{}}}],["absolute",{"_index":939,"title":{},"body":{"components/HomePage.html":{}}}],["access",{"_index":1539,"title":{},"body":{"components/UserManagementPage.html":{}}}],["accessed",{"_index":787,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["actions",{"_index":96,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["activatedroutesnapshot",{"_index":421,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":1354,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["actual_component",{"_index":278,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["actually",{"_index":839,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["add",{"_index":13,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["adddialog",{"_index":1,"title":{"components/AddDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["adddialogref",{"_index":112,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["adddoc",{"_index":776,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["additem",{"_index":33,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["additem(item",{"_index":212,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["additem(itemtoadd",{"_index":702,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["addlimit",{"_index":596,"title":{},"body":{"components/EditDialog.html":{}}}],["addlimit(item",{"_index":219,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["address",{"_index":515,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["adds",{"_index":47,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["admin",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/UserManagementPage.html":{}}}],["adminapp",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":64,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["again",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["aizasyakair2_b6rlny9ctii",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":158,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["alert.present",{"_index":174,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["alert.service",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["alertcontroller",{"_index":77,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["alertservice",{"_index":282,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["align",{"_index":907,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["already",{"_index":855,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["analytics",{"_index":1591,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1595,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":917,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":66,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":919,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}],["angular/material/card",{"_index":1150,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["angular/material/dialog",{"_index":76,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/material/divider",{"_index":1148,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["angular/material/input",{"_index":1017,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["angular/material/menu",{"_index":68,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/material/paginator",{"_index":70,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/material/select",{"_index":1146,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["angular/material/sort",{"_index":72,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/material/table",{"_index":74,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/platform",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"dependencies.html":{}}}],["apikey",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":254,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":253,"title":{"components/AppComponent.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["appid",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":937,"title":{},"body":{"components/HomePage.html":{}}}],["appmodule",{"_index":345,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appname",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":352,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["array",{"_index":725,"title":{},"body":{"injectables/FirebaseService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["array.foreach(num",{"_index":1498,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["array.length",{"_index":1501,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["arrays",{"_index":1185,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["async",{"_index":32,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["auth",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.onauthstatechanged(user",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdomain",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":380,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":1633,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":303,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"coverage.html":{}}}],["available",{"_index":737,"title":{},"body":{"injectables/FirebaseService.html":{},"modules.html":{}}}],["average",{"_index":1489,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["avg",{"_index":1497,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["await",{"_index":118,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["b",{"_index":656,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["b.timestamp.getdate",{"_index":657,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["b.timestamp.gettime",{"_index":1364,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["background",{"_index":1275,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["backgroundcolor",{"_index":1240,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["bar",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":132,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["basis",{"_index":1461,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["below",{"_index":899,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["black",{"_index":555,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{}}}],["block",{"_index":1110,"title":{},"body":{"components/LoginPage.html":{}}}],["bold",{"_index":1315,"title":{},"body":{"components/ProfilePage.html":{}}}],["boolean",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["bootstrap",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":1276,"title":{},"body":{"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["bordercolor",{"_index":1239,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["bottom",{"_index":1111,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["bread",{"_index":1269,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["browse",{"_index":1629,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["buckets",{"_index":1471,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["buckets.length",{"_index":1474,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["buckets.push(1",{"_index":1476,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["buckets.push(this.getnumitemoccurrences(order.items",{"_index":1483,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["buckets[i",{"_index":1475,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["bundledwebruntime",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":1066,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["buttons",{"_index":167,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["c",{"_index":1428,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["called",{"_index":227,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["calls",{"_index":1511,"title":{},"body":{"components/UserManagementPage.html":{}}}],["can't",{"_index":1068,"title":{},"body":{"components/LoginPage.html":{}}}],["canactivate",{"_index":387,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":420,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":169,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["canceldata",{"_index":597,"title":{},"body":{"components/EditDialog.html":{}}}],["canceldata(item",{"_index":242,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["cancelitem",{"_index":206,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["cancelled",{"_index":1351,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["cancellimit",{"_index":207,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["capacitor.config.ts",{"_index":1555,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/app",{"_index":1601,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":1603,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":1605,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":1607,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":568,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["catch((err",{"_index":203,"title":{},"body":{"components/AddDialog.html":{},"injectables/AuthService.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["cell",{"_index":994,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["center",{"_index":909,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["change",{"_index":770,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["changed",{"_index":526,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["changedetectorref",{"_index":644,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["changes",{"_index":228,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["changing",{"_index":660,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["chart",{"_index":1195,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["chart.js",{"_index":1220,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["chartconfiguration",{"_index":1218,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["chartconfiguration['data",{"_index":1254,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["chartoptions",{"_index":1210,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["charts",{"_index":1154,"title":{},"body":{"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"dependencies.html":{}}}],["charttype",{"_index":1219,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["check",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["child",{"_index":1313,"title":{},"body":{"components/ProfilePage.html":{}}}],["claims",{"_index":748,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["class",{"_index":91,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["click)=\"additem()\">add",{"_index":245,"title":{},"body":{"components/AddDialog.html":{}}}],["clicked",{"_index":1244,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["close",{"_index":618,"title":{},"body":{"components/EditDialog.html":{},"components/ViewOrderDialog.html":{}}}],["closeadddialog",{"_index":186,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["closes",{"_index":185,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["cloud",{"_index":713,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["cluster_appmodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_forgotpasswordpagemodule",{"_index":911,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"index.html":{}}}],["cluster_forgotpasswordpagemodule_declarations",{"_index":913,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"index.html":{}}}],["cluster_forgotpasswordpagemodule_imports",{"_index":912,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":958,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":960,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_imports",{"_index":959,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_inventorymanagementpagemodule",{"_index":1006,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"index.html":{}}}],["cluster_inventorymanagementpagemodule_declarations",{"_index":1007,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"index.html":{}}}],["cluster_inventorymanagementpagemodule_imports",{"_index":1008,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule",{"_index":1113,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":1114,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_imports",{"_index":1115,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_ordermanagementpagemodule",{"_index":1141,"title":{},"body":{"modules/OrderManagementPageModule.html":{},"index.html":{}}}],["cluster_ordermanagementpagemodule_declarations",{"_index":1143,"title":{},"body":{"modules/OrderManagementPageModule.html":{},"index.html":{}}}],["cluster_ordermanagementpagemodule_imports",{"_index":1142,"title":{},"body":{"modules/OrderManagementPageModule.html":{},"index.html":{}}}],["cluster_pantrystatisticspagemodule",{"_index":1282,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"index.html":{}}}],["cluster_pantrystatisticspagemodule_declarations",{"_index":1283,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"index.html":{}}}],["cluster_pantrystatisticspagemodule_imports",{"_index":1284,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule",{"_index":1320,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule_declarations",{"_index":1322,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule_imports",{"_index":1321,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_usermanagementpagemodule",{"_index":1542,"title":{},"body":{"modules/UserManagementPageModule.html":{},"index.html":{}}}],["cluster_usermanagementpagemodule_declarations",{"_index":1543,"title":{},"body":{"modules/UserManagementPageModule.html":{},"index.html":{}}}],["cluster_usermanagementpagemodule_imports",{"_index":1544,"title":{},"body":{"modules/UserManagementPageModule.html":{},"index.html":{}}}],["col",{"_index":1274,"title":{},"body":{"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["col:last",{"_index":1317,"title":{},"body":{"components/ProfilePage.html":{}}}],["collapse",{"_index":1309,"title":{},"body":{"components/ProfilePage.html":{}}}],["collection",{"_index":775,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["color",{"_index":575,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserManagementPage.html":{},"dependencies.html":{}}}],["colorpickermodule",{"_index":1326,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["colors",{"_index":528,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["column",{"_index":996,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["commonmodule",{"_index":916,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["compared",{"_index":1450,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["component",{"_index":0,"title":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["component_template",{"_index":251,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"index.html":{}}}],["compute",{"_index":1463,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["computes",{"_index":1433,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["config",{"_index":1557,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":159,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(\"error",{"_index":1064,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(\"getting",{"_index":1258,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(\"searching",{"_index":1268,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(\"submit",{"_index":1243,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log('calling",{"_index":852,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["console.log('done",{"_index":890,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["console.log('getperms",{"_index":1530,"title":{},"body":{"components/UserManagementPage.html":{}}}],["console.log('return",{"_index":838,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["console.log('returning",{"_index":833,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["console.log('signout",{"_index":1071,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log('user",{"_index":1080,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(d",{"_index":1528,"title":{},"body":{"components/UserManagementPage.html":{}}}],["console.log(data.status",{"_index":676,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(enddateobj.getmonth",{"_index":1252,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(err",{"_index":1084,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(fromdateobj.getmonth",{"_index":1251,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(item",{"_index":200,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["console.log(page",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(this.data",{"_index":209,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/ProfilePage.html":{}}}],["console.log(this.enddate",{"_index":1226,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.enumvals",{"_index":672,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(this.forecaster.getitemdemandbymonth(\"bread",{"_index":1271,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.forecaster.getnumorderbymonth",{"_index":1261,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.fromdate",{"_index":1225,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.nameinput",{"_index":233,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["console.log(this.pantry",{"_index":566,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["console.log(this.router.url",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(this.selectedfooditem",{"_index":1227,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.value",{"_index":673,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(this.values",{"_index":671,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(user.perms",{"_index":1533,"title":{},"body":{"components/UserManagementPage.html":{}}}],["const",{"_index":139,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":205,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["constructor(alertcontroller",{"_index":286,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(data",{"_index":521,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["constructor(dialog",{"_index":968,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["constructor(firebase",{"_index":1291,"title":{},"body":{"components/ProfilePage.html":{}}}],["constructor(firebaseservice",{"_index":36,"title":{},"body":{"components/AddDialog.html":{},"components/HomePage.html":{}}}],["constructor(forecaster",{"_index":1179,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["constructor(loadingctrl",{"_index":1023,"title":{},"body":{"injectables/LoadingService.html":{}}}],["constructor(loadingservice",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["constructor(private",{"_index":298,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["constructor(router",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginPage.html":{}}}],["container",{"_index":903,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/UserManagementPage.html":{}}}],["containing",{"_index":724,"title":{},"body":{"injectables/FirebaseService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["contains",{"_index":739,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["content",{"_index":1095,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["contents",{"_index":681,"title":{},"body":{"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["contrast",{"_index":577,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["conv",{"_index":842,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["convert",{"_index":632,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["convertitembymonth",{"_index":1172,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["convertordersbymonth",{"_index":1173,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["converts",{"_index":628,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["convolution",{"_index":1485,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["convolve",{"_index":1491,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["convolve1d(array",{"_index":1495,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["convolved",{"_index":1490,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["copy",{"_index":1496,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["copy.push(num",{"_index":1499,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["coresponding",{"_index":631,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["corresponding",{"_index":1466,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["counter",{"_index":1374,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["coverage",{"_index":1551,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":1376,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["createuserwithemailandpassword",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["cssstyledeclaration",{"_index":560,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["curmonth",{"_index":1472,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["current",{"_index":1434,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["currentdemand",{"_index":1452,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["currently",{"_index":736,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["currrentpage",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["cursor",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":747,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["custom_elements_schema",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{}}}],["customized",{"_index":292,"title":{},"body":{"injectables/AlertService.html":{}}}],["cut",{"_index":1419,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["cut.foreach(order",{"_index":1473,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["cutreshaped",{"_index":1421,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["cutreshaped.foreach(orderlist",{"_index":1423,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["d",{"_index":1429,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{}}}],["data",{"_index":116,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["data.id",{"_index":678,"title":{},"body":{"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["data.limit",{"_index":616,"title":{},"body":{"components/EditDialog.html":{}}}],["data.name",{"_index":612,"title":{},"body":{"components/EditDialog.html":{}}}],["data.quantity",{"_index":615,"title":{},"body":{"components/EditDialog.html":{}}}],["data.status",{"_index":674,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["data.timestamp.tolocalestring",{"_index":680,"title":{},"body":{"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["data:this.ordersbymonthnums",{"_index":1265,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["data['address",{"_index":812,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['description",{"_index":811,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['logourl",{"_index":813,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['name",{"_index":810,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['orderlimit",{"_index":816,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['primarycolor",{"_index":814,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['secondarycolor",{"_index":815,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["database",{"_index":231,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["datainventory",{"_index":1334,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["dataorders",{"_index":1335,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["datapantry",{"_index":1333,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["datasets",{"_index":1234,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["datatable",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["date",{"_index":1136,"title":{},"body":{"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["date(this.enddate",{"_index":1250,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["date(this.fromdate",{"_index":1247,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["datetime",{"_index":1359,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["db",{"_index":50,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["debug",{"_index":1188,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["declarations",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["decoration",{"_index":956,"title":{},"body":{"components/HomePage.html":{}}}],["decorators",{"_index":531,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["decrement",{"_index":216,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["decrements",{"_index":215,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["default",{"_index":54,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":39,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["delete",{"_index":172,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["deletedoc",{"_index":783,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["deletedoc(docref",{"_index":868,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["demand",{"_index":1270,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["demandhist.push(element.orders",{"_index":1504,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["demote",{"_index":1519,"title":{},"body":{"components/UserManagementPage.html":{}}}],["demoted",{"_index":710,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["demoteuser",{"_index":685,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["demoteuser(uid",{"_index":705,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["dependencies",{"_index":347,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["desc",{"_index":552,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"properties.html":{}}}],["desired",{"_index":1342,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["details",{"_index":257,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["determine",{"_index":786,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["dialog",{"_index":15,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["dialog'},{'name",{"_index":252,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["dialog.html",{"_index":23,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["dialogref",{"_index":177,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":180,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["dictionary",{"_index":746,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["difference",{"_index":1436,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["dimensional",{"_index":1484,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["direction",{"_index":1090,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["directive",{"_index":249,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["directives",{"_index":277,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["discard",{"_index":241,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["discards",{"_index":237,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["dismiss",{"_index":853,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["dismissloader",{"_index":1021,"title":{},"body":{"injectables/LoadingService.html":{}}}],["display",{"_index":1088,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["displayedcolumns",{"_index":93,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["doc",{"_index":781,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["doc(db",{"_index":848,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["doc.exists",{"_index":819,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata",{"_index":821,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['date",{"_index":844,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['imageurl",{"_index":828,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['limit",{"_index":827,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['name",{"_index":824,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['orderquan",{"_index":826,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['quantity",{"_index":825,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['status",{"_index":845,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['uid",{"_index":846,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docref",{"_index":847,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["document",{"_index":753,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["document.body.style.setproperty",{"_index":573,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["documentation",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["documentsnapshot",{"_index":716,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["dynamic",{"_index":1600,"title":{},"body":{"dependencies.html":{}}}],["e4ega5wucycgjy",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":175,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["editdetailsdialog",{"_index":256,"title":{"components/EditDetailsDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["editdialog",{"_index":204,"title":{"components/EditDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["editorderdialog",{"_index":258,"title":{"components/EditOrderDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["element",{"_index":248,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["element.email",{"_index":1535,"title":{},"body":{"components/UserManagementPage.html":{}}}],["element.id",{"_index":1138,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["element.limit",{"_index":990,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["element.name",{"_index":988,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["element.perms.admin",{"_index":1536,"title":{},"body":{"components/UserManagementPage.html":{}}}],["element.perms.pantry",{"_index":1537,"title":{},"body":{"components/UserManagementPage.html":{}}}],["element.quantity",{"_index":989,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["element.timestamp.tolocalestring",{"_index":1137,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["elementref",{"_index":544,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["email",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/UserManagementPage.html":{}}}],["emited",{"_index":136,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["emitted",{"_index":1052,"title":{},"body":{"components/LoginPage.html":{}}}],["end",{"_index":1273,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["end:date",{"_index":1418,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["enddate",{"_index":1159,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["enddatechange",{"_index":1174,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["enddateobj",{"_index":1248,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["enter",{"_index":898,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{}}}],["enumvals",{"_index":620,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["environment",{"_index":1588,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebaseconfig",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":569,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["error",{"_index":294,"title":{},"body":{"injectables/AlertService.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["error('food",{"_index":805,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["error('item",{"_index":854,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["error('no",{"_index":799,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["error('order",{"_index":870,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["error('pantry",{"_index":878,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["event",{"_index":135,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["event.detail.value",{"_index":1075,"title":{},"body":{"components/LoginPage.html":{}}}],["event.target",{"_index":141,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["exist",{"_index":806,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["exists",{"_index":856,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["export",{"_index":90,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["exports",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["factor",{"_index":1494,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["failed",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["falling",{"_index":1424,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["false",{"_index":56,"title":{},"body":{"components/AddDialog.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":1279,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["field",{"_index":1002,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["fill",{"_index":1004,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{}}}],["filled",{"_index":1365,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["filter",{"_index":133,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["filtervalue",{"_index":140,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["filtervalue.trim().tolowercase",{"_index":144,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["find",{"_index":150,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["firebase",{"_index":561,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"dependencies.html":{}}}],["firebase.service",{"_index":1331,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["firebase/auth",{"_index":431,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["firebase/firestore",{"_index":784,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["firebase/functions",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["firebaseconfig",{"_index":1592,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebaseservice",{"_index":37,"title":{"injectables/FirebaseService.html":{}},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["flex",{"_index":1089,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["float",{"_index":1306,"title":{},"body":{"components/ProfilePage.html":{}}}],["font",{"_index":946,"title":{},"body":{"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["food",{"_index":239,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["fooditem",{"_index":79,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["fooditem(snap.id",{"_index":823,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["fooditemconv",{"_index":686,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["fooditemconv(snap",{"_index":715,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["foodlist",{"_index":1372,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["foodpantry",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forcedisable",{"_index":26,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["forecaster",{"_index":1182,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["forecasting",{"_index":1431,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["forecastservice",{"_index":1180,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["forgot",{"_index":261,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["forgotpasswordpage",{"_index":260,"title":{"components/ForgotPasswordPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["forgotpasswordpagemodule",{"_index":910,"title":{"modules/ForgotPasswordPageModule.html":{}},"body":{"modules/ForgotPasswordPageModule.html":{},"index.html":{},"modules.html":{}}}],["forgotpasswordpageroutingmodule",{"_index":914,"title":{"modules/ForgotPasswordPageRoutingModule.html":{}},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["form",{"_index":1001,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["formsmodule",{"_index":918,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["found",{"_index":800,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["framework",{"_index":1634,"title":{},"body":{"properties.html":{}}}],["frequency",{"_index":1458,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["fromdate",{"_index":1160,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["fromdatechange",{"_index":1175,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["fromdateobj",{"_index":1246,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["front",{"_index":1480,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["full",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["function",{"_index":714,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["functions",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["g",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gender",{"_index":997,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["general",{"_index":679,"title":{},"body":{"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["generic",{"_index":291,"title":{},"body":{"injectables/AlertService.html":{},"injectables/LoadingService.html":{}}}],["getanalytics(app",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getauth",{"_index":430,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["getauth().onauthstatechanged((user",{"_index":436,"title":{},"body":{"guards/AuthGuard.html":{}}}],["getauth(app",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcurrentuser",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["getdoc",{"_index":779,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getdoc(doc(db",{"_index":804,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getdoc(docref",{"_index":850,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getdocs",{"_index":778,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getdocs(collection(db",{"_index":797,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getenumkey",{"_index":622,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["getenumkey(status",{"_index":625,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["getfirestore",{"_index":774,"title":{},"body":{"injectables/FirebaseService.html":{},"miscellaneous/variables.html":{}}}],["getfirestore(app",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getfunctions",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"miscellaneous/variables.html":{}}}],["getinventory",{"_index":687,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getitemdemandbymonth(itemname",{"_index":1409,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getitemdemandinrange(itemname:string",{"_index":1416,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getitemsfromorders(orders",{"_index":1378,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getnumitemoccurrences(list",{"_index":1373,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getnumorder(type",{"_index":1344,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getnumorderbymonth",{"_index":1399,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getorderhistory",{"_index":1366,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getorderitems",{"_index":688,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getorderitems(order",{"_index":727,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getorders",{"_index":689,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getordersindaterange(orderlist",{"_index":1425,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getoutstandingitems",{"_index":1355,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getpage",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["getpantries",{"_index":690,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getpantry",{"_index":691,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getpantryid",{"_index":692,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getperms",{"_index":693,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getperms(params).then((res",{"_index":888,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getperms(user",{"_index":743,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["gets",{"_index":562,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getstatus",{"_index":1122,"title":{},"body":{"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["getstatus(data.status",{"_index":1550,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["getstatus(element.status",{"_index":1139,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["getstatus(status",{"_index":661,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["getusers",{"_index":694,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getusers().then(async",{"_index":879,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getxmonthitemtrend(n",{"_index":1482,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getxmonthtrend(n",{"_index":1468,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["given",{"_index":1340,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["global.scss",{"_index":1303,"title":{},"body":{"components/ProfilePage.html":{}}}],["globalmodels/fooditem",{"_index":80,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["globalmodels/order",{"_index":646,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["globalmodels/orderstatus",{"_index":647,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["globalmodels/pantry",{"_index":545,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["globalmodels/user",{"_index":785,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["grant",{"_index":1538,"title":{},"body":{"components/UserManagementPage.html":{}}}],["grantadmin",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["grantadmin(params).catch((err",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["grantadminaccess",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["grantadminaccess(uid",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["grants",{"_index":758,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["graph",{"_index":1200,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"modules.html":{}}}],["grid",{"_index":1308,"title":{},"body":{"components/ProfilePage.html":{}}}],["guard",{"_index":416,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["guards",{"_index":417,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hamburger",{"_index":935,"title":{},"body":{"components/HomePage.html":{}}}],["handler",{"_index":171,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["handling",{"_index":295,"title":{},"body":{"injectables/AlertService.html":{}}}],["header",{"_index":163,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["height",{"_index":950,"title":{},"body":{"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["here",{"_index":1070,"title":{},"body":{"components/LoginPage.html":{}}}],["hidden",{"_index":1311,"title":{},"body":{"components/ProfilePage.html":{}}}],["history",{"_index":1382,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["history.foreach(order",{"_index":1386,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["history.foreach(orderlist",{"_index":1401,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["home",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["home'},{'name",{"_index":264,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["home.page",{"_index":963,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":925,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":924,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":263,"title":{"components/HomePage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["homepagemodule",{"_index":957,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["homepageroutingmodule",{"_index":961,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["horizontal",{"_index":1096,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["html",{"_index":247,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["htmlinputelement).value",{"_index":142,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["https://ionicframework.com",{"_index":1632,"title":{},"body":{"properties.html":{}}}],["httpscallable",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["httpscallable(functions",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["icon",{"_index":516,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["iconstyle",{"_index":559,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["icontentref",{"_index":558,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["id",{"_index":151,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["identifier",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["idk",{"_index":192,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["idtoken",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!this.limitinput",{"_index":193,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["if(!userisadmin",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(fromdateobj.getmonth",{"_index":1253,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["if(item.limit",{"_index":220,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["if(this.enddate",{"_index":1249,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["if(this.nameinput",{"_index":234,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["if(this.records.paginator",{"_index":145,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["if(this.selectedfooditem",{"_index":1245,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["image",{"_index":243,"title":{},"body":{"components/AddDialog.html":{}}}],["imageurl",{"_index":198,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["img",{"_index":1099,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AddDialog.html":{},"guards/AuthGuard.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["import",{"_index":63,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["import('./forgot",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./home/home.module').then",{"_index":384,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./inventory",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./login/login.module').then",{"_index":391,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./order",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pantry",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./user",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1103,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["imports",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["increment",{"_index":211,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["increments",{"_index":210,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["init",{"_index":563,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["initalizes",{"_index":653,"title":{},"body":{"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["initializeapp(firebaseconfig",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initializes",{"_index":1191,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["inject",{"_index":82,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["inject(mat_dialog_data",{"_index":532,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["injectable",{"_index":281,"title":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{}},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["injectables",{"_index":283,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"index.html":{}}}],["injected",{"_index":1069,"title":{},"body":{"components/LoginPage.html":{}}}],["inline",{"_index":1109,"title":{},"body":{"components/LoginPage.html":{}}}],["input",{"_index":137,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["inputs",{"_index":1045,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["instance",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"injectables/FirebaseService.html":{}}}],["integer",{"_index":769,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["interface",{"_index":1119,"title":{"interfaces/Pantry.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}},"body":{"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":1151,"title":{},"body":{"interfaces/Pantry.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"index.html":{}}}],["intialized",{"_index":742,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["intializes",{"_index":1516,"title":{},"body":{"components/UserManagementPage.html":{}}}],["inventory",{"_index":85,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["inventorymanagementpage",{"_index":92,"title":{"components/InventoryManagementPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["inventorymanagementpage.adddialogref",{"_index":184,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["inventorymanagementpage.adddialogref.close",{"_index":187,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["inventorymanagementpage.closeadddialog",{"_index":202,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["inventorymanagementpagemodule",{"_index":1005,"title":{"modules/InventoryManagementPageModule.html":{}},"body":{"modules/InventoryManagementPageModule.html":{},"index.html":{},"modules.html":{}}}],["inventorymanagementpageroutingmodule",{"_index":1009,"title":{"modules/InventoryManagementPageRoutingModule.html":{}},"body":{"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["io.ionic.starter",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":574,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["ioncontent",{"_index":546,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["ionic",{"_index":1630,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":78,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"injectables/LoadingService.html":{},"modules/LoginPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["ionicmodule.forroot",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicons",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["ionviewwillenter",{"_index":651,"title":{},"body":{"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["isadmin",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadmin({pantry",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnan(number(v",{"_index":640,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["item",{"_index":14,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["item's",{"_index":223,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["item.limit",{"_index":221,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["item.name",{"_index":235,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["item.quantity",{"_index":213,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["itembymonth",{"_index":1161,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["itembymonthmonths",{"_index":1162,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["itembymonthnums",{"_index":1163,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["itemname",{"_index":1371,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["items",{"_index":730,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["items's",{"_index":217,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["itemtoadd",{"_index":704,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.id",{"_index":849,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.imageurl",{"_index":858,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.limit",{"_index":859,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.name",{"_index":860,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.quantity",{"_index":861,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoremove",{"_index":762,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoremove.id",{"_index":867,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate",{"_index":765,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate.id",{"_index":862,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate.limit",{"_index":865,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate.name",{"_index":864,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate.quantity",{"_index":866,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["justify",{"_index":1094,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["kernel",{"_index":1486,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["kernel.length",{"_index":1503,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["label",{"_index":1236,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["labels",{"_index":1232,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["landing",{"_index":923,"title":{},"body":{"components/HomePage.html":{}}}],["later",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["left",{"_index":940,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["legend",{"_index":246,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["length",{"_index":98,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["limit",{"_index":95,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["limitinput",{"_index":27,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["line",{"_index":949,"title":{},"body":{"components/HomePage.html":{}}}],["linear",{"_index":1456,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["linechartdataitem",{"_index":1164,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["linechartdataorders",{"_index":1165,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["linechartlegend",{"_index":1166,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["linechartoptions",{"_index":1167,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["link",{"_index":901,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["list",{"_index":1349,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["list.foreach(item",{"_index":1375,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["lists",{"_index":1380,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["loadchildren",{"_index":383,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":1027,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loading.present",{"_index":1033,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loading.service",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["loadingcontroller",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["loadingctrl",{"_index":1025,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingservice",{"_index":38,"title":{"injectables/LoadingService.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"coverage.html":{}}}],["log",{"_index":1087,"title":{},"body":{"components/LoginPage.html":{}}}],["logged",{"_index":434,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FirebaseService.html":{}}}],["login",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{}}}],["login'},{'name",{"_index":267,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["login.page",{"_index":1118,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Pantry.html":{}}}],["login.page.html",{"_index":1037,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":1036,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":266,"title":{"components/LoginPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["loginpagemodule",{"_index":1112,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"index.html":{},"modules.html":{}}}],["loginpageroutingmodule",{"_index":1116,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Pantry.html":{},"index.html":{},"modules.html":{}}}],["logo",{"_index":553,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["logourl",{"_index":583,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"components/ProfilePage.html":{}}}],["logs",{"_index":789,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["long",{"_index":1405,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["m",{"_index":385,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.forgotpasswordpagemodule",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":386,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.inventorymanagementpagemodule",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.ordermanagementpagemodule",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.pantrystatisticspagemodule",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilepagemodule",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.usermanagementpagemodule",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["made",{"_index":238,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["mainly",{"_index":637,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["make",{"_index":433,"title":{},"body":{"guards/AuthGuard.html":{}}}],["makeadmin",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["makeadmin(params).then",{"_index":889,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["makeadmin(user",{"_index":1509,"title":{},"body":{"components/UserManagementPage.html":{}}}],["manage",{"_index":936,"title":{},"body":{"components/HomePage.html":{}}}],["management",{"_index":86,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["management'},{'name",{"_index":265,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["management.module').then",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["management.module.ts",{"_index":1010,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["management.page",{"_index":1012,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["management.page.html",{"_index":87,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["management.page.scss",{"_index":89,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["management.page.ts",{"_index":11,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["management.page.ts:100",{"_index":1132,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:113",{"_index":1129,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:117",{"_index":975,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:128",{"_index":973,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:137",{"_index":1130,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:141",{"_index":970,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:149",{"_index":1131,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:155",{"_index":60,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:156",{"_index":61,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:157",{"_index":58,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:158",{"_index":62,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:159",{"_index":40,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:164",{"_index":52,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:167",{"_index":643,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:168",{"_index":641,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:169",{"_index":624,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:170",{"_index":638,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:171",{"_index":46,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:175",{"_index":634,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:186",{"_index":627,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:194",{"_index":636,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:202",{"_index":600,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:203",{"_index":610,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:205",{"_index":608,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:206",{"_index":609,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:208",{"_index":611,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:209",{"_index":604,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:21",{"_index":1520,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:214",{"_index":1546,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["management.page.ts:215",{"_index":1549,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["management.page.ts:216",{"_index":1548,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["management.page.ts:217",{"_index":601,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:22",{"_index":1525,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:225",{"_index":1547,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["management.page.ts:226",{"_index":605,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:23",{"_index":1521,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:235",{"_index":602,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:24",{"_index":1522,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:249",{"_index":606,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:25",{"_index":1523,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:26",{"_index":1524,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:263",{"_index":607,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:27",{"_index":981,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:276",{"_index":603,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:28",{"_index":986,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["management.page.ts:29",{"_index":982,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["management.page.ts:30",{"_index":983,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/UserManagementPage.html":{}}}],["management.page.ts:31",{"_index":984,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:32",{"_index":1134,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:33",{"_index":985,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["management.page.ts:34",{"_index":987,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:35",{"_index":979,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:36",{"_index":1135,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:37",{"_index":969,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:38",{"_index":1124,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:40",{"_index":980,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:44",{"_index":1514,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:45",{"_index":972,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:46",{"_index":1128,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:50",{"_index":1126,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:52",{"_index":978,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:57",{"_index":1127,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:59",{"_index":971,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:65",{"_index":1510,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:67",{"_index":977,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:77",{"_index":1518,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:78",{"_index":1133,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:79",{"_index":976,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:92",{"_index":1125,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:93",{"_index":974,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management/inventory",{"_index":10,"title":{},"body":{"components/AddDialog.html":{},"modules/AppRoutingModule.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"coverage.html":{}}}],["management/order",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["management/user",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"coverage.html":{}}}],["margin",{"_index":904,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["mat",{"_index":993,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["mat_dialog_data",{"_index":83,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["matcardmodule",{"_index":1149,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["matching",{"_index":280,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":75,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matdialogmodule",{"_index":1019,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["matdialogref",{"_index":648,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matdividermodule",{"_index":1147,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["matinputmodule",{"_index":1016,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["matmenumodule",{"_index":1018,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["matmenutrigger",{"_index":67,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matpaginator",{"_index":69,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matpaginatormodule",{"_index":1014,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["matselectmodule",{"_index":1145,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["matsort",{"_index":71,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matsortmodule",{"_index":1015,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["mattable",{"_index":645,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["mattabledatasource",{"_index":73,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["mattabledatasource(data",{"_index":122,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/UserManagementPage.html":{}}}],["mattablemodule",{"_index":1013,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["max",{"_index":593,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["maxorder",{"_index":517,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["measurementid",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["message",{"_index":164,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["messagingsenderid",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["method",{"_index":928,"title":{},"body":{"components/HomePage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["min",{"_index":1100,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["miscellaneous",{"_index":1635,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modifed",{"_index":218,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["modified",{"_index":224,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["modify",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["module",{"_index":344,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{}},"body":{}}],["modules",{"_index":346,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["month",{"_index":1194,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["monthly",{"_index":1460,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["months",{"_index":1462,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["n",{"_index":1430,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["name",{"_index":43,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["nameinput",{"_index":28,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["navigate",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{}}}],["navigatetopage",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["navigatetopage(page",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["negation",{"_index":1477,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["negative",{"_index":1465,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["new",{"_index":121,"title":{},"body":{"components/AddDialog.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["newstatus",{"_index":767,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["ng2",{"_index":1289,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":129,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["ngchartsmodule",{"_index":1288,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{}}}],["ngmodule",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["ngoninit",{"_index":34,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["ngx",{"_index":1327,"title":{},"body":{"modules/ProfilePageModule.html":{},"dependencies.html":{}}}],["none",{"_index":617,"title":{},"body":{"components/EditDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{}}}],["norm",{"_index":1492,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["normalization",{"_index":1493,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["note",{"_index":1487,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["now",{"_index":1469,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["null",{"_index":794,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["num",{"_index":1500,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["number",{"_index":57,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["numbers",{"_index":1339,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["numeric",{"_index":1407,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["numerical",{"_index":629,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["object",{"_index":719,"title":{},"body":{"injectables/FirebaseService.html":{},"miscellaneous/variables.html":{}}}],["object.values(orderstatus).filter((v",{"_index":639,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["objects",{"_index":726,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["observable",{"_index":426,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["occurences",{"_index":1370,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["occurring",{"_index":1479,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["occurs",{"_index":1055,"title":{},"body":{"components/LoginPage.html":{}}}],["ok",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["onauthstatechanged",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["onauthstatechanged(auth",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["one",{"_index":614,"title":{},"body":{"components/EditDialog.html":{}}}],["oninit",{"_index":19,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["openadddialog",{"_index":182,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["openalert",{"_index":965,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["openalert(item",{"_index":161,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["openalert(order",{"_index":665,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["openeditdetailsdialog",{"_index":1290,"title":{},"body":{"components/ProfilePage.html":{}}}],["openeditdetailsdialog(data",{"_index":571,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["openeditdialog",{"_index":966,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["openeditdialog(item",{"_index":176,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["openeditdialog(order",{"_index":667,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["opens",{"_index":157,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["openviewdialog",{"_index":1123,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["openviewdialog(order",{"_index":669,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["optional",{"_index":45,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["optionally",{"_index":1343,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["order",{"_index":259,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["order(snap.id",{"_index":843,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["order.id",{"_index":869,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["order.ref.path",{"_index":835,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["order.status",{"_index":1347,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["order.timestamp.getfullyear",{"_index":1391,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["order.timestamp.getmonth",{"_index":1389,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["order.timestamp.gettime",{"_index":1426,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderconv",{"_index":695,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["orderconv(snap",{"_index":751,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["orderhistorybymonth",{"_index":1383,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderlimit",{"_index":589,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["orderlist",{"_index":1360,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderlist.foreach(order",{"_index":1398,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderlist.length",{"_index":1403,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderlist[0].timestamp.tolocalestring('default",{"_index":1404,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["ordermanagementpage",{"_index":268,"title":{"components/OrderManagementPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["ordermanagementpagemodule",{"_index":1140,"title":{"modules/OrderManagementPageModule.html":{}},"body":{"modules/OrderManagementPageModule.html":{},"index.html":{},"modules.html":{}}}],["ordermanagementpageroutingmodule",{"_index":1144,"title":{"modules/OrderManagementPageRoutingModule.html":{}},"body":{"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["orderpath",{"_index":834,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["orders",{"_index":594,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["orders.foreach(order",{"_index":1379,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orders.sort((a",{"_index":1362,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orders.sort(function(a",{"_index":655,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["ordersbymonth",{"_index":1168,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["ordersbymonthmonths",{"_index":1169,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["ordersbymonthnums",{"_index":1170,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["orderstatus",{"_index":626,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["orderstatus.processing",{"_index":1356,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderstatus['order",{"_index":1367,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderstatus[status",{"_index":662,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["out",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"index.html":{}}}],["outer",{"_index":817,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["overlay",{"_index":1029,"title":{},"body":{"injectables/LoadingService.html":{}}}],["overview",{"_index":1623,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":952,"title":{},"body":{"components/HomePage.html":{}}}],["p8h232s2f7",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":1594,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1091,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["paddingnum",{"_index":1502,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["page",{"_index":17,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pagesize",{"_index":100,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pagesizeoptions",{"_index":102,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["paginator",{"_index":107,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pantries",{"_index":735,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["pantry",{"_index":270,"title":{"interfaces/Pantry.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["pantry's",{"_index":741,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["pantry('id",{"_index":551,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["pantry(snapshot.id",{"_index":809,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pantry.address",{"_index":871,"title":{},"body":{"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["pantry.desc",{"_index":872,"title":{},"body":{"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["pantry.logourl",{"_index":873,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pantry.name",{"_index":874,"title":{},"body":{"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["pantry.orderlimit",{"_index":875,"title":{},"body":{"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["pantry.primarycolor",{"_index":876,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["pantry.secondarycolor",{"_index":877,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["pantryconv",{"_index":696,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pantryconv(snapshot",{"_index":754,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pantryid",{"_index":683,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["pantryname",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["pantrystatisticspage",{"_index":269,"title":{"components/PantryStatisticsPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["pantrystatisticspagemodule",{"_index":1281,"title":{"modules/PantryStatisticsPageModule.html":{}},"body":{"modules/PantryStatisticsPageModule.html":{},"index.html":{},"modules.html":{}}}],["pantrystatisticspageroutingmodule",{"_index":1285,"title":{"modules/PantryStatisticsPageRoutingModule.html":{}},"body":{"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["pantry}).then((res",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["param",{"_index":134,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["parameter",{"_index":722,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["parameters",{"_index":41,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["params",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["parse",{"_index":1377,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["particular",{"_index":731,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["password",{"_index":393,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/LoginPage.html":{}}}],["password'},{'name",{"_index":262,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["password).then(async",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["password.module').then",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["password.module.ts",{"_index":915,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{}}}],["password.page",{"_index":920,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{}}}],["password.page.html",{"_index":895,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.scss",{"_index":894,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts",{"_index":893,"title":{},"body":{"components/ForgotPasswordPage.html":{},"coverage.html":{}}}],["password.page.ts:12",{"_index":897,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:8",{"_index":896,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password/forgot",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"coverage.html":{}}}],["path",{"_index":382,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["pathmatch",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patry",{"_index":929,"title":{},"body":{"components/HomePage.html":{}}}],["percent",{"_index":1435,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period",{"_index":1467,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period1",{"_index":1446,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period1.length",{"_index":1449,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period2",{"_index":1447,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period2.length",{"_index":1448,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["permissions",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["perms",{"_index":709,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["picked",{"_index":1352,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["picker",{"_index":1328,"title":{},"body":{"modules/ProfilePageModule.html":{},"dependencies.html":{}}}],["please",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pointer",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["position",{"_index":938,"title":{},"body":{"components/HomePage.html":{}}}],["positive",{"_index":1464,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["prediction",{"_index":1432,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["preloadallmodules",{"_index":377,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["premission",{"_index":745,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["presentalert",{"_index":285,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentalert(header",{"_index":288,"title":{},"body":{"injectables/AlertService.html":{}}}],["presents",{"_index":290,"title":{},"body":{"injectables/AlertService.html":{}}}],["pressed",{"_index":240,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["presses",{"_index":1198,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["previous",{"_index":1437,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["previousdemand",{"_index":1454,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["prevyeardiff",{"_index":1438,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["prevyearitemdiff(itemname",{"_index":1451,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["primary",{"_index":293,"title":{},"body":{"injectables/AlertService.html":{},"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["primarycolor",{"_index":585,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"components/ProfilePage.html":{}}}],["private",{"_index":114,"title":{},"body":{"components/AddDialog.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["production",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{}}}],["profile'},{'name",{"_index":273,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["profile.page",{"_index":1325,"title":{},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{}}}],["profile.page.html",{"_index":549,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["profile.page.scss",{"_index":550,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["profile/instance",{"_index":548,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["profilepage",{"_index":272,"title":{"components/ProfilePage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["profilepagemodule",{"_index":1319,"title":{"modules/ProfilePageModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"index.html":{},"modules.html":{}}}],["profilepageroutingmodule",{"_index":1323,"title":{"modules/ProfilePageRoutingModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["project",{"_index":1631,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":427,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["promise((resolve",{"_index":435,"title":{},"body":{"guards/AuthGuard.html":{}}}],["promise(async",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["promote",{"_index":1513,"title":{},"body":{"components/UserManagementPage.html":{}}}],["promoted",{"_index":759,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["promoteuser",{"_index":697,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["promoteuser(uid",{"_index":756,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["proper",{"_index":1196,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["properties",{"_index":25,"title":{"properties.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"properties.html":{}}}],["provide",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":296,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["providers",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":113,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pubrouter",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["pull",{"_index":840,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pulls",{"_index":1047,"title":{},"body":{"components/LoginPage.html":{}}}],["quantity",{"_index":94,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["quantityinput",{"_index":29,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["query",{"_index":1408,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["querysnapshot",{"_index":780,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["range",{"_index":1414,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["recent",{"_index":1478,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["recieve",{"_index":900,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["records",{"_index":97,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["red",{"_index":554,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["redirectto",{"_index":388,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regression",{"_index":1457,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["reject",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["relevant",{"_index":1156,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["remove",{"_index":148,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["removeadmin",{"_index":1508,"title":{},"body":{"components/UserManagementPage.html":{}}}],["removeadmin(user",{"_index":1517,"title":{},"body":{"components/UserManagementPage.html":{}}}],["removed",{"_index":153,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["removeitem",{"_index":598,"title":{},"body":{"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["removeitem(item",{"_index":149,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["removeitem(itemtoremove",{"_index":760,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["removeitem(order",{"_index":663,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["removelimit",{"_index":599,"title":{},"body":{"components/EditDialog.html":{}}}],["removelimit(item",{"_index":225,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["removes",{"_index":147,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["representaion",{"_index":633,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["representation",{"_index":721,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["res.data",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["reset",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"index.html":{}}}],["reshapes",{"_index":1395,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["resolve",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(true",{"_index":438,"title":{},"body":{"guards/AuthGuard.html":{}}}],["resolve(user",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsive",{"_index":1211,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["restorefocus",{"_index":179,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["result",{"_index":712,"title":{},"body":{"injectables/FirebaseService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["result.data.users",{"_index":881,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["results",{"_index":279,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retireves",{"_index":729,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["retreives",{"_index":1515,"title":{},"body":{"components/UserManagementPage.html":{}}}],["retrieve",{"_index":570,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["retrieves",{"_index":652,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["retrives",{"_index":732,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["return",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["retval",{"_index":1345,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.concat(order.items",{"_index":1357,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.length",{"_index":1387,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.push",{"_index":1402,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.push([order",{"_index":1388,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.push(order",{"_index":1368,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.reverse",{"_index":1394,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval[i].push(order",{"_index":1393,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval[i][0].timestamp.getfullyear",{"_index":1392,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval[i][0].timestamp.getmonth",{"_index":1390,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["revoke",{"_index":1540,"title":{},"body":{"components/UserManagementPage.html":{}}}],["revokeadmin",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["revokeadmin(params).catch((err",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["revokeadmin(params).then",{"_index":891,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["revokeadminaccess",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["revokeadminaccess(uid",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["rgba(0,255,0,0.3",{"_index":1241,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["rgba(255,0,0,0.3",{"_index":1267,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["right",{"_index":941,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["role",{"_index":170,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["root",{"_index":297,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["root'},{'name",{"_index":255,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["route",{"_index":425,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginPage.html":{}}}],["routereusestrategy",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":378,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":921,"title":{},"body":{"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":423,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":379,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["routing.module.ts",{"_index":376,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["row",{"_index":1098,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["row:first",{"_index":1312,"title":{},"body":{"components/ProfilePage.html":{}}}],["row:last",{"_index":1318,"title":{},"body":{"components/ProfilePage.html":{}}}],["rxjs",{"_index":429,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{},"dependencies.html":{}}}],["save",{"_index":595,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{}}}],["saved",{"_index":229,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["savedata",{"_index":519,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/ProfilePage.html":{}}}],["savedata(item",{"_index":232,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["saveorder",{"_index":623,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["saveorder(data",{"_index":635,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["saves",{"_index":525,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["schemas",{"_index":1011,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{}}}],["screen",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["search",{"_index":1415,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["secondary",{"_index":518,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["secondarycolor",{"_index":587,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["secondaycolor",{"_index":1120,"title":{},"body":{"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{}}}],["select",{"_index":1053,"title":{},"body":{"components/LoginPage.html":{}}}],["selectchange",{"_index":1176,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["selectedfooditem",{"_index":1171,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["selection",{"_index":1048,"title":{},"body":{"components/LoginPage.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["self",{"_index":908,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["send",{"_index":902,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["separates",{"_index":1184,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["service",{"_index":1512,"title":{},"body":{"components/UserManagementPage.html":{}}}],["services/alert.service",{"_index":547,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["services/auth.service",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{}}}],["services/firebase.service",{"_index":81,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["services/forecast.service",{"_index":1221,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["services/guards/auth.guard",{"_index":381,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["services/loading.service",{"_index":84,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["sessionstorage.getitem('pantryid",{"_index":793,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["sessionstorage.getitem('uid",{"_index":791,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["sessionstorage.setitem('pantryid",{"_index":1082,"title":{},"body":{"components/LoginPage.html":{}}}],["sessionstorage.setitem('uid",{"_index":1081,"title":{},"body":{"components/LoginPage.html":{}}}],["set",{"_index":930,"title":{},"body":{"components/HomePage.html":{}}}],["setdata(datapantry",{"_index":1336,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["setdoc",{"_index":782,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["setdoc(docref",{"_index":857,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["setpantryselection",{"_index":1038,"title":{},"body":{"components/LoginPage.html":{}}}],["setpantryselection(event",{"_index":1049,"title":{},"body":{"components/LoginPage.html":{}}}],["sets",{"_index":1051,"title":{},"body":{"components/LoginPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["showing",{"_index":1155,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["showloader",{"_index":1022,"title":{},"body":{"injectables/LoadingService.html":{}}}],["showpage",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["shows",{"_index":1031,"title":{},"body":{"injectables/LoadingService.html":{}}}],["sign",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["signed",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(email",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinbutton",{"_index":1039,"title":{},"body":{"components/LoginPage.html":{}}}],["signinwithemailandpassword",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemailandpassword(auth",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["signout(auth",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["signs",{"_index":1044,"title":{},"body":{"components/LoginPage.html":{}}}],["signup",{"_index":1107,"title":{},"body":{"components/LoginPage.html":{}}}],["size",{"_index":947,"title":{},"body":{"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["snap",{"_index":720,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snap.data",{"_index":822,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot",{"_index":718,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.data",{"_index":808,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.docs",{"_index":829,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.exists",{"_index":851,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.foreach((doc",{"_index":818,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.foreach((item",{"_index":836,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.foreach((pantry",{"_index":802,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["solid",{"_index":1277,"title":{},"body":{"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["something",{"_index":191,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["sort",{"_index":109,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["sorted",{"_index":1000,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{}}}],["sortorderlistbymonth(orderlist",{"_index":1396,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["sortordersbydate(orders",{"_index":1361,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["sorts",{"_index":1358,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["specific",{"_index":707,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["spinner",{"_index":1028,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/.../auth.service.ts",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firebase.service.ts",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":375,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/forgot",{"_index":892,"title":{},"body":{"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/home/home",{"_index":964,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/home/home.module.ts",{"_index":962,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/home/home.page.ts",{"_index":922,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/home/home.page.ts:14",{"_index":931,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:15",{"_index":926,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:23",{"_index":927,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/inventory",{"_index":9,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/login/login",{"_index":1121,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/login/login.module.ts",{"_index":1117,"title":{},"body":{"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"coverage.html":{}}}],["src/app/login/login.page.ts",{"_index":1035,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/login/login.page.ts:100",{"_index":1058,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:17",{"_index":1059,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:18",{"_index":1061,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:19",{"_index":1060,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:20",{"_index":1042,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:31",{"_index":1046,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:43",{"_index":1043,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:62",{"_index":1050,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:70",{"_index":1054,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:96",{"_index":1057,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/order",{"_index":619,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["src/app/pantry",{"_index":1152,"title":{},"body":{"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"coverage.html":{}}}],["src/app/profile/profile",{"_index":1329,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["src/app/profile/profile.module.ts",{"_index":1324,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/profile/profile.page.ts",{"_index":514,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{},"coverage.html":{}}}],["src/app/profile/profile.page.ts:119",{"_index":527,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:19",{"_index":1299,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:20",{"_index":1296,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:23",{"_index":1298,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:24",{"_index":1292,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:27",{"_index":1297,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:34",{"_index":1293,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:48",{"_index":1294,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:58",{"_index":1295,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:69",{"_index":539,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:70",{"_index":535,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:71",{"_index":530,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:72",{"_index":537,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:73",{"_index":541,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:74",{"_index":543,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:75",{"_index":522,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:77",{"_index":533,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:82",{"_index":523,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:89",{"_index":524,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/services/alert.service.ts",{"_index":284,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/services/alert.service.ts:18",{"_index":289,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:7",{"_index":287,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/auth.service.ts",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth.service.ts:34",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:43",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:51",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:74",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:78",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:82",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:93",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/firebase.service.ts",{"_index":682,"title":{},"body":{"injectables/FirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/firebase.service.ts:108",{"_index":723,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:138",{"_index":717,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:147",{"_index":733,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:180",{"_index":728,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:205",{"_index":752,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:218",{"_index":703,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:247",{"_index":764,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:25",{"_index":773,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:26",{"_index":701,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:268",{"_index":761,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:285",{"_index":768,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:304",{"_index":772,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:329",{"_index":749,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:351",{"_index":744,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:368",{"_index":757,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:386",{"_index":706,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:43",{"_index":734,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:68",{"_index":740,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:76",{"_index":738,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:99",{"_index":755,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/forecast.service.ts",{"_index":1330,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["src/app/services/guards/auth.guard.ts",{"_index":418,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/services/guards/auth.guard.ts:11",{"_index":419,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/guards/auth.guard.ts:22",{"_index":424,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/loading.service.ts",{"_index":1020,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading.service.ts:14",{"_index":1030,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:22",{"_index":1026,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:7",{"_index":1024,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/user",{"_index":1507,"title":{},"body":{"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1587,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1589,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":1590,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1272,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["start.gettime",{"_index":1427,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["start:date",{"_index":1417,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["starting",{"_index":1332,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["state",{"_index":422,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":111,"title":{},"body":{"components/AddDialog.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["stating",{"_index":1341,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["statistics",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["statistics'},{'name",{"_index":271,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["statistics.module').then",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["statistics.module.ts",{"_index":1286,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{}}}],["statistics.page",{"_index":1287,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{}}}],["statistics.page.html",{"_index":1158,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["statistics.page.scss",{"_index":1157,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["statistics.page.ts",{"_index":1153,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"coverage.html":{}}}],["statistics.page.ts:101",{"_index":1197,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:130",{"_index":1209,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:131",{"_index":1208,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:132",{"_index":1212,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:135",{"_index":1181,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:146",{"_index":1190,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:27",{"_index":1202,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:28",{"_index":1201,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:29",{"_index":1203,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:30",{"_index":1217,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:31",{"_index":1214,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:32",{"_index":1215,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:33",{"_index":1216,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:34",{"_index":1205,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:35",{"_index":1206,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:36",{"_index":1207,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:41",{"_index":1183,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:51",{"_index":1189,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:58",{"_index":1187,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:65",{"_index":1192,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:72",{"_index":1186,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:82",{"_index":1193,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics/pantry",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"coverage.html":{}}}],["status",{"_index":630,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["storagebucket",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":59,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["strong",{"_index":945,"title":{},"body":{"components/HomePage.html":{}}}],["style",{"_index":1310,"title":{},"body":{"components/ProfilePage.html":{}}}],["styles",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["styleurls",{"_index":88,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["sublist",{"_index":1381,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["submit",{"_index":1199,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["sum",{"_index":1410,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["support",{"_index":1627,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":165,"title":{},"body":{"components/AddDialog.html":{},"guards/AuthGuard.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["svg",{"_index":1628,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["t1",{"_index":1440,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["t2",{"_index":1439,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["t3",{"_index":1442,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["t4",{"_index":1444,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["table",{"_index":49,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["tables",{"_index":131,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":790,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["temp2",{"_index":792,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["tension",{"_index":1238,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["text",{"_index":168,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ViewOrderDialog.html":{}}}],["th.mat",{"_index":999,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["theme",{"_index":1300,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.actions.focus",{"_index":181,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["this.address",{"_index":582,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.alertcontroller.create",{"_index":162,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.alertservice.presentalert('error",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.alertservice.presentalert('login",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.getcurrentuser",{"_index":1078,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authservice.signout",{"_index":1072,"title":{},"body":{"components/LoginPage.html":{}}}],["this.calclinearregression(buckets",{"_index":1481,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.calcprevdate(now",{"_index":1470,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.calcprevdate(t2",{"_index":1441,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.cancelitem",{"_index":214,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.cancellimit",{"_index":222,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.convertordersbymonth",{"_index":1262,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.convolve1d(demandhist",{"_index":1505,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.data.address",{"_index":529,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.desc",{"_index":534,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.id",{"_index":580,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.logourl",{"_index":536,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.name",{"_index":208,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/ProfilePage.html":{}}}],["this.data.orderlimit",{"_index":538,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.primarycolor",{"_index":540,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.secondarycolor",{"_index":542,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.description",{"_index":581,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.dialog.open(adddialog",{"_index":183,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.dialog.open(editdetailsdialog",{"_index":572,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.dialog.open(editdialog",{"_index":178,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.dialog.open(editorderdialog",{"_index":668,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.dialog.open(vieworderdialog",{"_index":670,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.email",{"_index":1073,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebase.getorders",{"_index":654,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.firebase.getpantry",{"_index":565,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.firebaseservice.additem(item).then",{"_index":201,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.firebaseservice.demoteuser(user.uid).then(async",{"_index":1534,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.getinventory",{"_index":119,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.firebaseservice.getorders",{"_index":1256,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.firebaseservice.getpantries",{"_index":1063,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebaseservice.getpantry",{"_index":932,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.firebaseservice.getpantryid",{"_index":1526,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.getperms(user",{"_index":1532,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.getusers",{"_index":1527,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.pantryid",{"_index":1077,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebaseservice.promoteuser(user.uid).then(async",{"_index":1529,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.removeitem(item",{"_index":152,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.firebaseservice.updateinventoryitem(item",{"_index":236,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.firebaseservice.updateorderstatus(data",{"_index":677,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.firebaseservice.updatepantry(pantry",{"_index":591,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.firebaseservice.userid",{"_index":1079,"title":{},"body":{"components/LoginPage.html":{}}}],["this.forcedisable",{"_index":188,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.forecaster.getnumorderbymonth",{"_index":1260,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.forecaster.setdata(pantry",{"_index":1257,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.getenumkey(this.data.status",{"_index":642,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.getnumitemoccurrences(order.items",{"_index":1411,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getnumitemoccurrences(this.getitemsfromorders(period1",{"_index":1453,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getnumitemoccurrences(this.getitemsfromorders(period2",{"_index":1455,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getorderhistory",{"_index":1384,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getorderitems(snap",{"_index":841,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.getordersindaterange(history",{"_index":1420,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getperms(toadd",{"_index":885,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.icon",{"_index":584,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.inventory",{"_index":1255,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.itembymonth",{"_index":1242,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonth.foreach(element",{"_index":1222,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonthmonths",{"_index":1233,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonthmonths.push(element.month",{"_index":1223,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonthnums",{"_index":1235,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonthnums.push(element.items",{"_index":1224,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.length",{"_index":123,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.limitinput",{"_index":194,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.linechartdataitem",{"_index":1231,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.linechartdataorders",{"_index":1263,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.loadingctrl.create",{"_index":1032,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingctrl.dismiss",{"_index":1034,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingservice.dismissloader",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["this.loadingservice.showloader",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["this.logourl",{"_index":933,"title":{},"body":{"components/HomePage.html":{}}}],["this.maxorder",{"_index":590,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.name",{"_index":579,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.nameinput",{"_index":196,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.nameinput.tolowercase",{"_index":195,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.orderconv(doc",{"_index":831,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.orderhistorybymonth",{"_index":1400,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.orders",{"_index":1337,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.orders.foreach(order",{"_index":1346,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.orders?.length",{"_index":1348,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.ordersbymonth",{"_index":1259,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.ordersbymonth.foreach(element",{"_index":1228,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.ordersbymonthmonths",{"_index":1264,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.ordersbymonthmonths.push(element.month",{"_index":1229,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.ordersbymonthnums.push(element.orders",{"_index":1230,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.paginator",{"_index":126,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.pantries",{"_index":1062,"title":{},"body":{"components/LoginPage.html":{}}}],["this.pantry",{"_index":564,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.pantry.length",{"_index":1076,"title":{},"body":{"components/LoginPage.html":{}}}],["this.pantry.logourl",{"_index":934,"title":{},"body":{"components/HomePage.html":{}}}],["this.pantry.primarycolor",{"_index":576,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.pantry.secondarycolor",{"_index":578,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.pantryconv(snapshot",{"_index":807,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.pantryid",{"_index":796,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["this.password",{"_index":1074,"title":{},"body":{"components/LoginPage.html":{}}}],["this.primary",{"_index":586,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.pubrouter",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["this.quantityinput",{"_index":197,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.records",{"_index":120,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/UserManagementPage.html":{}}}],["this.records._updatechangesubscription",{"_index":156,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.data",{"_index":659,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.data.length",{"_index":124,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.data.splice(this.records.data.indexof(item",{"_index":154,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.records.data.splice(this.records.data.indexof(order",{"_index":664,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.filter",{"_index":143,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.paginator",{"_index":125,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.paginator.firstpage",{"_index":146,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.sort",{"_index":127,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.removeitem(item",{"_index":173,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.removeitem(order",{"_index":666,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.router.navigatebyurl(\"forgot",{"_index":1085,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigatebyurl(\"login",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigatebyurl(\"signup",{"_index":1086,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigatebyurl('/home",{"_index":1083,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigatebyurl('login",{"_index":437,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl(page",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.url",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["this.secondary",{"_index":588,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.selectedfooditem?this.selectedfooditem",{"_index":1237,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.signout",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sort",{"_index":128,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.sortorderlistbymonth(cut",{"_index":1422,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.sortordersbydate(history",{"_index":1385,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.sortordersbydate(orderlist",{"_index":1397,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.sortordersbydate(retval",{"_index":1369,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.updatecolors",{"_index":567,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.updatetablesource",{"_index":130,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.urlinput",{"_index":199,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.userid",{"_index":795,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.values.indexof(this.value",{"_index":675,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["throw",{"_index":798,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["timestamp",{"_index":649,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["timestamped",{"_index":1412,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["timestampeditems",{"_index":1204,"title":{"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{}},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["timestampedorders",{"_index":1213,"title":{"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["title",{"_index":1305,"title":{},"body":{"components/ProfilePage.html":{}}}],["toadd",{"_index":830,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toadd.perms",{"_index":884,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["todo",{"_index":432,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FirebaseService.html":{}}}],["toforgotpassword",{"_index":1040,"title":{},"body":{"components/LoginPage.html":{}}}],["token",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar",{"_index":1304,"title":{},"body":{"components/ProfilePage.html":{}}}],["top",{"_index":905,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["toreturn",{"_index":801,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toreturn.push(this.fooditemconv(doc",{"_index":820,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toreturn.push(this.fooditemconv(item",{"_index":837,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toreturn.push(this.pantryconv(pantry",{"_index":803,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toreturn.push(toadd",{"_index":832,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["tosignup",{"_index":1041,"title":{},"body":{"components/LoginPage.html":{}}}],["total",{"_index":1338,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["transform",{"_index":943,"title":{},"body":{"components/HomePage.html":{}}}],["translatey",{"_index":944,"title":{},"body":{"components/HomePage.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["trend",{"_index":1459,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["true",{"_index":189,"title":{},"body":{"components/AddDialog.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["tslib",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":44,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1350,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["ui",{"_index":48,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/ProfilePage.html":{}}}],["uid",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["undefined",{"_index":226,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["unknown",{"_index":711,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["unsub",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["up",{"_index":1353,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["update",{"_index":230,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["update/change",{"_index":788,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatecolors",{"_index":520,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["updatedoc",{"_index":777,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatedoc(docref",{"_index":863,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatefilter",{"_index":967,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["updatefilter(event",{"_index":138,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["updateinventoryitem",{"_index":698,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updateinventoryitem(itemtoupdate",{"_index":763,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updateitemchart",{"_index":1177,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["updateitemgraph",{"_index":1178,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["updateorderstatus",{"_index":699,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updateorderstatus(order",{"_index":766,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatepantry",{"_index":700,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatepantry(pantry",{"_index":771,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updates",{"_index":115,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["updatetablesource",{"_index":117,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["url",{"_index":244,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{}}}],["urlinput",{"_index":30,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["urltree",{"_index":428,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":613,"title":{},"body":{"components/EditDialog.html":{},"components/HomePage.html":{}}}],["useclass",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":16,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["user",{"_index":160,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["user's",{"_index":708,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["user(user.uid",{"_index":882,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["user.email",{"_index":883,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["user.perms",{"_index":1531,"title":{},"body":{"components/UserManagementPage.html":{}}}],["user.uid",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["userarr",{"_index":880,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["userarr.push(toadd",{"_index":886,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["userarr.reverse",{"_index":887,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["usercred",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercred.user.getidtoken",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":684,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["userisadmin",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermanagementpage",{"_index":274,"title":{"components/UserManagementPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["usermanagementpagemodule",{"_index":1541,"title":{"modules/UserManagementPageModule.html":{}},"body":{"modules/UserManagementPageModule.html":{},"index.html":{},"modules.html":{}}}],["usermanagementpageroutingmodule",{"_index":1545,"title":{"modules/UserManagementPageRoutingModule.html":{}},"body":{"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["users",{"_index":750,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["uses",{"_index":1488,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["value",{"_index":55,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":621,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["var",{"_index":250,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["variable",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1636,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1301,"title":{},"body":{"components/ProfilePage.html":{},"properties.html":{}}}],["view",{"_index":276,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild",{"_index":65,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild('icontent",{"_index":557,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["viewchild(matmenutrigger",{"_index":110,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild(matpaginator",{"_index":106,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild(matsort",{"_index":108,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild(mattable",{"_index":650,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["vieworderdialog",{"_index":275,"title":{"components/ViewOrderDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["want",{"_index":166,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["way",{"_index":1065,"title":{},"body":{"components/LoginPage.html":{}}}],["webdir",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weekly",{"_index":592,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["weight",{"_index":1314,"title":{},"body":{"components/ProfilePage.html":{}}}],["white",{"_index":1316,"title":{},"body":{"components/ProfilePage.html":{}}}],["width",{"_index":992,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["within",{"_index":1413,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["work",{"_index":1067,"title":{},"body":{"components/LoginPage.html":{}}}],["wrap",{"_index":1097,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["write",{"_index":190,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["www",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["year",{"_index":1406,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["zone.js",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddDialog.html":{"url":"components/AddDialog.html","title":"component - AddDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventory-management/inventory-management.page.ts\n\n\n\n    \n        Description\n    \n    \n        Add item dialog that will be used in this page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                add-dialog\n            \n\n\n\n\n            \n                templateUrl\n                add-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forceDisable\n                            \n                            \n                                limitInput\n                            \n                            \n                                nameInput\n                            \n                            \n                                quantityInput\n                            \n                            \n                                urlInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService, loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventory-management/inventory-management.page.ts:159\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        AddItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:171\n                \n            \n\n\n            \n                \n                    Adds item to the UI table and the DB\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        forceDisable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limitInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantityInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:156\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        urlInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:158\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog, } from '@angular/material/dialog';\nimport { AlertController, } from '@ionic/angular';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { LoadingService } from '../services/loading.service';\n\n\n/**\n * Inventory management page\n */\n@Component({\n  selector: 'inventory-management',\n  templateUrl: './inventory-management.page.html',\n  styleUrls: ['./inventory-management.page.scss'],\n})\nexport class InventoryManagementPage implements AfterViewInit{\n  \n\n  displayedColumns: string[] = ['name', 'quantity', 'limit', 'actions'];\n  records: MatTableDataSource\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n\n  static addDialogRef: any\n\n  constructor(\n    public dialog: MatDialog,\n    private alertController: AlertController,\n    private firebaseService: FirebaseService,\n    ) { }\n\n  async ngOnInit() {    \n    \n  }\n\n  /**\n   * Updates the data source of the table\n   */\n  async updateTableSource() {\n    let data = await this.firebaseService.getInventory()\n    this.records = new MatTableDataSource(data)\n    this.length = this.records.data.length;\n    this.records.paginator = this.paginator;\n    this.records.sort = this.sort;\n  }\n  async ngAfterViewInit() {\n    await this.updateTableSource()\n  }\n\n  /**\n   * Updates the tables based on the filter\n   * @param event event emited by the filter input\n   */\n  updateFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n  /**\n   * Removes an item from the table\n   * @param item FoodItem to remove\n   */\n  async removeItem(item: FoodItem) {\n    //find the index from id\n    await this.firebaseService.removeItem(item)\n    let removed = this.records.data.splice(this.records.data.indexOf(item), 1)\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n \n  /**\n   * Opens an alert to confirm if a user wants to remove an item\n   * @param item FoodItem to remove\n   */\n  async openAlert(item: FoodItem){\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {}\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(item)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param item FoodItem to edit\n   */\n   openEditDialog(item: FoodItem){\n    const dialogRef = this.dialog.open(EditDialog, {restoreFocus: false, data: item});\n    dialogRef.afterClosed().subscribe( () => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * opens the add item dialog\n   */\n   async openAddDialog(){\n    const dialogRef = this.dialog.open(AddDialog, {restoreFocus: false});\n    InventoryManagementPage.addDialogRef = dialogRef\n    dialogRef.afterClosed().subscribe( () => {\n      this.updateTableSource()\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    })\n  }\n\n  /**\n   * Closes the add dialog\n   */\n  static async closeAddDialog() {\n    await InventoryManagementPage.addDialogRef.close()\n  }\n\n}\n\n/**\n * Add item dialog that will be used in this page\n */\n@Component({\n  selector: 'add-dialog',\n  templateUrl: 'add-dialog.html'\n})\nexport class AddDialog implements OnInit {\n  nameInput: string\n  quantityInput: number\n  limitInput: number\n  urlInput: string\n  forceDisable = false\n  constructor(\n    private firebaseService: FirebaseService,\n    private loadingService: LoadingService\n    ){}\n  ngOnInit(): void {\n      \n  }\n\n  /**\n   * Adds item to the UI table and the DB\n   */\n  async AddItem(){\n    this.forceDisable = true\n    //write to db or something idk\n    if(!this.limitInput) {\n      this.limitInput = 0\n    }\n    let item: FoodItem = {\n      id: this.nameInput.toLowerCase(),\n      name: this.nameInput,\n      quantity: this.quantityInput,\n      limit: this.limitInput,\n      imageUrl: this.urlInput\n    }\n    console.log(item)\n    await this.firebaseService.addItem(item).then(() => {\n      InventoryManagementPage.closeAddDialog()\n      this.forceDisable = false\n    }).catch((err) => {\n      this.forceDisable = false\n    })\n    this.forceDisable = false\n  }\n}\n\n/**\n * Edit dialog that will be used in this page\n */\n@Component({\n  selector: 'edit-dialog',\n  templateUrl: 'edit-dialog.html'\n})\nexport class EditDialog implements OnInit{\n  constructor(@Inject(MAT_DIALOG_DATA) public data: FoodItem,\n  private firebaseService: FirebaseService){}\n  private cancelItem = 0;\n  private cancelLimit = 0;\n  //private name = this.data.name;\n  nameInput: string = this.data.name\n  ngOnInit() {\n    console.log(this.data)\n  }\n\n  /**\n   * increments item quantity\n   * @param item FoodItem to increment\n   */\n  addItem(item: FoodItem){\n    item.quantity = item.quantity + 1;\n    this.cancelItem = this.cancelItem - 1;\n  }\n\n  /**\n   * decrements item quantity\n   * @param item FoodItem to decrement\n   */\n  removeItem(item: FoodItem){\n    item.quantity = item.quantity - 1;\n    this.cancelItem = this.cancelItem + 1;\n  }\n\n  /**\n   * increments and items's limit\n   * @param item FoodItem that will have limit modifed\n   */\n  addLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit + 1\n      this.cancelLimit = this.cancelLimit - 1\n    } else {\n      item.limit = 1\n      this.cancelLimit = this.cancelLimit - 1\n    }\n  }\n\n  /**\n   * decrements and item's limit\n   * @param item FoodItem that will have limit modified\n   */\n  removeLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit - 1;\n      this.cancelLimit = this.cancelLimit + 1\n    } else if(item.limit == 1) {\n      item.limit = undefined;\n      this.cancelLimit = this.cancelLimit + 1\n    }\n  }\n\n  /**\n   * Updates DB info for an item. Called when item changes are saved\n   * @param item FoodItem to update in database\n   */\n  async saveData(item: FoodItem){\n    //write to db\n    console.log(this.nameInput)\n    if(this.nameInput != \"\"){\n      item.name = this.nameInput\n    }\n    await this.firebaseService.updateInventoryItem(item)\n  }\n\n  /**\n   * Discards changes made to food item. Called when Cancel is pressed\n   * @param item FoodItem to discard changes for\n   */\n  cancelData(item: FoodItem){\n    item.quantity = item.quantity + this.cancelItem;\n    if(item.limit){\n      item.limit = item.limit + this.cancelLimit\n      if(item.limit == 0){\n        item.limit = undefined\n      }\n    }\n  }\n}\n    \n\n    \n        Add Item\n\n\n    \n        \n            Name\n            \n        \n        \n            Image URL\n            \n        \n        \n            Quantity\n            \n        \n        \n            Limit\n            \n        \n    \n        \n\n\n\n    \n        \n            Cancel\n        \n        \n            = 0 && (limitInput >= 0 || !limitInput) && urlInput) || forceDisable\" \n            (click)=\"AddItem()\">Add Item\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add Item                        Name                                        Image URL                                        Quantity                                        Limit                                                        Cancel                            = 0 && (limitInput >= 0 || !limitInput) && urlInput) || forceDisable\"             (click)=\"AddItem()\">Add Item            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/alert.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                presentAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/alert.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentAlert(header: string, message: string, buttons: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:18\n                \n            \n\n\n            \n                \n                    Presents a generic alert that can be customized.\nThis is primary used for error handling.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Header for alert\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message for alert\n\n                                    \n                                \n                                \n                                    buttons\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Buttons for alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private alertController: AlertController) { }\n\n  /**\n   * Presents a generic alert that can be customized.\n   * This is primary used for error handling.\n   * @param header Header for alert\n   * @param message Message for alert\n   * @param buttons Buttons for alert\n   */\n  async presentAlert(header: string, message: string, buttons: any[]) {\n    const alert = await this.alertController.create({\n      header: header,\n      message: message,\n      buttons: buttons\n    })\n\n    await alert.present()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                currrentPage\n                            \n                            \n                                pubRouter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPage\n                            \n                            \n                                navigateToPage\n                            \n                            \n                                showPage\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPage\n                        \n                    \n                \n            \n            \n                \ngetPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToPage\n                        \n                    \n                \n            \n            \n                \nnavigateToPage(page: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPage\n                        \n                    \n                \n            \n            \n                \nshowPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currrentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pubRouter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { LoadingService } from './services/loading.service';\nimport { LoadingController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  currrentPage: string\n  pubRouter: Router\n  authService: AuthService\n\n  constructor(private router: Router) {\n    this.pubRouter = router\n  }\n\n  navigateToPage(page: string){\n    this.router.navigateByUrl(page)\n  }\n\n  \n  signOut() {\n    this.router.navigateByUrl(\"login\")\n  }\n\n  getPage(){\n    console.log(this.router.url)\n    return this.router.url\n  }\n\n  showPage(){\n    let page = this.router.url\n    console.log(page)\n    console.log(page !== '/login')\n    return (page !== '/login')\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n          Navigate To a Screen\n        \n      \n      \n        \n          \n            Home\n          \n          \n            Inventory Management\n          \n          \n            Order Management\n          \n          \n            User Management\n          \n          \n            Pantry Statistics\n          \n          \n            Profile and Instance Management\n          \n        \n      \n    \n    \n      \n        \n          \n            \n          \n          Food Pantry - Admin\n          Sign Out\n        \n      \n      \n     \n\n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                .menu-item {\n    cursor: pointer;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Navigate To a Screen                                                  Home                                Inventory Management                                Order Management                                User Management                                Pantry Statistics                                Profile and Instance Management                                                                                        Food Pantry - Admin          Sign Out                         '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, IonicModule.forRoot(), AppRoutingModule, BrowserAnimationsModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n  \n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './services/guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./home/home.module').then( m => m.HomePageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'forgot-password',\n    loadChildren: () => \"import('./forgot-password/forgot-password.module').then( m => m.ForgotPasswordPageModule)\"\n  },\n  {\n    path: 'inventory-management',\n    loadChildren: () => \"import('./inventory-management/inventory-management.module').then( m => m.InventoryManagementPageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'order-management',\n    loadChildren: () => \"import('./order-management/order-management.module').then( m => m.OrderManagementPageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'profile',\n    loadChildren: () => \"import('./profile/profile.module').then( m => m.ProfilePageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'pantry-statistics',\n    loadChildren: () => \"import('./pantry-statistics/pantry-statistics.module').then( m => m.PantryStatisticsPageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'user-management',\n    loadChildren: () => \"import('./user-management/user-management.module').then( m => m.UserManagementPageModule)\",\n    canActivate: [AuthGuard]\n  },\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guards/auth.guard.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { getAuth } from 'firebase/auth';\nimport 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router\n  ) {\n\n  }\n\n  /*\n    TODO: Make sure the logged in user is an admin!!!!!!!!!!!!!!\n  */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      return new Promise((resolve) => {\n        getAuth().onAuthStateChanged((user) => {\n          if (!user) {\n            this.router.navigateByUrl('login')\n          }\n          resolve(true);\n        });\n      });\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                    Async\n                                grantAdminAccess\n                            \n                            \n                                    Async\n                                revokeAdminAccess\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                    Static\n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        grantAdminAccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    grantAdminAccess(uid: string, pantry: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pantry\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        revokeAdminAccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    revokeAdminAccess(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(email: string, password: string, pantry: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pantry\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { \n  getAuth,\n  onAuthStateChanged,\n  signOut, \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword \n} from \"firebase/auth\"\n\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\nimport { LoadingService } from './loading.service';\nimport {authentication } from 'src/main';\nimport { Observable } from 'rxjs';\nimport { AlertService } from './alert.service';\n\nconst functions = getFunctions()\n\n//const auth = getAuth()\n\nconst auth = authentication\n\nonAuthStateChanged(auth, (user) => {\n  if (user) {\n    //user is signed in\n    const uid = user.uid\n  } else {\n    //No user signed in\n  }\n})\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private loadingService: LoadingService,\n    private alertService: AlertService\n  ) {\n\n   }\n\n   async getCurrentUser(): Promise {\n    return new Promise(async (resolve, reject) => {\n      const unsub = await auth.onAuthStateChanged(user => {\n        resolve(user)\n      }, reject)\n    })\n  }\n\n   async signIn(email: string, password: string, pantry: string) {\n    await this.loadingService.showLoader()\n    await signInWithEmailAndPassword(auth, email, password).then(async (userCred) => {\n      const isAdmin = httpsCallable(functions, 'isAdmin')\n      // let token = await userCred.user.getIdToken()\n      // let params = {\n      //   idToken: token\n      // }\n      await isAdmin({pantry: pantry}).then((res) => {\n        this.loadingService.dismissLoader()\n        //res.data will be true or false\n        let userIsAdmin = res.data\n        if(!userIsAdmin) {\n          this.signOut()\n          this.alertService.presentAlert('Login Failed', 'Please check your credentials and try again later.', ['Ok'])\n        }\n      })\n    }).catch((err) => {\n      this.alertService.presentAlert('Login Failed', 'Please check your credentials and try again later.', ['Ok'])\n      this.loadingService.dismissLoader()\n    })\n   }\n\n   signOut() {\n    signOut(auth)\n   }\n\n   static signOut() {\n    signOut(auth)\n   }\n\n   async grantAdminAccess(uid: string, pantry: string) {\n    const grantAdmin = httpsCallable(functions, 'makeAdmin')\n    let params = {\n      user: uid,\n      pantryName: pantry\n    }\n    await grantAdmin(params).catch((err) => {\n      this.alertService.presentAlert('Error', 'Could not modify permissions. Please try again later.', ['Ok'])\n    })\n   }\n\n   async revokeAdminAccess(uid: string) {\n    const revokeAdmin = httpsCallable(functions, 'revokeAdmin')\n    let params = {\n      user: uid\n    }\n    await revokeAdmin(params).catch((err) => {\n      this.alertService.presentAlert('Error', 'Could not modify permissions. Please try again later.', ['Ok'])\n    })\n   }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditDetailsDialog.html":{"url":"components/EditDetailsDialog.html","title":"component - EditDetailsDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditDetailsDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-details-dialog\n            \n\n\n\n\n            \n                templateUrl\n                edit-details-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                address\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                maxOrder\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                primary\n                            \n                            \n                                    Public\n                                secondary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveData\n                            \n                            \n                                updateColors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Pantry, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.page.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Pantry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveData\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:89\n                \n            \n\n\n            \n                \n                    Saves the pantry data that is changed in the edit dialog\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateColors\n                        \n                    \n                \n            \n            \n                \nupdateColors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:119\n                \n            \n\n\n            \n                \n                    Updates UI Colors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.address\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pantry\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.desc\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.logoUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        maxOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.data.orderLimit\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.name\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.primaryColor\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        secondary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.secondaryColor\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { FirebaseService } from '../services/firebase.service';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { IonContent } from '@ionic/angular';\nimport { AlertService } from '../services/alert.service';\n\n/**\n * Pantry profile/instance management page\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  pantry: Pantry = new Pantry('id', 'name', 'desc', 'address', 'logo', 'red', 'black', 2, [], [], [])\n  @ViewChild (MatMenuTrigger) actions: MatMenuTrigger\n\n  @ViewChild('iContent', {static: true})\n  private iContentRef: ElementRef\n  private iConStyle: CSSStyleDeclaration\n  constructor(\n    private firebase: FirebaseService,\n    public dialog: MatDialog,\n    private alertService: AlertService\n  ) { }\n\n  /**\n   * Gets pantry data on page init\n   */\n  async ngOnInit() {\n    try {\n      this.pantry = await this.firebase.getPantry()\n      console.log(this.pantry)\n      this.updateColors()\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n  }\n\n  /**\n   * Opens the Pantry edit dialog\n   * @param data Pantry to Edit\n   */\n  openEditDetailsDialog(data: Pantry){\n    const dialogRef = this.dialog.open(EditDetailsDialog, {restoreFocus: false, data: data});\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n    });\n  }\n\n  /**\n   * Updates UI Colors\n   */\n  updateColors(){\n    document.body.style.setProperty('--ion-color-primary', this.pantry.primaryColor)\n    document.body.style.setProperty('--ion-color-primary-contrast', this.pantry.secondaryColor)\n  }\n\n}\n\n@Component({\n  selector: 'edit-details-dialog',\n  templateUrl: 'edit-details-dialog.html'\n}) export class EditDetailsDialog implements OnInit {\n  public name: string = this.data.name\n  public description: string = this.data.desc\n  public address: string = this.data.address\n  public icon: string = this.data.logoUrl\n  public primary: string = this.data.primaryColor\n  public secondary: string = this.data.secondaryColor\n  public maxOrder: number = this.data.orderLimit\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Pantry,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n  ){}\n\n  ngOnInit(): void {\n    // console.log(this.data)\n  }\n\n  /**\n   * Saves the pantry data that is changed in the edit dialog\n   */\n  async saveData(){\n    let pantry: Pantry = {\n      \"name\": this.name,\n      \"id\": this.data.id,\n      \"desc\": this.description,\n      \"address\": this.address,\n      \"logoUrl\": this.icon,\n      \"primaryColor\": this.primary,\n      \"secondaryColor\": this.secondary,\n      \"orderLimit\": this.maxOrder\n    }\n    this.data.name = this.name\n    this.data.desc = this.description\n    this.data.address = this.address\n    this.data.logoUrl = this.icon\n    this.data.primaryColor = this.primary\n    this.data.secondaryColor = this.secondary\n    this.data.orderLimit = this.maxOrder\n    try {\n      await this.firebaseService.updatePantry(pantry)\n      this.updateColors()\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n  /**\n   * Updates UI Colors\n   */\n  updateColors(){\n    document.body.style.setProperty('--ion-color-primary', this.data.primaryColor)\n    document.body.style.setProperty('--ion-color-primary-contrast', this.data.secondaryColor)\n  }\n\n}\n\n    \n\n    \n        Edit Pantry Details\n\n\n        \n            Pantry Name\n            \n                \n            \n            Description\n            \n                \n            \n            Address\n            \n                \n            \n            Logo Url\n            \n                \n            \n            Weekly Max Orders\n            \n                \n            \n            Primary Color\n            \n            Secondary Color\n            \n        \n\n\n\n    \n        \n            Cancel\n        \n        \n            Save\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Edit Pantry Details                    Pantry Name                                                    Description                                                    Address                                                    Logo Url                                                    Weekly Max Orders                                                    Primary Color                        Secondary Color                                            Cancel                            Save            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditDetailsDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditDialog.html":{"url":"components/EditDialog.html","title":"component - EditDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventory-management/inventory-management.page.ts\n\n\n\n    \n        Description\n    \n    \n        Edit dialog that will be used in this page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-dialog\n            \n\n\n\n\n            \n                templateUrl\n                edit-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cancelItem\n                            \n                            \n                                    Private\n                                cancelLimit\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                nameInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                addLimit\n                            \n                            \n                                cancelData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeItem\n                            \n                            \n                                removeLimit\n                            \n                            \n                                    Async\n                                saveData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: FoodItem, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventory-management/inventory-management.page.ts:202\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    FoodItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:217\n                \n            \n\n\n            \n                \n                    increments item quantity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to increment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addLimit\n                        \n                    \n                \n            \n            \n                \naddLimit(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:235\n                \n            \n\n\n            \n                \n                    increments and items's limit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem that will have limit modifed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelData\n                        \n                    \n                \n            \n            \n                \ncancelData(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:276\n                \n            \n\n\n            \n                \n                    Discards changes made to food item. Called when Cancel is pressed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to discard changes for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:226\n                \n            \n\n\n            \n                \n                    decrements item quantity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to decrement\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeLimit\n                        \n                    \n                \n            \n            \n                \nremoveLimit(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:249\n                \n            \n\n\n            \n                \n                    decrements and item's limit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem that will have limit modified\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveData\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveData(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:263\n                \n            \n\n\n            \n                \n                    Updates DB info for an item. Called when item changes are saved\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to update in database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cancelItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:205\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cancelLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FoodItem\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:203\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.name\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:208\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog, } from '@angular/material/dialog';\nimport { AlertController, } from '@ionic/angular';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { LoadingService } from '../services/loading.service';\n\n\n/**\n * Inventory management page\n */\n@Component({\n  selector: 'inventory-management',\n  templateUrl: './inventory-management.page.html',\n  styleUrls: ['./inventory-management.page.scss'],\n})\nexport class InventoryManagementPage implements AfterViewInit{\n  \n\n  displayedColumns: string[] = ['name', 'quantity', 'limit', 'actions'];\n  records: MatTableDataSource\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n\n  static addDialogRef: any\n\n  constructor(\n    public dialog: MatDialog,\n    private alertController: AlertController,\n    private firebaseService: FirebaseService,\n    ) { }\n\n  async ngOnInit() {    \n    \n  }\n\n  /**\n   * Updates the data source of the table\n   */\n  async updateTableSource() {\n    let data = await this.firebaseService.getInventory()\n    this.records = new MatTableDataSource(data)\n    this.length = this.records.data.length;\n    this.records.paginator = this.paginator;\n    this.records.sort = this.sort;\n  }\n  async ngAfterViewInit() {\n    await this.updateTableSource()\n  }\n\n  /**\n   * Updates the tables based on the filter\n   * @param event event emited by the filter input\n   */\n  updateFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n  /**\n   * Removes an item from the table\n   * @param item FoodItem to remove\n   */\n  async removeItem(item: FoodItem) {\n    //find the index from id\n    await this.firebaseService.removeItem(item)\n    let removed = this.records.data.splice(this.records.data.indexOf(item), 1)\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n \n  /**\n   * Opens an alert to confirm if a user wants to remove an item\n   * @param item FoodItem to remove\n   */\n  async openAlert(item: FoodItem){\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {}\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(item)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param item FoodItem to edit\n   */\n   openEditDialog(item: FoodItem){\n    const dialogRef = this.dialog.open(EditDialog, {restoreFocus: false, data: item});\n    dialogRef.afterClosed().subscribe( () => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * opens the add item dialog\n   */\n   async openAddDialog(){\n    const dialogRef = this.dialog.open(AddDialog, {restoreFocus: false});\n    InventoryManagementPage.addDialogRef = dialogRef\n    dialogRef.afterClosed().subscribe( () => {\n      this.updateTableSource()\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    })\n  }\n\n  /**\n   * Closes the add dialog\n   */\n  static async closeAddDialog() {\n    await InventoryManagementPage.addDialogRef.close()\n  }\n\n}\n\n/**\n * Add item dialog that will be used in this page\n */\n@Component({\n  selector: 'add-dialog',\n  templateUrl: 'add-dialog.html'\n})\nexport class AddDialog implements OnInit {\n  nameInput: string\n  quantityInput: number\n  limitInput: number\n  urlInput: string\n  forceDisable = false\n  constructor(\n    private firebaseService: FirebaseService,\n    private loadingService: LoadingService\n    ){}\n  ngOnInit(): void {\n      \n  }\n\n  /**\n   * Adds item to the UI table and the DB\n   */\n  async AddItem(){\n    this.forceDisable = true\n    //write to db or something idk\n    if(!this.limitInput) {\n      this.limitInput = 0\n    }\n    let item: FoodItem = {\n      id: this.nameInput.toLowerCase(),\n      name: this.nameInput,\n      quantity: this.quantityInput,\n      limit: this.limitInput,\n      imageUrl: this.urlInput\n    }\n    console.log(item)\n    await this.firebaseService.addItem(item).then(() => {\n      InventoryManagementPage.closeAddDialog()\n      this.forceDisable = false\n    }).catch((err) => {\n      this.forceDisable = false\n    })\n    this.forceDisable = false\n  }\n}\n\n/**\n * Edit dialog that will be used in this page\n */\n@Component({\n  selector: 'edit-dialog',\n  templateUrl: 'edit-dialog.html'\n})\nexport class EditDialog implements OnInit{\n  constructor(@Inject(MAT_DIALOG_DATA) public data: FoodItem,\n  private firebaseService: FirebaseService){}\n  private cancelItem = 0;\n  private cancelLimit = 0;\n  //private name = this.data.name;\n  nameInput: string = this.data.name\n  ngOnInit() {\n    console.log(this.data)\n  }\n\n  /**\n   * increments item quantity\n   * @param item FoodItem to increment\n   */\n  addItem(item: FoodItem){\n    item.quantity = item.quantity + 1;\n    this.cancelItem = this.cancelItem - 1;\n  }\n\n  /**\n   * decrements item quantity\n   * @param item FoodItem to decrement\n   */\n  removeItem(item: FoodItem){\n    item.quantity = item.quantity - 1;\n    this.cancelItem = this.cancelItem + 1;\n  }\n\n  /**\n   * increments and items's limit\n   * @param item FoodItem that will have limit modifed\n   */\n  addLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit + 1\n      this.cancelLimit = this.cancelLimit - 1\n    } else {\n      item.limit = 1\n      this.cancelLimit = this.cancelLimit - 1\n    }\n  }\n\n  /**\n   * decrements and item's limit\n   * @param item FoodItem that will have limit modified\n   */\n  removeLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit - 1;\n      this.cancelLimit = this.cancelLimit + 1\n    } else if(item.limit == 1) {\n      item.limit = undefined;\n      this.cancelLimit = this.cancelLimit + 1\n    }\n  }\n\n  /**\n   * Updates DB info for an item. Called when item changes are saved\n   * @param item FoodItem to update in database\n   */\n  async saveData(item: FoodItem){\n    //write to db\n    console.log(this.nameInput)\n    if(this.nameInput != \"\"){\n      item.name = this.nameInput\n    }\n    await this.firebaseService.updateInventoryItem(item)\n  }\n\n  /**\n   * Discards changes made to food item. Called when Cancel is pressed\n   * @param item FoodItem to discard changes for\n   */\n  cancelData(item: FoodItem){\n    item.quantity = item.quantity + this.cancelItem;\n    if(item.limit){\n      item.limit = item.limit + this.cancelLimit\n      if(item.limit == 0){\n        item.limit = undefined\n      }\n    }\n  }\n}\n    \n\n    \n        {{data.name}}\n\n    If an item has no limit, use the buttons to add one.\n    \n        \n            Name:\n            \n                \n            \n        \n        \n            Quantity: {{data.quantity}}\n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n        \n        \n            \n                Limit: {{data.limit}}\n            \n            \n                Limit: None\n            \n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n        \n    \n\n\n    \n        \n            \n                Close\n            \n            \n                Save\n            \n        \n    \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.name}}    If an item has no limit, use the buttons to add one.                        Name:                                                                    Quantity: {{data.quantity}}                                                                                                                                                                                                    Limit: {{data.limit}}                                        Limit: None                                                                                                                                                                                                                        Close                                        Save                              '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditOrderDialog.html":{"url":"components/EditOrderDialog.html","title":"component - EditOrderDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditOrderDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-management/order-management.page.ts\n\n\n\n    \n        Description\n    \n    \n        Edit order dialog that will be used on this page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-order-dialog\n            \n\n\n\n\n            \n                templateUrl\n                edit-order-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                enumvals\n                            \n                            \n                                value\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEnumKey\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Order, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-management/order-management.page.ts:169\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Order\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEnumKey\n                        \n                    \n                \n            \n            \n                \ngetEnumKey(status: OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:186\n                \n            \n\n\n            \n                \n                    Converts the numerical order status to the coresponding string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        OrderStatus to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        String representaion of OrderStatus\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveOrder(data: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:194\n                \n            \n\n\n            \n                \n                    Saves the changes made to an order in the DB (mainly order status)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to update in the DB\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enumvals\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(OrderStatus).filter((v) => !isNaN(Number(v)))\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:168\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.getEnumKey(this.data.status)\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(OrderStatus).filter((v) => isNaN(Number(v)))\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:167\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Order } from '../../../../globalModels/order';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { AlertController } from '@ionic/angular';\nimport { Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { Observable, from } from 'rxjs';\nimport { AlertService } from '../services/alert.service';\n\n/**\n * Order management page\n */\n@Component({\n  selector: 'app-order-management',\n  templateUrl: './order-management.page.html',\n  styleUrls: ['./order-management.page.scss'],\n})\n\nexport class OrderManagementPage implements AfterViewInit {\n\n  displayedColumns: string[] = ['timestamp', 'id', 'status', 'actions'];\n  records: MatTableDataSource = new MatTableDataSource([]);\n\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatTable, { static: true }) table: MatTable;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n  constructor(\n    public dialog: MatDialog,\n    private firebase: FirebaseService,\n    private alertController: AlertController,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async ionViewWillEnter() {\n\n  }\n\n  /**\n   * Retrieves orders from the DB and initalizes table.\n   */\n  async ngAfterViewInit() {\n    try {\n      let orders = await this.firebase.getOrders()\n      // orders.sort(function(a, b){\n      //   return b.timestamp.getDate() - a.timestamp.getDate()\n      // })\n      this.records.data = orders\n      this.length = this.records.data.length\n      this.records.paginator = this.paginator;\n      this.records.sort = this.sort;\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n\n  /**\n   * Updates the table based on the value in the filter input\n   * @param event Event emited by filter changing\n   */\n  updateFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Removes an order from the table\n   * @param order Order to be removed\n   */\n  removeItem(order: Order) {\n    //find the index from id\n    let removed = this.records.data.splice(this.records.data.indexOf(order), 1)\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n\n  /**\n   * Opens an alert for the user for confirm if they want to remove an order\n   * @param order Order to be removed\n   */\n  async openAlert(order: Order) {\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => { }\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(order)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param order Order to edit\n   */\n  openEditDialog(order: Order) {\n    const dialogRef = this.dialog.open(EditOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * Opens the order view dialog\n   * @param order Order to view\n   */\n  openViewDialog(order: Order) {\n    const dialogRef = this.dialog.open(ViewOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n}\n\n/**\n * Edit order dialog that will be used on this page\n */\n@Component({\n  selector: 'edit-order-dialog',\n  templateUrl: 'edit-order-dialog.html'\n})\n\nexport class EditOrderDialog implements OnInit {\n  values = Object.values(OrderStatus).filter((v) => isNaN(Number(v)))\n  enumvals = Object.values(OrderStatus).filter((v) => !isNaN(Number(v)))\n  value = this.getEnumKey(this.data.status)\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n\n  ngOnInit() {\n\n    // console.log(this.values)\n    // console.log(this.enumvals)\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getEnumKey(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Saves the changes made to an order in the DB (mainly order status)\n   * @param data Order to update in the DB\n   */\n  async saveOrder(data: Order) {\n    console.log(this.value)\n    data.status = this.values.indexOf(this.value) + 1\n    console.log(data.status)\n    try {\n      this.firebaseService.updateOrderStatus(data, data.status)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update order status. Please try again later.', ['Ok'])\n    }\n    \n  }\n}\n\n/**\n * View order dialog that will be used on this page\n */\n@Component({\n  selector: 'view-order-dialog',\n  templateUrl: 'view-order-dialog.html'\n})\nexport class ViewOrderDialog implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order) { }\n  ngOnInit() {\n\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n}\n    \n\n    \n        Order Number: {{data.id}}\n\n    \n        General\n        Order Number: {{data.id}}\n        Timestamp: {{data.timestamp.toLocaleString()}}\n        \n            \n                Status\n                \n                    \n                        {{status}}\n                    \n                \n            \n        \n        \n        \n            \n                Order Contents:\n                \n                    \n                        \n                            \n                                {{item.name}}, {{item.quantity}}\n                            \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        \n            Cancel\n        \n        \n            Save\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Order Number: {{data.id}}            General        Order Number: {{data.id}}        Timestamp: {{data.timestamp.toLocaleString()}}                                    Status                                                            {{status}}                                                                                                    Order Contents:                                                                                                                        {{item.name}}, {{item.quantity}}                                                                                                                                                                    Cancel                            Save            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditOrderDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseService.html":{"url":"injectables/FirebaseService.html","title":"injectable - FirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pantryId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addItem\n                            \n                            \n                                    Async\n                                demoteUser\n                            \n                            \n                                foodItemConv\n                            \n                            \n                                    Async\n                                getInventory\n                            \n                            \n                                    Async\n                                getOrderItems\n                            \n                            \n                                    Async\n                                getOrders\n                            \n                            \n                                    Async\n                                getPantries\n                            \n                            \n                                    Async\n                                getPantry\n                            \n                            \n                                getPantryId\n                            \n                            \n                                    Async\n                                getPerms\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                orderConv\n                            \n                            \n                                pantryConv\n                            \n                            \n                                    Async\n                                promoteUser\n                            \n                            \n                                    Async\n                                removeItem\n                            \n                            \n                                    Async\n                                updateInventoryItem\n                            \n                            \n                                    Async\n                                updateOrderStatus\n                            \n                            \n                                    Async\n                                updatePantry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/firebase.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    addItem(itemToAdd: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:218\n                \n            \n\n\n            \n                \n                    Adds a new item to the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    itemToAdd\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to add to the database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        demoteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    demoteUser(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:386\n                \n            \n\n\n            \n                \n                    Removes a specific user's admin perms\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        UID of user to be demoted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        result of revokeAdmin cloud function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        foodItemConv\n                        \n                    \n                \n            \n            \n                \nfoodItemConv(snap: DocumentSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:138\n                \n            \n\n\n            \n                \n                    Converts Firebase Snapshot into Food Item Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    snap\n                                    \n                                            DocumentSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Firebase representation of a food item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        FoodItem object representaion of parameter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getInventory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInventory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:108\n                \n            \n\n\n            \n                \n                    Retrieves the inventory from the firebase database\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise containing an array of FoodItem Objects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOrderItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrderItems(order: DocumentSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:180\n                \n            \n\n\n            \n                \n                    Retireves items from a particular order\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            DocumentSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        DocumentSnapshot to retrives items from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise containing an array of FoodItem Objects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOrders\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:147\n                \n            \n\n\n            \n                \n                    Retrieves all orders for a pantry\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise containing an array of Order Objects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPantries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPantries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:43\n                \n            \n\n\n            \n                \n                    Retrieves all pantries that are currently in the database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise containing an array of all available Pantries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPantry\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPantry()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:76\n                \n            \n\n\n            \n                \n                    Retrieves Pantry Data from firebase database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise that contains the Pantry Data from the database\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPantryId\n                        \n                    \n                \n            \n            \n                \ngetPantryId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:68\n                \n            \n\n\n            \n                \n                    Retrieves the pantry's DB id\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The pantry Id that is intialized on login\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPerms\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPerms(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:351\n                \n            \n\n\n            \n                \n                    Retrieves a user's premission from the authentication database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User to retrieve permissions for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        An dictionary containing the user's custom claims in firebase\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:329\n                \n            \n\n\n            \n                \n                    Retrieves all users for the pantry that the user is currently logged into\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise containing an array of users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        orderConv\n                        \n                    \n                \n            \n            \n                \n                    \n                    orderConv(snap: DocumentSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:205\n                \n            \n\n\n            \n                \n                    Converts Document Snapshot into an Order Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    snap\n                                    \n                                            DocumentSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        DocumentSnapshot with order data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Order Object that contains the data from the parameter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pantryConv\n                        \n                    \n                \n            \n            \n                \npantryConv(snapshot: DocumentSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:99\n                \n            \n\n\n            \n                \n                    Converts Firebase Snapshot into Pantry Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    snapshot\n                                    \n                                            DocumentSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Firebase Document Snapshot of Pantry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Pantry Object representaion of parameter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        promoteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    promoteUser(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:368\n                \n            \n\n\n            \n                \n                    Grants a specific user admin perms\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        UID if the user to be promoted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        the result of the makeAdmin cloud function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(itemToRemove: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:268\n                \n            \n\n\n            \n                \n                    Removes a food item from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    itemToRemove\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to remove from the DB\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateInventoryItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInventoryItem(itemToUpdate: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:247\n                \n            \n\n\n            \n                \n                    Updates a FoodItem in the inventory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    itemToUpdate\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem that is the item to update in the inventory\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOrderStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOrderStatus(order: Order, newStatus: OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:285\n                \n            \n\n\n            \n                \n                    Updates an order\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order object to update in DB\n\n                                    \n                                \n                                \n                                    newStatus\n                                    \n                                            OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Integer status to change the order status to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePantry\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePantry(pantry: Pantry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:304\n                \n            \n\n\n            \n                \n                    Updates Pantry details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pantry\n                                    \n                                                Pantry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pantry object to update in DB\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pantryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/firebase.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/firebase.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { getFirestore, collection, addDoc, updateDoc, getDocs, getDoc, QuerySnapshot, DocumentSnapshot, doc, setDoc, deleteDoc } from 'firebase/firestore'\n\nimport { FoodItem } from '../../../../globalModels/foodItem'\nimport { Order } from '../../../../globalModels/order'\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\n\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\nimport { User } from '../../../../globalModels/user';\nimport { LoadingService } from './loading.service';\n\nconst functions = getFunctions()\n\nconst db = getFirestore()\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  //This will be used to determine which pantry instance is accessed\n  //TODO: update/change this when the user logs in\n  userId = ''\n  pantryId = ''\n\n  constructor(\n    private loadingService: LoadingService\n  ) {\n    let temp = sessionStorage.getItem('uid')\n    let temp2 = sessionStorage.getItem('pantryId')\n    if (temp != null && temp2 != null) {\n      this.userId = temp\n      this.pantryId = temp2\n    }\n  }\n\n  /**\n   * Retrieves all pantries that are currently in the database\n   * @returns A promise containing an array of all available Pantries\n   */\n  async getPantries(): Promise {\n    await this.loadingService.showLoader()\n    let snapshot = undefined\n    try {\n      snapshot = await getDocs(collection(db, 'pantries'))\n    } catch (error) {\n      this.loadingService.dismissLoader()\n      throw error\n    }\n    if (snapshot == undefined) {\n      this.loadingService.dismissLoader()\n      throw Error('No Pantries Found')\n    }\n    var toReturn: Pantry[] = []\n    snapshot.forEach((pantry) => {\n      toReturn.push(this.pantryConv(pantry))\n    })\n    this.loadingService.dismissLoader()\n    return toReturn\n  }\n\n  /**\n   * Retrieves the pantry's DB id\n   * @returns The pantry Id that is intialized on login\n   */\n  getPantryId() {\n    return this.pantryId\n  }\n\n  /**\n   * Retrieves Pantry Data from firebase database\n   * @returns Promise that contains the Pantry Data from the database\n   */\n  async getPantry(): Promise {\n    await this.loadingService.showLoader()\n    let snapshot = undefined;\n    try {\n      snapshot = await getDoc(doc(db, 'pantries/' + this.pantryId))\n    } catch (error) {\n      this.loadingService.dismissLoader()\n      throw (error)\n    }\n    if (snapshot == undefined) {\n      this.loadingService.dismissLoader()\n      throw Error('Food Pantry does not exist')\n    }\n    this.loadingService.dismissLoader()\n    return this.pantryConv(snapshot)\n\n  }\n\n  /**\n   * Converts Firebase Snapshot into Pantry Object\n   * @param snapshot Firebase Document Snapshot of Pantry\n   * @returns Pantry Object representaion of parameter\n   */\n  pantryConv(snapshot: DocumentSnapshot) {\n    let data = snapshot.data()!\n    return new Pantry(snapshot.id, data['name'], data['description'], data['address'], data['logoUrl'], data['primaryColor'], data['secondaryColor'], data['orderLimit'])\n  }\n\n  /**\n   * Retrieves the inventory from the firebase database\n   * @returns Promise containing an array of FoodItem Objects\n   */\n  async getInventory(): Promise {\n    await this.loadingService.showLoader()\n    let snapshot = undefined;\n    try {\n      snapshot = await getDocs(collection(db, \"pantries/\" + this.pantryId + \"/inventory/\"))\n    } catch (error) {\n      //throw error to outer page\n      this.loadingService.dismissLoader()\n      throw error\n    }\n    if (snapshot == undefined) {\n      this.loadingService.dismissLoader()\n      throw Error('No Data Found')\n    }\n    \n    let toReturn: FoodItem[] = []\n    snapshot.forEach((doc) => {\n      if (doc.exists()) {\n        toReturn.push(this.foodItemConv(doc))\n      }\n    })\n    this.loadingService.dismissLoader()\n    return toReturn\n  }\n\n  /**\n   * Converts Firebase Snapshot into Food Item Object\n   * @param snap Firebase representation of a food item\n   * @returns FoodItem object representaion of parameter\n   */\n  foodItemConv(snap: DocumentSnapshot) {\n    let docData = snap.data()!\n    return new FoodItem(snap.id, docData['name'], docData['quantity'], docData['orderQuan'], docData['limit'], docData['imageUrl'])\n  }\n\n  /**\n   * Retrieves all orders for a pantry\n   * @returns A Promise containing an array of Order Objects\n   */\n  async getOrders(): Promise {\n    await this.loadingService.showLoader()\n    let snapshot = undefined;\n    try {\n      snapshot = await getDocs(collection(db, \"pantries/\" + this.pantryId + \"/orders/\"))\n    } catch (error) {\n      this.loadingService.dismissLoader()\n      //throw error to outer page\n      throw error\n    }\n    if (snapshot == undefined) {\n      this.loadingService.dismissLoader()\n      throw Error('No Data Found')\n    }\n\n    let toReturn: Order[] = []\n\n    for (let doc of snapshot.docs) {\n      if (doc.exists()) {\n        let toAdd = await this.orderConv(doc)\n        toReturn.push(toAdd)\n      }\n    }\n    this.loadingService.dismissLoader()\n    // console.log('returning from orders')\n    return toReturn\n  }\n\n  /**\n   * Retireves items from a particular order\n   * @param order DocumentSnapshot to retrives items from\n   * @returns Promise containing an array of FoodItem Objects\n   */\n  async getOrderItems(order: DocumentSnapshot): Promise {\n    let snapshot = undefined\n    let orderPath = order.ref.path\n    try {\n      snapshot = await getDocs(collection(db, orderPath + '/items'))\n    } catch (error) {\n      throw error\n    }\n    if (snapshot == undefined) {\n      throw Error('No Data Found')\n    }\n\n    let toReturn: FoodItem[] = []\n    snapshot.forEach((item) => {\n      toReturn.push(this.foodItemConv(item))\n    })\n    // console.log('return from getOrderItems')\n    return toReturn\n  }\n\n  /**\n   * Converts Document Snapshot into an Order Object\n   * @param snap DocumentSnapshot with order data\n   * @returns Order Object that contains the data from the parameter\n   */\n  async orderConv(snap: DocumentSnapshot) {\n    let docData = snap.data()!\n    let items: FoodItem[] = []\n    //TODO: actually pull for items for order\n    items = await this.getOrderItems(snap)\n    // console.log('return from order conv')\n    return new Order(snap.id, docData['date'], docData['status'], docData['uid'], items)\n  }\n\n  /**\n   * Adds a new item to the database\n   * @param itemToAdd FoodItem to add to the database\n   */\n  async addItem(itemToAdd: FoodItem) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId + '/inventory/' + itemToAdd.id)\n    let snapshot = await getDoc(docRef)\n    if (snapshot.exists()) {\n      console.log('calling-dismiss')\n      this.loadingService.dismissLoader()\n      throw Error('Item already exists')\n    }\n    try {\n      await setDoc(docRef, {\n        imageUrl: itemToAdd.imageUrl,\n        limit: itemToAdd.limit,\n        name: itemToAdd.name,\n        quantity: itemToAdd.quantity\n      })\n    } catch (err) {\n      console.log('calling-dismiss')\n      this.loadingService.dismissLoader()\n      throw err\n    }\n    console.log('calling-dismiss')\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Updates a FoodItem in the inventory\n   * @param itemToUpdate FoodItem that is the item to update in the inventory\n   */\n  async updateInventoryItem(itemToUpdate: FoodItem) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId + '/inventory/' + itemToUpdate.id)\n    let snapshot = await getDoc(docRef)\n    if (snapshot.exists()) {\n      await updateDoc(docRef, {\n        name: itemToUpdate.name,\n        limit: itemToUpdate.limit,\n        quantity: itemToUpdate.quantity\n      })\n    } else {\n      this.loadingService.dismissLoader()\n      throw Error('Item does not exist!')\n    }\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Removes a food item from the database\n   * @param itemToRemove FoodItem to remove from the DB\n   */\n  async removeItem(itemToRemove: FoodItem) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId + '/inventory/' + itemToRemove.id)\n    try {\n      await deleteDoc(docRef)\n    } catch (err) {\n      this.loadingService.dismissLoader()\n      throw err\n    }\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Updates an order\n   * @param order Order object to update in DB \n   * @param newStatus Integer status to change the order status to\n   */\n  async updateOrderStatus(order: Order, newStatus: OrderStatus) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId + '/orders/' + order.id)\n    let snapshot = await getDoc(docRef)\n    if (snapshot.exists()) {\n      await updateDoc(docRef, {\n        status: newStatus\n      })\n    } else {\n      this.loadingService.dismissLoader()\n      throw Error('Order does not exist!')\n    }\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Updates Pantry details\n   * @param pantry Pantry object to update in DB\n   */\n  async updatePantry(pantry: Pantry) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId)\n    let snapshot = await getDoc(docRef)\n    if (snapshot.exists()) {\n      await updateDoc(docRef, {\n        address: pantry.address,\n        description: pantry.desc,\n        logoUrl: pantry.logoUrl,\n        name: pantry.name,\n        orderLimit: pantry.orderLimit,\n        primaryColor: pantry.primaryColor,\n        secondaryColor: pantry.secondaryColor\n      })\n    } else {\n      this.loadingService.dismissLoader()\n      throw Error('pantry does not exist!')\n    }\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Retrieves all users for the pantry that the user is currently logged into\n   * @returns A promise containing an array of users\n   */\n  async getUsers(): Promise {\n    await this.loadingService.showLoader()\n    const getUsers = httpsCallable(functions, 'getUsers')\n    return getUsers().then(async (result: any) => {\n      var userArr: User[] = []\n      let users = result.data.users\n      for (let user of users) {\n        let toAdd = new User(user.uid, user.email, user.uid)\n        toAdd.perms = await this.getPerms(toAdd)\n        userArr.push(toAdd)\n      }\n      userArr.reverse()\n      this.loadingService.dismissLoader()\n      return userArr\n    })\n  }\n\n  /**\n   * Retrieves a user's premission from the authentication database\n   * @param user User to retrieve permissions for\n   * @returns An dictionary containing the user's custom claims in firebase\n   */\n  async getPerms(user: User) {\n    console.log('calling getPerms')\n    const getPerms = httpsCallable(functions, 'getPerms')\n    let params = {\n      email: user.email\n    }\n    return getPerms(params).then((res: any) => {\n      let perms = res.data\n      return perms\n    })\n  }\n\n  /**\n   * Grants a specific user admin perms\n   * @param uid UID if the user to be promoted\n   * @returns the result of the makeAdmin cloud function\n   */\n  async promoteUser(uid: string) {\n    await this.loadingService.showLoader()\n    const makeAdmin = httpsCallable(functions, 'makeAdmin')\n    let params = {\n      user: uid,\n      pantryName: this.pantryId\n    }\n    return makeAdmin(params).then(() => {\n      console.log('done with edit')\n      this.loadingService.dismissLoader()\n    })\n  }\n\n  /**\n   * Removes a specific user's admin perms\n   * @param uid UID of user to be demoted\n   * @returns result of revokeAdmin cloud function\n   */\n  async demoteUser(uid: string) {\n    await this.loadingService.showLoader()\n    const revokeAdmin = httpsCallable(functions, 'revokeAdmin')\n    let params = {\n      user: uid\n    }\n    return revokeAdmin(params).then(() => {\n      this.loadingService.dismissLoader()\n    })\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordPage.html":{"url":"components/ForgotPasswordPage.html","title":"component - ForgotPasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forgot-password/forgot-password.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/forgot-password/forgot-password.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forgot-password/forgot-password.page.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      Forgot you password?\n      Enter you email below to recieve a password reset link.\n      \n        Email\n        \n      \n      Send Password Reset Email\n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.page.scss\n                \n                .container {\n    margin-top: 4em;\n    align-self: center;\n }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Forgot you password?      Enter you email below to recieve a password reset link.              Email                    Send Password Reset Email      '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForgotPasswordPageModule.html":{"url":"modules/ForgotPasswordPageModule.html","title":"module - ForgotPasswordPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ForgotPasswordPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ForgotPasswordPageModule\n\n\n\ncluster_ForgotPasswordPageModule_imports\n\n\n\ncluster_ForgotPasswordPageModule_declarations\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\n\n\nForgotPasswordPageModule\n\nForgotPasswordPageModule\n\nForgotPasswordPageModule -->\n\nForgotPasswordPage->ForgotPasswordPageModule\n\n\n\n\n\nForgotPasswordPageRoutingModule\n\nForgotPasswordPageRoutingModule\n\nForgotPasswordPageModule -->\n\nForgotPasswordPageRoutingModule->ForgotPasswordPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forgot-password/forgot-password.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForgotPasswordPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ForgotPasswordPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ForgotPasswordPageRoutingModule\n  ],\n  declarations: [ForgotPasswordPage]\n})\nexport class ForgotPasswordPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForgotPasswordPageRoutingModule.html":{"url":"modules/ForgotPasswordPageRoutingModule.html","title":"module - ForgotPasswordPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ForgotPasswordPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forgot-password/forgot-password-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotPasswordPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.page.ts\n\n\n\n    \n        Description\n    \n    \n        Landing page for the admin app\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logoUrl\n                            \n                            \n                                pantry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.page.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.page.ts:23\n                \n            \n\n\n            \n                \n                    Init method retrieves the pantry so the patry name and logo can be set\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.page.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pantry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pantry\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.page.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Pantry } from '../../../../globalModels/pantry';\n\n/**\n * Landing page for the admin app\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  pantry: Pantry\n  logoUrl: string\n  constructor(\n    private firebaseService: FirebaseService\n  ) {}\n\n  /**\n   * Init method retrieves the pantry so the patry name and logo can be set\n   */\n    async ngOnInit() {\n      this.pantry = await this.firebaseService.getPantry()\n      this.logoUrl = this.pantry.logoUrl\n    }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    {{pantry.name}} Admin App\n    \n    Use the hamburger menu to manage your application\n  \n\n    \n\n    \n                \n                    home.page.scss\n                \n                #container {\n  text-align: center;\n\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n\n  color: #8c8c8c;\n\n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{pantry.name}} Admin App        Use the hamburger menu to manage your application  '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InventoryManagementPage.html":{"url":"components/InventoryManagementPage.html","title":"component - InventoryManagementPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InventoryManagementPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventory-management/inventory-management.page.ts\n\n\n\n    \n        Description\n    \n    \n        Inventory management page\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                inventory-management\n            \n\n            \n                styleUrls\n                ./inventory-management.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./inventory-management.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Static\n                                addDialogRef\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                length\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                records\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                closeAddDialog\n                            \n                            \n                                    Async\n                                ngAfterViewInit\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                openAddDialog\n                            \n                            \n                                    Async\n                                openAlert\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                    Async\n                                removeItem\n                            \n                            \n                                updateFilter\n                            \n                            \n                                    Async\n                                updateTableSource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, alertController: AlertController, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventory-management/inventory-management.page.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        closeAddDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeAddDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:141\n                \n            \n\n\n            \n                \n                    Closes the add dialog\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        openAddDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAddDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:128\n                \n            \n\n\n            \n                \n                    opens the add item dialog\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        openAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAlert(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:93\n                \n            \n\n\n            \n                \n                    Opens an alert to confirm if a user wants to remove an item\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:117\n                \n            \n\n\n            \n                \n                    Opens the edit dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:79\n                \n            \n\n\n            \n                \n                    Removes an item from the table\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilter\n                        \n                    \n                \n            \n            \n                \nupdateFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:67\n                \n            \n\n\n            \n                \n                    Updates the tables based on the filter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        event emited by the filter input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTableSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTableSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:52\n                \n            \n\n\n            \n                \n                    Updates the data source of the table\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatMenuTrigger)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        addDialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['name', 'quantity', 'limit', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [5, 10, 25, 100]\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        records\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog, } from '@angular/material/dialog';\nimport { AlertController, } from '@ionic/angular';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { LoadingService } from '../services/loading.service';\n\n\n/**\n * Inventory management page\n */\n@Component({\n  selector: 'inventory-management',\n  templateUrl: './inventory-management.page.html',\n  styleUrls: ['./inventory-management.page.scss'],\n})\nexport class InventoryManagementPage implements AfterViewInit{\n  \n\n  displayedColumns: string[] = ['name', 'quantity', 'limit', 'actions'];\n  records: MatTableDataSource\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n\n  static addDialogRef: any\n\n  constructor(\n    public dialog: MatDialog,\n    private alertController: AlertController,\n    private firebaseService: FirebaseService,\n    ) { }\n\n  async ngOnInit() {    \n    \n  }\n\n  /**\n   * Updates the data source of the table\n   */\n  async updateTableSource() {\n    let data = await this.firebaseService.getInventory()\n    this.records = new MatTableDataSource(data)\n    this.length = this.records.data.length;\n    this.records.paginator = this.paginator;\n    this.records.sort = this.sort;\n  }\n  async ngAfterViewInit() {\n    await this.updateTableSource()\n  }\n\n  /**\n   * Updates the tables based on the filter\n   * @param event event emited by the filter input\n   */\n  updateFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n  /**\n   * Removes an item from the table\n   * @param item FoodItem to remove\n   */\n  async removeItem(item: FoodItem) {\n    //find the index from id\n    await this.firebaseService.removeItem(item)\n    let removed = this.records.data.splice(this.records.data.indexOf(item), 1)\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n \n  /**\n   * Opens an alert to confirm if a user wants to remove an item\n   * @param item FoodItem to remove\n   */\n  async openAlert(item: FoodItem){\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {}\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(item)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param item FoodItem to edit\n   */\n   openEditDialog(item: FoodItem){\n    const dialogRef = this.dialog.open(EditDialog, {restoreFocus: false, data: item});\n    dialogRef.afterClosed().subscribe( () => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * opens the add item dialog\n   */\n   async openAddDialog(){\n    const dialogRef = this.dialog.open(AddDialog, {restoreFocus: false});\n    InventoryManagementPage.addDialogRef = dialogRef\n    dialogRef.afterClosed().subscribe( () => {\n      this.updateTableSource()\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    })\n  }\n\n  /**\n   * Closes the add dialog\n   */\n  static async closeAddDialog() {\n    await InventoryManagementPage.addDialogRef.close()\n  }\n\n}\n\n/**\n * Add item dialog that will be used in this page\n */\n@Component({\n  selector: 'add-dialog',\n  templateUrl: 'add-dialog.html'\n})\nexport class AddDialog implements OnInit {\n  nameInput: string\n  quantityInput: number\n  limitInput: number\n  urlInput: string\n  forceDisable = false\n  constructor(\n    private firebaseService: FirebaseService,\n    private loadingService: LoadingService\n    ){}\n  ngOnInit(): void {\n      \n  }\n\n  /**\n   * Adds item to the UI table and the DB\n   */\n  async AddItem(){\n    this.forceDisable = true\n    //write to db or something idk\n    if(!this.limitInput) {\n      this.limitInput = 0\n    }\n    let item: FoodItem = {\n      id: this.nameInput.toLowerCase(),\n      name: this.nameInput,\n      quantity: this.quantityInput,\n      limit: this.limitInput,\n      imageUrl: this.urlInput\n    }\n    console.log(item)\n    await this.firebaseService.addItem(item).then(() => {\n      InventoryManagementPage.closeAddDialog()\n      this.forceDisable = false\n    }).catch((err) => {\n      this.forceDisable = false\n    })\n    this.forceDisable = false\n  }\n}\n\n/**\n * Edit dialog that will be used in this page\n */\n@Component({\n  selector: 'edit-dialog',\n  templateUrl: 'edit-dialog.html'\n})\nexport class EditDialog implements OnInit{\n  constructor(@Inject(MAT_DIALOG_DATA) public data: FoodItem,\n  private firebaseService: FirebaseService){}\n  private cancelItem = 0;\n  private cancelLimit = 0;\n  //private name = this.data.name;\n  nameInput: string = this.data.name\n  ngOnInit() {\n    console.log(this.data)\n  }\n\n  /**\n   * increments item quantity\n   * @param item FoodItem to increment\n   */\n  addItem(item: FoodItem){\n    item.quantity = item.quantity + 1;\n    this.cancelItem = this.cancelItem - 1;\n  }\n\n  /**\n   * decrements item quantity\n   * @param item FoodItem to decrement\n   */\n  removeItem(item: FoodItem){\n    item.quantity = item.quantity - 1;\n    this.cancelItem = this.cancelItem + 1;\n  }\n\n  /**\n   * increments and items's limit\n   * @param item FoodItem that will have limit modifed\n   */\n  addLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit + 1\n      this.cancelLimit = this.cancelLimit - 1\n    } else {\n      item.limit = 1\n      this.cancelLimit = this.cancelLimit - 1\n    }\n  }\n\n  /**\n   * decrements and item's limit\n   * @param item FoodItem that will have limit modified\n   */\n  removeLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit - 1;\n      this.cancelLimit = this.cancelLimit + 1\n    } else if(item.limit == 1) {\n      item.limit = undefined;\n      this.cancelLimit = this.cancelLimit + 1\n    }\n  }\n\n  /**\n   * Updates DB info for an item. Called when item changes are saved\n   * @param item FoodItem to update in database\n   */\n  async saveData(item: FoodItem){\n    //write to db\n    console.log(this.nameInput)\n    if(this.nameInput != \"\"){\n      item.name = this.nameInput\n    }\n    await this.firebaseService.updateInventoryItem(item)\n  }\n\n  /**\n   * Discards changes made to food item. Called when Cancel is pressed\n   * @param item FoodItem to discard changes for\n   */\n  cancelData(item: FoodItem){\n    item.quantity = item.quantity + this.cancelItem;\n    if(item.limit){\n      item.limit = item.limit + this.cancelLimit\n      if(item.limit == 0){\n        item.limit = undefined\n      }\n    }\n  }\n}\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      \n        \n          \n            Filter\n            \n          \n        \n        \n          Add Item\n        \n      \n    \n    \n\n    \n      \n        Name\n        {{element.name}}\n      \n      \n        Quantity\n        {{element.quantity}}\n      \n      \n        Limit\n        \n         {{element.limit}}\n        None\n      \n      \n        Actions\n        \n          \n                      \n          \n          \n            \n              Edit Item\n            \n            \n              Remove Item\n            \n          \n        \n      \n      \n      \n      \n      \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./inventory-management.page.scss\n                \n                .table-container{\n    height: 100vh\n}\n\n\ntable {\n    width: 100%;\n}\n\n.mat-cell {\n    width: 40%;\n}\n  \n.mat-column-gender {\n    width: 20%;\n}\n\nth.mat-sort-header-sorted {\n    color: black;\n}\n  \n\n.mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.actions {\n    fill: black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Filter                                                Add Item                                        Name        {{element.name}}                    Quantity        {{element.quantity}}                    Limit                 {{element.limit}}        None                    Actions                                                                                      Edit Item                                      Remove Item                                                                          '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InventoryManagementPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InventoryManagementPageModule.html":{"url":"modules/InventoryManagementPageModule.html","title":"module - InventoryManagementPageModule","body":"\n                   \n\n\n\n\n    Modules\n    InventoryManagementPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InventoryManagementPageModule\n\n\n\ncluster_InventoryManagementPageModule_declarations\n\n\n\ncluster_InventoryManagementPageModule_imports\n\n\n\n\nAddDialog\n\nAddDialog\n\n\n\nInventoryManagementPageModule\n\nInventoryManagementPageModule\n\nInventoryManagementPageModule -->\n\nAddDialog->InventoryManagementPageModule\n\n\n\n\n\nEditDialog\n\nEditDialog\n\nInventoryManagementPageModule -->\n\nEditDialog->InventoryManagementPageModule\n\n\n\n\n\nInventoryManagementPage\n\nInventoryManagementPage\n\nInventoryManagementPageModule -->\n\nInventoryManagementPage->InventoryManagementPageModule\n\n\n\n\n\nInventoryManagementPageRoutingModule\n\nInventoryManagementPageRoutingModule\n\nInventoryManagementPageModule -->\n\nInventoryManagementPageRoutingModule->InventoryManagementPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/inventory-management/inventory-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddDialog\n                        \n                        \n                            EditDialog\n                        \n                        \n                            InventoryManagementPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InventoryManagementPageRoutingModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InventoryManagementPageRoutingModule } from './inventory-management-routing.module';\n\nimport { AddDialog, EditDialog, InventoryManagementPage, } from './inventory-management.page';\n\nimport {MatTableModule} from '@angular/material/table'; \nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDialogModule} from '@angular/material/dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InventoryManagementPageRoutingModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDialogModule,\n    ],\n  declarations: [InventoryManagementPage, EditDialog, AddDialog],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class InventoryManagementPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InventoryManagementPageRoutingModule.html":{"url":"modules/InventoryManagementPageRoutingModule.html","title":"module - InventoryManagementPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    InventoryManagementPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/inventory-management/inventory-management-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InventoryManagementPage } from './inventory-management.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InventoryManagementPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InventoryManagementPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                dismissLoader\n                            \n                            \n                                    Async\n                                showLoader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingCtrl: LoadingController)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dismissLoader\n                        \n                    \n                \n            \n            \n                \n                    \n                    dismissLoader()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:22\n                \n            \n\n\n            \n                \n                    Removes the loading spinner overlay from the screen\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showLoader\n                        \n                    \n                \n            \n            \n                \n                    \n                    showLoader()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:14\n                \n            \n\n\n            \n                \n                    Shows a generic loading spinner\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(private loadingCtrl: LoadingController) { }\n\n  /**\n   * Shows a generic loading spinner\n   */\n  async showLoader() {\n    const loading = await this.loadingCtrl.create()\n    loading.present()\n  }\n\n  /**\n   * Removes the loading spinner overlay from the screen\n   */\n  async dismissLoader() {\n    await this.loadingCtrl.dismiss()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.page.ts\n\n\n\n    \n        Description\n    \n    \n        Login page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                pantries\n                            \n                            \n                                    Public\n                                pantry\n                            \n                            \n                                    Public\n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                setPantrySelection\n                            \n                            \n                                signInButton\n                            \n                            \n                                toForgotPassword\n                            \n                            \n                                toSignup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.page.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:43\n                \n            \n\n\n            \n                \n                    Signs a user out and initalizes inputs\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:31\n                \n            \n\n\n            \n                \n                    Pulls all pantries for selection on page init\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPantrySelection\n                        \n                    \n                \n            \n            \n                \nsetPantrySelection(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:62\n                \n            \n\n\n            \n                \n                    Sets the user's pantry selection\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        event emitted by ion-select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInButton\n                        \n                    \n                \n            \n            \n                \nsignInButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:70\n                \n            \n\n\n            \n                \n                    Signs the user in\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Returns if an error occurs and the function should abort\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toForgotPassword\n                        \n                    \n                \n            \n            \n                \ntoForgotPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSignup\n                        \n                    \n                \n            \n            \n                \ntoSignup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pantries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pantry[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pantry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { Pantry } from '../../../../globalModels/pantry';\nimport { FirebaseService } from '../services/firebase.service';\nimport { AlertService } from '../services/alert.service';\n\n/**\n * Login page\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  public email: string = '';\n  public password: string = '';\n  public pantries: Pantry[] = []\n  public pantry: string = ''\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n  ) { }\n\n  /**\n   * Pulls all pantries for selection on page init\n   */\n  async ngOnInit() {\n    try {\n      this.pantries = await this.firebaseService.getPantries()\n    } catch (err) {\n      console.log(\"error\", err)\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n  }\n\n  /**\n   * Signs a user out and initalizes inputs\n   */\n  ionViewWillEnter() {\n    /*\n    Do NOT remove\n    This is the only way that the signout button which\n    exists in the app component can actually work.\n    The AuthService can't be injected there, so all\n    we can do is navigate to this page and then signout\n    here.\n    */\n    //console.log('signout')\n    this.authService.signOut()\n    this.email = ''\n    this.password = ''\n  }\n\n  /**\n   * Sets the user's pantry selection\n   * @param event event emitted by ion-select\n   */\n  setPantrySelection(event: any) {\n    this.pantry = event.detail.value\n  }\n\n  /**\n   * Signs the user in\n   * @returns Returns if an error occurs and the function should abort\n   */\n  signInButton() {\n    if (this.pantry.length  {\n        this.firebaseService.pantryId = this.pantry\n        let user = await this.authService.getCurrentUser()\n        \n        this.firebaseService.userId = user.uid\n        console.log('User:', this.firebaseService.userId, '   Pantry:', this.firebaseService.pantryId)\n        sessionStorage.setItem('uid', this.firebaseService.userId)\n        sessionStorage.setItem('pantryId', this.firebaseService.pantryId)\n        let pantry = await this.firebaseService.getPantry()\n          document.body.style.setProperty('--ion-color-primary', pantry.primaryColor)\n          document.body.style.setProperty('--ion-color-primary-contrast', pantry.secondaryColor)\n        this.router.navigateByUrl('/home')\n      })\n    } catch (err) {\n      console.log(err)\n      return\n    }\n  }\n\n  toForgotPassword() {\n    // this.router.navigateByUrl(\"forgot-password\")\n  }\n\n  toSignup() {\n    this.router.navigateByUrl(\"signup\")\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    \n    \n      Log into your Food Pantry - Admin\n      \n        \n          \n            \n              {{pantry.name}}\n            \n          \n        \n        \n          Enter your email:\n          \n        \n        \n          Enter your password:\n          \n        \n        Forgot Password?\n      \n      \n      Login\n      \n      \n      \n    \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .center {\n    display: flex;\n    flex-direction: column;\n    padding-top: 2em;\n    padding-left: 1em;\n    padding-right: 1em;\n    width: 100%;\n    justify-content: center;\n    justify-items: center;\n\n    .horizontal-container {\n        justify-content: center;\n        width: 100%;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row;\n\n        .logo {\n            text-align: center;\n\n            img {\n                min-width: 50px;\n                max-width: 300px;\n            }\n        }\n\n        .login {\n            margin-left: 20px;\n            text-align: center;\n\n            .inputs {\n                text-align: left !important;\n\n                ion-item {\n                    padding-top: 10px;\n                }\n            }\n\n            ion-button {\n                width: 100%;\n                padding: 0px;\n                margin: 0px;\n            }\n        }\n    }\n\n    ion-button {\n        width: 100%;\n        max-width: 36em;\n    }\n\n    .signup {\n        margin-top: 30px;\n        display: inline-block;\n        text-align: center;\n        padding-bottom: 30px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Log into your Food Pantry - Admin                                                  {{pantry.name}}                                                Enter your email:                                    Enter your password:                          Forgot Password?                  Login                      '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\nexport interface Pantry {\n  name: string\n  logoUrl: string\n  primaryColor: string\n  secondayColor: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderManagementPage.html":{"url":"components/OrderManagementPage.html","title":"component - OrderManagementPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderManagementPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-management/order-management.page.ts\n\n\n\n    \n        Description\n    \n    \n        Order management page\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-management\n            \n\n            \n                styleUrls\n                ./order-management.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./order-management.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                length\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                records\n                            \n                            \n                                sort\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                            \n                                    Async\n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                openAlert\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                openViewDialog\n                            \n                            \n                                removeItem\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, firebase: FirebaseService, alertController: AlertController, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-management/order-management.page.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(status: OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:92\n                \n            \n\n\n            \n                \n                    Converts the numerical order status to the coresponding string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        OrderStatus to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        String representaion of OrderStatus\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \n                    \n                    ionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:57\n                \n            \n\n\n            \n                \n                    Retrieves orders from the DB and initalizes table.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        openAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAlert(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:113\n                \n            \n\n\n            \n                \n                    Opens an alert for the user for confirm if they want to remove an order\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:137\n                \n            \n\n\n            \n                \n                    Opens the edit dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openViewDialog\n                        \n                    \n                \n            \n            \n                \nopenViewDialog(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:149\n                \n            \n\n\n            \n                \n                    Opens the order view dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to view\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:100\n                \n            \n\n\n            \n                \n                    Removes an order from the table\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilter\n                        \n                    \n                \n            \n            \n                \nupdateFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:78\n                \n            \n\n\n            \n                \n                    Updates the table based on the value in the filter input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event emited by filter changing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatMenuTrigger)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['timestamp', 'id', 'status', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [5, 10, 25, 100]\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        records\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                \n                    \n                        Default value : new MatTableDataSource([])\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatTable, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Order } from '../../../../globalModels/order';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { AlertController } from '@ionic/angular';\nimport { Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { Observable, from } from 'rxjs';\nimport { AlertService } from '../services/alert.service';\n\n/**\n * Order management page\n */\n@Component({\n  selector: 'app-order-management',\n  templateUrl: './order-management.page.html',\n  styleUrls: ['./order-management.page.scss'],\n})\n\nexport class OrderManagementPage implements AfterViewInit {\n\n  displayedColumns: string[] = ['timestamp', 'id', 'status', 'actions'];\n  records: MatTableDataSource = new MatTableDataSource([]);\n\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatTable, { static: true }) table: MatTable;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n  constructor(\n    public dialog: MatDialog,\n    private firebase: FirebaseService,\n    private alertController: AlertController,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async ionViewWillEnter() {\n\n  }\n\n  /**\n   * Retrieves orders from the DB and initalizes table.\n   */\n  async ngAfterViewInit() {\n    try {\n      let orders = await this.firebase.getOrders()\n      // orders.sort(function(a, b){\n      //   return b.timestamp.getDate() - a.timestamp.getDate()\n      // })\n      this.records.data = orders\n      this.length = this.records.data.length\n      this.records.paginator = this.paginator;\n      this.records.sort = this.sort;\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n\n  /**\n   * Updates the table based on the value in the filter input\n   * @param event Event emited by filter changing\n   */\n  updateFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Removes an order from the table\n   * @param order Order to be removed\n   */\n  removeItem(order: Order) {\n    //find the index from id\n    let removed = this.records.data.splice(this.records.data.indexOf(order), 1)\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n\n  /**\n   * Opens an alert for the user for confirm if they want to remove an order\n   * @param order Order to be removed\n   */\n  async openAlert(order: Order) {\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => { }\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(order)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param order Order to edit\n   */\n  openEditDialog(order: Order) {\n    const dialogRef = this.dialog.open(EditOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * Opens the order view dialog\n   * @param order Order to view\n   */\n  openViewDialog(order: Order) {\n    const dialogRef = this.dialog.open(ViewOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n}\n\n/**\n * Edit order dialog that will be used on this page\n */\n@Component({\n  selector: 'edit-order-dialog',\n  templateUrl: 'edit-order-dialog.html'\n})\n\nexport class EditOrderDialog implements OnInit {\n  values = Object.values(OrderStatus).filter((v) => isNaN(Number(v)))\n  enumvals = Object.values(OrderStatus).filter((v) => !isNaN(Number(v)))\n  value = this.getEnumKey(this.data.status)\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n\n  ngOnInit() {\n\n    // console.log(this.values)\n    // console.log(this.enumvals)\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getEnumKey(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Saves the changes made to an order in the DB (mainly order status)\n   * @param data Order to update in the DB\n   */\n  async saveOrder(data: Order) {\n    console.log(this.value)\n    data.status = this.values.indexOf(this.value) + 1\n    console.log(data.status)\n    try {\n      this.firebaseService.updateOrderStatus(data, data.status)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update order status. Please try again later.', ['Ok'])\n    }\n    \n  }\n}\n\n/**\n * View order dialog that will be used on this page\n */\n@Component({\n  selector: 'view-order-dialog',\n  templateUrl: 'view-order-dialog.html'\n})\nexport class ViewOrderDialog implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order) { }\n  ngOnInit() {\n\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n}\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      Filter\n      \n    \n\n    \n      \n        Date\n        {{element.timestamp.toLocaleString()}}\n      \n      \n        ID\n        {{element.id}}\n      \n      \n        Status\n        {{getStatus(element.status)}}\n      \n      \n        Actions\n        \n          \n                      \n          \n          \n            \n              View Order\n            \n            \n              Edit Order\n            \n          \n        \n      \n      \n      \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./order-management.page.scss\n                \n                .table-container{\n    height: 100vh\n}\n\n\ntable {\n    width: 100%;\n}\n\n.mat-cell {\n    width: 40%;\n}\n  \n.mat-column-gender {\n    width: 20%;\n}\n\nth.mat-sort-header-sorted {\n    color: black;\n}\n  \n\n.mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.actions {\n    fill: black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Filter                            Date        {{element.timestamp.toLocaleString()}}                    ID        {{element.id}}                    Status        {{getStatus(element.status)}}                    Actions                                                                                      View Order                                      Edit Order                                                              '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderManagementPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderManagementPageModule.html":{"url":"modules/OrderManagementPageModule.html","title":"module - OrderManagementPageModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderManagementPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderManagementPageModule\n\n\n\ncluster_OrderManagementPageModule_imports\n\n\n\ncluster_OrderManagementPageModule_declarations\n\n\n\n\nEditOrderDialog\n\nEditOrderDialog\n\n\n\nOrderManagementPageModule\n\nOrderManagementPageModule\n\nOrderManagementPageModule -->\n\nEditOrderDialog->OrderManagementPageModule\n\n\n\n\n\nOrderManagementPage\n\nOrderManagementPage\n\nOrderManagementPageModule -->\n\nOrderManagementPage->OrderManagementPageModule\n\n\n\n\n\nViewOrderDialog\n\nViewOrderDialog\n\nOrderManagementPageModule -->\n\nViewOrderDialog->OrderManagementPageModule\n\n\n\n\n\nOrderManagementPageRoutingModule\n\nOrderManagementPageRoutingModule\n\nOrderManagementPageModule -->\n\nOrderManagementPageRoutingModule->OrderManagementPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/order-management/order-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditOrderDialog\n                        \n                        \n                            OrderManagementPage\n                        \n                        \n                            ViewOrderDialog\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OrderManagementPageRoutingModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderManagementPageRoutingModule } from './order-management-routing.module';\n\nimport { EditOrderDialog, OrderManagementPage, ViewOrderDialog } from './order-management.page';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrderManagementPageRoutingModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatCardModule\n  ],\n  declarations: [OrderManagementPage, EditOrderDialog, ViewOrderDialog],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n\n})\nexport class OrderManagementPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderManagementPageRoutingModule.html":{"url":"modules/OrderManagementPageRoutingModule.html","title":"module - OrderManagementPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderManagementPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/order-management/order-management-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrderManagementPage } from './order-management.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderManagementPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrderManagementPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pantry.html":{"url":"interfaces/Pantry.html","title":"interface - Pantry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pantry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logoUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            primaryColor\n                                        \n                                \n                                \n                                        \n                                            secondayColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logoUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondayColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondayColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\nexport interface Pantry {\n  name: string\n  logoUrl: string\n  primaryColor: string\n  secondayColor: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PantryStatisticsPage.html":{"url":"components/PantryStatisticsPage.html","title":"component - PantryStatisticsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PantryStatisticsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pantry-statistics/pantry-statistics.page.ts\n\n\n\n    \n        Description\n    \n    \n        Pantry statistics page with charts showing relevant data\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pantry-statistics\n            \n\n            \n                styleUrls\n                ./pantry-statistics.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./pantry-statistics.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endDate\n                            \n                            \n                                fromDate\n                            \n                            \n                                inventory\n                            \n                            \n                                itembyMonth\n                            \n                            \n                                itembyMonthMonths\n                            \n                            \n                                itembyMonthNums\n                            \n                            \n                                    Public\n                                lineChartDataItem\n                            \n                            \n                                    Public\n                                lineChartDataOrders\n                            \n                            \n                                    Public\n                                lineChartLegend\n                            \n                            \n                                    Public\n                                lineChartOptions\n                            \n                            \n                                ordersByMonth\n                            \n                            \n                                ordersByMonthMonths\n                            \n                            \n                                ordersByMonthNums\n                            \n                            \n                                selectedFoodItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertItemByMonth\n                            \n                            \n                                convertOrdersByMonth\n                            \n                            \n                                endDateChange\n                            \n                            \n                                fromDateChange\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                selectChange\n                            \n                            \n                                updateItemChart\n                            \n                            \n                                updateItemGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(forecaster: ForecastService, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:135\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        forecaster\n                                                  \n                                                        \n                                                                        ForecastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertItemByMonth\n                        \n                    \n                \n            \n            \n                \nconvertItemByMonth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:41\n                \n            \n\n\n            \n                \n                    Separates data into arrays for display in charts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertOrdersByMonth\n                        \n                    \n                \n            \n            \n                \nconvertOrdersByMonth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:72\n                \n            \n\n\n            \n                \n                    Separates data into arrays for display in charts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDateChange\n                        \n                    \n                \n            \n            \n                \nendDateChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:58\n                \n            \n\n\n            \n                \n                    DEBUG method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fromDateChange\n                        \n                    \n                \n            \n            \n                \nfromDateChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:51\n                \n            \n\n\n            \n                \n                    DEBUG method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:146\n                \n            \n\n\n            \n                \n                    Initializes Charts and Data\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectChange\n                        \n                    \n                \n            \n            \n                \nselectChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:65\n                \n            \n\n\n            \n                \n                    DEBUG method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemChart\n                        \n                    \n                \n            \n            \n                \nupdateItemChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:82\n                \n            \n\n\n            \n                \n                    Updates the item by month chart with proper data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemGraph\n                        \n                    \n                \n            \n            \n                \nupdateItemGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:101\n                \n            \n\n\n            \n                \n                    Updates data when the user presses submit on \"item by month\" graph\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fromDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inventory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FoodItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itembyMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimestampedItems[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itembyMonthMonths\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itembyMonthNums\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineChartDataItem\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineChartDataOrders\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineChartLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineChartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    responsive: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersByMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimestampedOrders[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersByMonthMonths\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersByMonthNums\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFoodItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ChartConfiguration, ChartOptions, ChartType } from \"chart.js\";\nimport { ForecastService } from '../services/forecast.service';\nimport { FirebaseService } from '../services/firebase.service';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { AlertService } from '../services/alert.service';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\n\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n/**\n * Pantry statistics page with charts showing relevant data\n */\n@Component({\n  selector: 'app-pantry-statistics',\n  templateUrl: './pantry-statistics.page.html',\n  styleUrls: ['./pantry-statistics.page.scss'],\n})\nexport class PantryStatisticsPage implements OnInit {\n  fromDate = \"\"\n  endDate = \"\"\n  inventory: FoodItem[]\n  selectedFoodItem: string\n  ordersByMonth: TimestampedOrders[]\n  ordersByMonthMonths: string[] = []\n  ordersByMonthNums: number[] = []\n  itembyMonth: TimestampedItems[]\n  itembyMonthMonths: string[] = []\n  itembyMonthNums: number[] = []\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertItemByMonth() {\n    this.itembyMonth.forEach(element => {\n      this.itembyMonthMonths.push(element.month)\n      this.itembyMonthNums.push(element.items)\n    })\n  }\n\n  /**\n   * DEBUG method\n   */\n  fromDateChange() {\n    // console.log(this.fromDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  endDateChange() {\n    // console.log(this.endDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  selectChange() {\n    // console.log(this.selectedFoodItem)\n  }\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertOrdersByMonth() {\n    this.ordersByMonth.forEach(element => {\n      this.ordersByMonthMonths.push(element.month)\n      this.ordersByMonthNums.push(element.orders)\n    })\n  }\n\n  /**\n   * Updates the item by month chart with proper data.\n   */\n  updateItemChart() {\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n  }\n\n  /**\n   * Updates data when the user presses submit on \"item by month\" graph\n   */\n  updateItemGraph() {\n    this.itembyMonth = []\n    this.itembyMonthNums = []\n    this.itembyMonthMonths = []\n    console.log(\"submit clicked\")\n    if(this.selectedFoodItem){\n      let fromDateObj = new Date(this.fromDate)\n      let endDateObj\n      if(this.endDate) {\n        endDateObj = new Date(this.endDate)\n      } else {\n        endDateObj = new Date()\n      }\n      console.log(fromDateObj.getMonth())\n      console.log(endDateObj.getMonth())\n      \n      if(fromDateObj.getMonth() ['data']\n  public lineChartDataItem: ChartConfiguration['data']\n  public lineChartOptions: ChartOptions = {\n    responsive: true\n  };\n  public lineChartLegend = true;\n\n  constructor(\n    private forecaster: ForecastService, \n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n  \n  /**\n   * Initializes Charts and Data\n   */\n  async ngOnInit() {\n    try {\n      let pantry = await this.firebaseService.getPantry()\n      this.inventory = await this.firebaseService.getInventory()\n      let orders = await this.firebaseService.getOrders()\n      this.forecaster.setData(pantry, this.inventory, orders)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n    \n\n   \n    console.log(\"Getting number of orders by month\")\n    this.ordersByMonth = this.forecaster.getNumOrderByMonth()\n    console.log(this.forecaster.getNumOrderByMonth())\n    this.convertOrdersByMonth()\n    this.lineChartDataOrders = {\n      labels: this.ordersByMonthMonths,\n      datasets: [\n        {\n          data:this.ordersByMonthNums,\n          label: 'Orders',\n          fill: true,\n          tension: 0.5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(255,0,0,0.3)'\n        }\n      ]\n    };\n\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n    console.log(\"Searching for bread demand by month\")\n    console.log(this.forecaster.getItemDemandByMonth(\"bread\"))\n\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n       Orders by Month:\n      \n    \n    \n    \n    \n    \n      Demand by Month for an Item:\n      \n        \n          \n            \n              {{item.name}}\n            \n          \n          Start Date:\n          \n          End Date:\n          \n          Submit\n        \n      \n    \n    \n    \n    \n  \n \n\n    \n\n    \n                \n                    ./pantry-statistics.page.scss\n                \n                ion-col {\n    background-color: var( --ion-color-primary-contrast);\n    border: solid 1px #fff;\n    color: #fff;\n    text-align: center;\n}\n\n\n.center {\n    display: flex;\n    flex-direction: column;\n    padding-top: 2em;\n    padding-left: 1em;\n    padding-right: 1em;\n    width: 100%;\n    justify-content: center;\n    justify-items: center;\n\n    .horizontal-container {\n        justify-content: center;\n        width: 100%;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row;\n\n        .logo {\n            text-align: center;\n\n            img {\n                min-width: 50px;\n                max-width: 300px;\n            }\n        }\n\n        .login {\n            margin-left: 20px;\n            text-align: center;\n\n            .inputs {\n                text-align: left !important;\n\n                ion-item {\n                    padding-top: 10px;\n                }\n            }\n\n            ion-button {\n                width: 100%;\n                padding: 0px;\n                margin: 0px;\n            }\n        }\n    }\n\n    ion-button {\n        width: 100%;\n        max-width: 36em;\n    }\n}\n\n\n.chart {\n    height: 50rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                               Orders by Month:                                Demand by Month for an Item:                                                  {{item.name}}                                Start Date:                    End Date:                    Submit                                 '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PantryStatisticsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PantryStatisticsPageModule.html":{"url":"modules/PantryStatisticsPageModule.html","title":"module - PantryStatisticsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PantryStatisticsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PantryStatisticsPageModule\n\n\n\ncluster_PantryStatisticsPageModule_declarations\n\n\n\ncluster_PantryStatisticsPageModule_imports\n\n\n\n\nPantryStatisticsPage\n\nPantryStatisticsPage\n\n\n\nPantryStatisticsPageModule\n\nPantryStatisticsPageModule\n\nPantryStatisticsPageModule -->\n\nPantryStatisticsPage->PantryStatisticsPageModule\n\n\n\n\n\nPantryStatisticsPageRoutingModule\n\nPantryStatisticsPageRoutingModule\n\nPantryStatisticsPageModule -->\n\nPantryStatisticsPageRoutingModule->PantryStatisticsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pantry-statistics/pantry-statistics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PantryStatisticsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PantryStatisticsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PantryStatisticsPageRoutingModule } from './pantry-statistics-routing.module';\n\nimport { PantryStatisticsPage } from './pantry-statistics.page';\nimport { NgChartsModule } from 'ng2-charts';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PantryStatisticsPageRoutingModule,\n    NgChartsModule\n  ],\n  declarations: [PantryStatisticsPage]\n})\nexport class PantryStatisticsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PantryStatisticsPageRoutingModule.html":{"url":"modules/PantryStatisticsPageRoutingModule.html","title":"module - PantryStatisticsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PantryStatisticsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pantry-statistics/pantry-statistics-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PantryStatisticsPage } from './pantry-statistics.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PantryStatisticsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PantryStatisticsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.page.ts\n\n\n\n    \n        Description\n    \n    \n        Pantry profile/instance management page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Private\n                                iConStyle\n                            \n                            \n                                    Private\n                                iContentRef\n                            \n                            \n                                pantry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openEditDetailsDialog\n                            \n                            \n                                updateColors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService, dialog: MatDialog, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.page.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:34\n                \n            \n\n\n            \n                \n                    Gets pantry data on page init\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDetailsDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDetailsDialog(data: Pantry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:48\n                \n            \n\n\n            \n                \n                    Opens the Pantry edit dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Pantry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pantry to Edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateColors\n                        \n                    \n                \n            \n            \n                \nupdateColors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:58\n                \n            \n\n\n            \n                \n                    Updates UI Colors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatMenuTrigger)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iConStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CSSStyleDeclaration\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iContentRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('iContent', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pantry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pantry\n\n                    \n                \n                \n                    \n                        Default value : new Pantry('id', 'name', 'desc', 'address', 'logo', 'red', 'black', 2, [], [], [])\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { FirebaseService } from '../services/firebase.service';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { IonContent } from '@ionic/angular';\nimport { AlertService } from '../services/alert.service';\n\n/**\n * Pantry profile/instance management page\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  pantry: Pantry = new Pantry('id', 'name', 'desc', 'address', 'logo', 'red', 'black', 2, [], [], [])\n  @ViewChild (MatMenuTrigger) actions: MatMenuTrigger\n\n  @ViewChild('iContent', {static: true})\n  private iContentRef: ElementRef\n  private iConStyle: CSSStyleDeclaration\n  constructor(\n    private firebase: FirebaseService,\n    public dialog: MatDialog,\n    private alertService: AlertService\n  ) { }\n\n  /**\n   * Gets pantry data on page init\n   */\n  async ngOnInit() {\n    try {\n      this.pantry = await this.firebase.getPantry()\n      console.log(this.pantry)\n      this.updateColors()\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n  }\n\n  /**\n   * Opens the Pantry edit dialog\n   * @param data Pantry to Edit\n   */\n  openEditDetailsDialog(data: Pantry){\n    const dialogRef = this.dialog.open(EditDetailsDialog, {restoreFocus: false, data: data});\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n    });\n  }\n\n  /**\n   * Updates UI Colors\n   */\n  updateColors(){\n    document.body.style.setProperty('--ion-color-primary', this.pantry.primaryColor)\n    document.body.style.setProperty('--ion-color-primary-contrast', this.pantry.secondaryColor)\n  }\n\n}\n\n@Component({\n  selector: 'edit-details-dialog',\n  templateUrl: 'edit-details-dialog.html'\n}) export class EditDetailsDialog implements OnInit {\n  public name: string = this.data.name\n  public description: string = this.data.desc\n  public address: string = this.data.address\n  public icon: string = this.data.logoUrl\n  public primary: string = this.data.primaryColor\n  public secondary: string = this.data.secondaryColor\n  public maxOrder: number = this.data.orderLimit\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Pantry,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n  ){}\n\n  ngOnInit(): void {\n    // console.log(this.data)\n  }\n\n  /**\n   * Saves the pantry data that is changed in the edit dialog\n   */\n  async saveData(){\n    let pantry: Pantry = {\n      \"name\": this.name,\n      \"id\": this.data.id,\n      \"desc\": this.description,\n      \"address\": this.address,\n      \"logoUrl\": this.icon,\n      \"primaryColor\": this.primary,\n      \"secondaryColor\": this.secondary,\n      \"orderLimit\": this.maxOrder\n    }\n    this.data.name = this.name\n    this.data.desc = this.description\n    this.data.address = this.address\n    this.data.logoUrl = this.icon\n    this.data.primaryColor = this.primary\n    this.data.secondaryColor = this.secondary\n    this.data.orderLimit = this.maxOrder\n    try {\n      await this.firebaseService.updatePantry(pantry)\n      this.updateColors()\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n  /**\n   * Updates UI Colors\n   */\n  updateColors(){\n    document.body.style.setProperty('--ion-color-primary', this.data.primaryColor)\n    document.body.style.setProperty('--ion-color-primary-contrast', this.data.secondaryColor)\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      Pantry Details\n      \n        \n          Edit Details\n      \n    \n    \n      Pantry Name\n      {{pantry.name}}\n    \n    \n      Description\n      {{pantry.desc}}\n    \n    \n      Address\n      {{pantry.address}}\n    \n    \n      Icon\n      \n    \n    \n      Theme Colors\n      \n        \n          Primary: {{pantry.primaryColor}} \n        \n        \n          Secondary: {{pantry.secondaryColor}}\n        \n      \n    \n    \n      Weekly Max Order\n      {{pantry.orderLimit}}\n    \n  \n  \n\n\n  \n    App Version: 0.0.1\n  \n\n    \n\n    \n                \n                    ./profile.page.scss\n                \n                @import \"../../global.scss\";\n\nion-header {\n  ion-toolbar {\n    ion-title {\n      padding: 10px;\n      margin: 10px;\n    }\n    ion-button {\n      float: right;\n    }\n  }\n}\n\nion-content {\n  .logo{\n    width: 75px;\n    height: 75px;\n  }\n  ion-grid {\n      --ion-grid-column-padding: 10px;\n      border-collapse: collapse;\n      border-style: hidden;\n      \n      ion-row:first-child {\n        font-weight: bold;\n      }\n      ion-col {\n        border: 1px solid white;\n        border-bottom: 0;\n        border-right: 0;\n      }\n      ion-col:last-child {\n        border-right: 1px solid white;\n      }\n      \n      ion-row:last-child {\n        border-bottom: 1px solid white;\n      }\n    }\n    ion-button {\n      width: 100%;\n      padding: 1px;\n      margin: 1px;\n      --color: white;\n    }\n\n    .primary-color {\n      fill: var(--ion-color-primary);\n    }\n\n    .secondary-color { \n      fill: var(--ion-color-primary-contrast);\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Pantry Details                        Edit Details                    Pantry Name      {{pantry.name}}              Description      {{pantry.desc}}              Address      {{pantry.address}}              Icon                    Theme Colors                        Primary: {{pantry.primaryColor}}                           Secondary: {{pantry.secondaryColor}}                            Weekly Max Order      {{pantry.orderLimit}}              App Version: 0.0.1  '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageModule.html":{"url":"modules/ProfilePageModule.html","title":"module - ProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\n\nEditDetailsDialog\n\nEditDetailsDialog\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nEditDetailsDialog->ProfilePageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditDetailsDialog\n                        \n                        \n                            ProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfilePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { EditDetailsDialog, ProfilePage } from './profile.page';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport {MatInputModule} from '@angular/material/input';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule,\n    MatDialogModule,\n    ColorPickerModule,\n    MatInputModule\n  ],\n  declarations: [ProfilePage, EditDetailsDialog]\n})\nexport class ProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageRoutingModule.html":{"url":"modules/ProfilePageRoutingModule.html","title":"module - ProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampedItems.html":{"url":"interfaces/TimestampedItems.html","title":"interface - TimestampedItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampedItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pantry-statistics/pantry-statistics.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            month\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ChartConfiguration, ChartOptions, ChartType } from \"chart.js\";\nimport { ForecastService } from '../services/forecast.service';\nimport { FirebaseService } from '../services/firebase.service';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { AlertService } from '../services/alert.service';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\n\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n/**\n * Pantry statistics page with charts showing relevant data\n */\n@Component({\n  selector: 'app-pantry-statistics',\n  templateUrl: './pantry-statistics.page.html',\n  styleUrls: ['./pantry-statistics.page.scss'],\n})\nexport class PantryStatisticsPage implements OnInit {\n  fromDate = \"\"\n  endDate = \"\"\n  inventory: FoodItem[]\n  selectedFoodItem: string\n  ordersByMonth: TimestampedOrders[]\n  ordersByMonthMonths: string[] = []\n  ordersByMonthNums: number[] = []\n  itembyMonth: TimestampedItems[]\n  itembyMonthMonths: string[] = []\n  itembyMonthNums: number[] = []\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertItemByMonth() {\n    this.itembyMonth.forEach(element => {\n      this.itembyMonthMonths.push(element.month)\n      this.itembyMonthNums.push(element.items)\n    })\n  }\n\n  /**\n   * DEBUG method\n   */\n  fromDateChange() {\n    // console.log(this.fromDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  endDateChange() {\n    // console.log(this.endDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  selectChange() {\n    // console.log(this.selectedFoodItem)\n  }\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertOrdersByMonth() {\n    this.ordersByMonth.forEach(element => {\n      this.ordersByMonthMonths.push(element.month)\n      this.ordersByMonthNums.push(element.orders)\n    })\n  }\n\n  /**\n   * Updates the item by month chart with proper data.\n   */\n  updateItemChart() {\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n  }\n\n  /**\n   * Updates data when the user presses submit on \"item by month\" graph\n   */\n  updateItemGraph() {\n    this.itembyMonth = []\n    this.itembyMonthNums = []\n    this.itembyMonthMonths = []\n    console.log(\"submit clicked\")\n    if(this.selectedFoodItem){\n      let fromDateObj = new Date(this.fromDate)\n      let endDateObj\n      if(this.endDate) {\n        endDateObj = new Date(this.endDate)\n      } else {\n        endDateObj = new Date()\n      }\n      console.log(fromDateObj.getMonth())\n      console.log(endDateObj.getMonth())\n      \n      if(fromDateObj.getMonth() ['data']\n  public lineChartDataItem: ChartConfiguration['data']\n  public lineChartOptions: ChartOptions = {\n    responsive: true\n  };\n  public lineChartLegend = true;\n\n  constructor(\n    private forecaster: ForecastService, \n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n  \n  /**\n   * Initializes Charts and Data\n   */\n  async ngOnInit() {\n    try {\n      let pantry = await this.firebaseService.getPantry()\n      this.inventory = await this.firebaseService.getInventory()\n      let orders = await this.firebaseService.getOrders()\n      this.forecaster.setData(pantry, this.inventory, orders)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n    \n\n   \n    console.log(\"Getting number of orders by month\")\n    this.ordersByMonth = this.forecaster.getNumOrderByMonth()\n    console.log(this.forecaster.getNumOrderByMonth())\n    this.convertOrdersByMonth()\n    this.lineChartDataOrders = {\n      labels: this.ordersByMonthMonths,\n      datasets: [\n        {\n          data:this.ordersByMonthNums,\n          label: 'Orders',\n          fill: true,\n          tension: 0.5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(255,0,0,0.3)'\n        }\n      ]\n    };\n\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n    console.log(\"Searching for bread demand by month\")\n    console.log(this.forecaster.getItemDemandByMonth(\"bread\"))\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampedItems-1.html":{"url":"interfaces/TimestampedItems-1.html","title":"interface - TimestampedItems-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampedItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/forecast.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            month\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { FoodItem } from '../../../../globalModels/foodItem'\nimport { Order } from '../../../../globalModels/order'\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { FirebaseService } from './firebase.service';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ForecastService {\n\n  pantry: Pantry\n  inventory: FoodItem[]\n  orders: Order[]\n\n  constructor() {\n\n  }\n\n  /**\n   * Sets starting data\n   * @param dataPantry \n   * @param dataInventory \n   * @param dataOrders \n   */\n  setData(dataPantry: Pantry, dataInventory: FoodItem[], dataOrders: Order[]) {\n    this.pantry = dataPantry\n    this.inventory = dataInventory\n    this.orders = dataOrders\n  }\n  /**\n   * Returns the total numbers of orders for a given pantry\n   * @param type optional OrderStatus stating the desired OrderStatus\n   * @returns number of orders, optionally of a type\n   */\n  getNumOrder(type?: OrderStatus): number {\n    let retval = 0\n    if (type) {\n      this.orders.forEach(order => {\n        if (order.status === type) {\n          retval += 1\n        }\n      });\n    }\n    else if (this.orders) {\n      retval = this.orders?.length\n    }\n    return retval\n  }\n\n  /**\n   * Gets a list of all food items of order types not cancelled or picked up\n   * @returns FoodItem list of all active items\n   */\n  getOutstandingItems(): FoodItem[] {\n    let retval: FoodItem[] = []\n    this.orders.forEach(order => {\n      if (order.status === OrderStatus.Processing) {\n        retval = retval.concat(order.items)\n      }\n    });\n    return retval\n  }\n\n  /**\n   * Sorts a list of orders by datetime\n   * @param orders The orderlist to be sorted\n   */\n  sortOrdersByDate(orders: Order[]) {\n    orders.sort((a: Order, b: Order) => {\n      return (- a.timestamp.getTime() + b.timestamp.getTime())\n    })\n  }\n\n  /**\n   * Returns a list of orders that have been filled \n   * @returns Order[] of filled orders\n   */\n  getOrderHistory(): Order[] {\n    let retval: Order[] = []\n    this.orders.forEach(order => {\n      if (order.status === OrderStatus['Order Picked Up'])\n        retval.push(order)\n    });\n    this.sortOrdersByDate(retval)\n    return retval\n  }\n\n  /**\n   * For a list of food items, returns the number of occurences for that item\n   * @param list The list of food items\n   * @param itemName The item name\n   * @returns number of occurences in the foodlist\n   */\n  getNumItemOccurrences(list: FoodItem[], itemName: string): number {\n    let counter: number = 0\n    list.forEach(item => {\n      if (item.name === itemName) {\n        counter += item.quantity\n      }\n    });\n    return counter\n  }\n\n  /**\n   * Creates a list of all food items in a given order list\n   * @param orders The orders to parse\n   * @returns The full list of items from an order list\n   */\n  getItemsFromOrders(orders: Order[]) {\n    let retval: FoodItem[] = []\n    orders.forEach(order => {\n      retval = retval.concat(order.items)\n    });\n    return retval\n  }\n\n  /**\n   * Returns a list of lists where sublist are the orders for a given month\n   * @returns History list of lists \n   */\n  orderHistoryByMonth() {\n    let retval: Order[][] = []\n    let history = this.getOrderHistory()\n    let i: number = 0\n    this.sortOrdersByDate(history)\n\n    history.forEach(order => {\n      if (retval.length === 0) {\n        retval.push([order])\n      }\n      else if (order.timestamp.getMonth() === retval[i][0].timestamp.getMonth()\n        && order.timestamp.getFullYear() === retval[i][0].timestamp.getFullYear()) {\n        retval[i].push(order)\n      }\n      else {\n        retval.push([order])\n        i += 1\n      }\n    });\n    return retval.reverse()\n  }\n\n  /**\n   * Reshapes an order list to a list of order lists by month\n   * @param orderList The list of orders\n   * @returns List of order lists by month\n   */\n  sortOrderListByMonth(orderList: Order[]) {\n    let retval: Order[][] = []\n    let i: number = 0\n    this.sortOrdersByDate(orderList)\n\n    orderList.forEach(order => {\n      if (retval.length === 0) {\n        retval.push([order])\n      }\n      else if (order.timestamp.getMonth() === retval[i][0].timestamp.getMonth()\n        && order.timestamp.getFullYear() === retval[i][0].timestamp.getFullYear()) {\n        retval[i].push(order)\n      }\n      else {\n        retval.push([order])\n        i += 1\n      }\n    });\n    return retval\n  }\n\n  /**\n   * Returns a list containing the number of orders by month\n   * @returns List of numbers of orders by month\n   */\n  getNumOrderByMonth() {\n    let retval: TimestampedOrders[] = []\n    let history = this.orderHistoryByMonth()\n    history.forEach(orderList => {\n      retval.push({\n        \"orders\": orderList.length,\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'})\n      })\n    });\n    return retval\n  }\n\n  /**\n   * Returns a list of the number of item occurences by month\n   * @param itemName The name of the item to query\n   */\n  getItemDemandByMonth(itemName: string) {\n    let retval: TimestampedItems[] = []\n    let history = this.orderHistoryByMonth()\n    history.forEach(orderList => {\n      let sum: number = 0\n      orderList.forEach(order => {\n        sum += this.getNumItemOccurrences(order.items, itemName)\n      });\n      retval.push({\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'}),\n        \"items\": sum\n      })\n    })\n    return retval\n  }\n\n  /**\n   * Returns a list of timestamped items within a date range\n   * @param itemName The name of the item to search for\n   * @param start The start date of the range\n   * @param end The end date of the range\n   * @returns List of timestamped items\n   */\n  getItemDemandInRange(itemName:string, start:Date, end:Date) {\n    let retval: TimestampedItems[] = []\n    let history = this.getOrderHistory()\n\n    let cut = this.getOrdersInDateRange(history, start, end)\n    let cutReshaped = this.sortOrderListByMonth(cut)\n\n    cutReshaped.forEach(orderList => {\n      let sum: number = 0\n      orderList.forEach(order => {\n        sum += this.getNumItemOccurrences(order.items, itemName)\n      });\n      retval.push({\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'}),\n        \"items\": sum\n      })\n    })\n    return retval\n  }\n\n  /**\n   * Returns the list of orders within a given range\n   * @param orderList The list of orders to parse\n   * @param start The start date of the range\n   * @param end The end date of the range\n   * @returns The list of orders falling within the range\n   */\n  getOrdersInDateRange(orderList: Order[], start: Date, end: Date) {\n    let retval: Order[] = []\n    orderList.forEach(order => {\n      if (order.timestamp.getTime() >= start.getTime() && order.timestamp.getTime()  {\n        i++\n        a += i * element\n        b += i\n        c += element\n        d += i ** 2\n      });\n\n      return (n * (a) - b * c) / (n * d - (b ** 2))\n    }\n  }\n\n  //FORECASTING AND PREDICTION FUNCTIONS\n\n  /**\n   * Computes the current month order demand percent difference to previous year order demand\n   * @returns The percent difference in current year order demand to previous year order demand\n   */\n  prevYearDiff() {\n    let history = this.getOrderHistory()\n    let t2 = new Date()\n    let t1 = this.calcPrevDate(t2, 1)\n    let t3 = this.calcPrevDate(t2, 13)\n    let t4 = this.calcPrevDate(t2, 12)\n    let period1 = this.getOrdersInDateRange(history, t1, t2)\n    let period2 = this.getOrdersInDateRange(history, t3, t4)\n\n    if (period2.length == 0) {\n      return 0\n    }\n\n    return (period1.length - period2.length) / period2.length\n  }\n\n  /**\n   * Computes the current month item demand percent difference compared to previous year\n   * @param itemName The name of the item to parse\n   * @returns The percent difference of current to previous year item demand\n   */\n  prevYearItemDiff(itemName: string) {\n    let history = this.getOrderHistory()\n    let t2 = new Date()\n    let t1 = this.calcPrevDate(t2, 1)\n    let t3 = this.calcPrevDate(t2, 13)\n    let t4 = this.calcPrevDate(t2, 12)\n    let period1 = this.getOrdersInDateRange(history, t1, t2)\n    let period2 = this.getOrdersInDateRange(history, t3, t4)\n\n    let currentDemand = this.getNumItemOccurrences(this.getItemsFromOrders(period1), itemName)\n    let previousDemand = this.getNumItemOccurrences(this.getItemsFromOrders(period2), itemName)\n\n    if (previousDemand == 0) {\n      return 0\n    }\n\n    return (currentDemand - previousDemand) / previousDemand\n  }\n\n  /**\n   * Returns The linear regression of total order frequency trend on a monthly basis for n months\n   * @param n The number of months n to compute the linear regression on\n   * @returns A trend, positive or negative, corresponding to the desired period\n   */\n  getXMonthTrend(n: number): number {\n    let history = this.getOrderHistory()\n    let now = new Date()\n    let then = this.calcPrevDate(now, n)\n    let cut = this.getOrdersInDateRange(history, then, now)\n    let i: number = 0\n\n    let buckets: number[] = []\n    let curMonth: number = 0\n\n    cut.forEach(order => {\n      if (buckets.length == 0) {\n        buckets = [1]\n        curMonth = order.timestamp.getMonth()\n      }\n      else if (order.timestamp.getMonth() == curMonth) {\n        buckets[i] += 1\n      }\n      else {\n        buckets.push(1)\n        curMonth = order.timestamp.getMonth()\n        i++\n      }\n    });\n\n    // Negation a result of most recent months occurring at front of array\n    return -this.calcLinearRegression(buckets)\n  }\n\n  /**\n   * Returns The linear regression of item frequency trend on a monthly basis for n months\n   * @param n The number of months n to compute the linear regression on\n   * @param itemName The name of the item to parse for\n   * @returns A trend, positive or negative, corresponding to the desired period\n   */\n  getXMonthItemTrend(n: number, itemName: string): number {\n    let history = this.getOrderHistory()\n    let now = new Date()\n    let then = this.calcPrevDate(now, n)\n    let cut = this.getOrdersInDateRange(history, then, now)\n    let i: number = 0\n\n    let buckets: number[] = []\n    let curMonth: number = 0\n\n    cut.forEach(order => {\n      if (buckets.length == 0) {\n        buckets = [this.getNumItemOccurrences(order.items, itemName)]\n        curMonth = order.timestamp.getMonth()\n      }\n      else if (order.timestamp.getMonth() == curMonth) {\n        buckets[i] += this.getNumItemOccurrences(order.items, itemName)\n      }\n      else {\n        buckets.push(this.getNumItemOccurrences(order.items, itemName))\n        curMonth = order.timestamp.getMonth()\n        i++\n      }\n    });\n    // Negation a result of most recent months occurring at front of array\n    return -this.calcLinearRegression(buckets)\n  }\n\n  /**\n   * Computes the 1 Dimensional Convolution of an array with a kernel\n   * @note Uses average padding\n   * @param array The array to be convolved\n   * @param kernel The kernel to convolve with\n   * @param norm The normalization factor of the convolution\n   * @returns The result of the convolution, an array of numbers\n   */\n  convolve1D(array: number[], kernel: number[], norm: number): number[] {\n    let copy = []\n    let retval = []\n    let avg = 0\n\n    array.forEach(num => {\n      copy.push(num)\n      avg += num\n    });\n\n    avg /= array.length\n    let paddingNum = (kernel.length / 2) | 0\n\n    for (let i = 0; i  {\n      demandHist.push(element.orders)\n    })\n    return this.convolve1D(demandHist, [-1, -2, 0, 2, 1], 6)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampedOrders.html":{"url":"interfaces/TimestampedOrders.html","title":"interface - TimestampedOrders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampedOrders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pantry-statistics/pantry-statistics.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            month\n                                        \n                                \n                                \n                                        \n                                            orders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orders:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ChartConfiguration, ChartOptions, ChartType } from \"chart.js\";\nimport { ForecastService } from '../services/forecast.service';\nimport { FirebaseService } from '../services/firebase.service';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { AlertService } from '../services/alert.service';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\n\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n/**\n * Pantry statistics page with charts showing relevant data\n */\n@Component({\n  selector: 'app-pantry-statistics',\n  templateUrl: './pantry-statistics.page.html',\n  styleUrls: ['./pantry-statistics.page.scss'],\n})\nexport class PantryStatisticsPage implements OnInit {\n  fromDate = \"\"\n  endDate = \"\"\n  inventory: FoodItem[]\n  selectedFoodItem: string\n  ordersByMonth: TimestampedOrders[]\n  ordersByMonthMonths: string[] = []\n  ordersByMonthNums: number[] = []\n  itembyMonth: TimestampedItems[]\n  itembyMonthMonths: string[] = []\n  itembyMonthNums: number[] = []\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertItemByMonth() {\n    this.itembyMonth.forEach(element => {\n      this.itembyMonthMonths.push(element.month)\n      this.itembyMonthNums.push(element.items)\n    })\n  }\n\n  /**\n   * DEBUG method\n   */\n  fromDateChange() {\n    // console.log(this.fromDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  endDateChange() {\n    // console.log(this.endDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  selectChange() {\n    // console.log(this.selectedFoodItem)\n  }\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertOrdersByMonth() {\n    this.ordersByMonth.forEach(element => {\n      this.ordersByMonthMonths.push(element.month)\n      this.ordersByMonthNums.push(element.orders)\n    })\n  }\n\n  /**\n   * Updates the item by month chart with proper data.\n   */\n  updateItemChart() {\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n  }\n\n  /**\n   * Updates data when the user presses submit on \"item by month\" graph\n   */\n  updateItemGraph() {\n    this.itembyMonth = []\n    this.itembyMonthNums = []\n    this.itembyMonthMonths = []\n    console.log(\"submit clicked\")\n    if(this.selectedFoodItem){\n      let fromDateObj = new Date(this.fromDate)\n      let endDateObj\n      if(this.endDate) {\n        endDateObj = new Date(this.endDate)\n      } else {\n        endDateObj = new Date()\n      }\n      console.log(fromDateObj.getMonth())\n      console.log(endDateObj.getMonth())\n      \n      if(fromDateObj.getMonth() ['data']\n  public lineChartDataItem: ChartConfiguration['data']\n  public lineChartOptions: ChartOptions = {\n    responsive: true\n  };\n  public lineChartLegend = true;\n\n  constructor(\n    private forecaster: ForecastService, \n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n  \n  /**\n   * Initializes Charts and Data\n   */\n  async ngOnInit() {\n    try {\n      let pantry = await this.firebaseService.getPantry()\n      this.inventory = await this.firebaseService.getInventory()\n      let orders = await this.firebaseService.getOrders()\n      this.forecaster.setData(pantry, this.inventory, orders)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n    \n\n   \n    console.log(\"Getting number of orders by month\")\n    this.ordersByMonth = this.forecaster.getNumOrderByMonth()\n    console.log(this.forecaster.getNumOrderByMonth())\n    this.convertOrdersByMonth()\n    this.lineChartDataOrders = {\n      labels: this.ordersByMonthMonths,\n      datasets: [\n        {\n          data:this.ordersByMonthNums,\n          label: 'Orders',\n          fill: true,\n          tension: 0.5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(255,0,0,0.3)'\n        }\n      ]\n    };\n\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n    console.log(\"Searching for bread demand by month\")\n    console.log(this.forecaster.getItemDemandByMonth(\"bread\"))\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampedOrders-1.html":{"url":"interfaces/TimestampedOrders-1.html","title":"interface - TimestampedOrders-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampedOrders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/forecast.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            month\n                                        \n                                \n                                \n                                        \n                                            orders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orders:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { FoodItem } from '../../../../globalModels/foodItem'\nimport { Order } from '../../../../globalModels/order'\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { FirebaseService } from './firebase.service';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ForecastService {\n\n  pantry: Pantry\n  inventory: FoodItem[]\n  orders: Order[]\n\n  constructor() {\n\n  }\n\n  /**\n   * Sets starting data\n   * @param dataPantry \n   * @param dataInventory \n   * @param dataOrders \n   */\n  setData(dataPantry: Pantry, dataInventory: FoodItem[], dataOrders: Order[]) {\n    this.pantry = dataPantry\n    this.inventory = dataInventory\n    this.orders = dataOrders\n  }\n  /**\n   * Returns the total numbers of orders for a given pantry\n   * @param type optional OrderStatus stating the desired OrderStatus\n   * @returns number of orders, optionally of a type\n   */\n  getNumOrder(type?: OrderStatus): number {\n    let retval = 0\n    if (type) {\n      this.orders.forEach(order => {\n        if (order.status === type) {\n          retval += 1\n        }\n      });\n    }\n    else if (this.orders) {\n      retval = this.orders?.length\n    }\n    return retval\n  }\n\n  /**\n   * Gets a list of all food items of order types not cancelled or picked up\n   * @returns FoodItem list of all active items\n   */\n  getOutstandingItems(): FoodItem[] {\n    let retval: FoodItem[] = []\n    this.orders.forEach(order => {\n      if (order.status === OrderStatus.Processing) {\n        retval = retval.concat(order.items)\n      }\n    });\n    return retval\n  }\n\n  /**\n   * Sorts a list of orders by datetime\n   * @param orders The orderlist to be sorted\n   */\n  sortOrdersByDate(orders: Order[]) {\n    orders.sort((a: Order, b: Order) => {\n      return (- a.timestamp.getTime() + b.timestamp.getTime())\n    })\n  }\n\n  /**\n   * Returns a list of orders that have been filled \n   * @returns Order[] of filled orders\n   */\n  getOrderHistory(): Order[] {\n    let retval: Order[] = []\n    this.orders.forEach(order => {\n      if (order.status === OrderStatus['Order Picked Up'])\n        retval.push(order)\n    });\n    this.sortOrdersByDate(retval)\n    return retval\n  }\n\n  /**\n   * For a list of food items, returns the number of occurences for that item\n   * @param list The list of food items\n   * @param itemName The item name\n   * @returns number of occurences in the foodlist\n   */\n  getNumItemOccurrences(list: FoodItem[], itemName: string): number {\n    let counter: number = 0\n    list.forEach(item => {\n      if (item.name === itemName) {\n        counter += item.quantity\n      }\n    });\n    return counter\n  }\n\n  /**\n   * Creates a list of all food items in a given order list\n   * @param orders The orders to parse\n   * @returns The full list of items from an order list\n   */\n  getItemsFromOrders(orders: Order[]) {\n    let retval: FoodItem[] = []\n    orders.forEach(order => {\n      retval = retval.concat(order.items)\n    });\n    return retval\n  }\n\n  /**\n   * Returns a list of lists where sublist are the orders for a given month\n   * @returns History list of lists \n   */\n  orderHistoryByMonth() {\n    let retval: Order[][] = []\n    let history = this.getOrderHistory()\n    let i: number = 0\n    this.sortOrdersByDate(history)\n\n    history.forEach(order => {\n      if (retval.length === 0) {\n        retval.push([order])\n      }\n      else if (order.timestamp.getMonth() === retval[i][0].timestamp.getMonth()\n        && order.timestamp.getFullYear() === retval[i][0].timestamp.getFullYear()) {\n        retval[i].push(order)\n      }\n      else {\n        retval.push([order])\n        i += 1\n      }\n    });\n    return retval.reverse()\n  }\n\n  /**\n   * Reshapes an order list to a list of order lists by month\n   * @param orderList The list of orders\n   * @returns List of order lists by month\n   */\n  sortOrderListByMonth(orderList: Order[]) {\n    let retval: Order[][] = []\n    let i: number = 0\n    this.sortOrdersByDate(orderList)\n\n    orderList.forEach(order => {\n      if (retval.length === 0) {\n        retval.push([order])\n      }\n      else if (order.timestamp.getMonth() === retval[i][0].timestamp.getMonth()\n        && order.timestamp.getFullYear() === retval[i][0].timestamp.getFullYear()) {\n        retval[i].push(order)\n      }\n      else {\n        retval.push([order])\n        i += 1\n      }\n    });\n    return retval\n  }\n\n  /**\n   * Returns a list containing the number of orders by month\n   * @returns List of numbers of orders by month\n   */\n  getNumOrderByMonth() {\n    let retval: TimestampedOrders[] = []\n    let history = this.orderHistoryByMonth()\n    history.forEach(orderList => {\n      retval.push({\n        \"orders\": orderList.length,\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'})\n      })\n    });\n    return retval\n  }\n\n  /**\n   * Returns a list of the number of item occurences by month\n   * @param itemName The name of the item to query\n   */\n  getItemDemandByMonth(itemName: string) {\n    let retval: TimestampedItems[] = []\n    let history = this.orderHistoryByMonth()\n    history.forEach(orderList => {\n      let sum: number = 0\n      orderList.forEach(order => {\n        sum += this.getNumItemOccurrences(order.items, itemName)\n      });\n      retval.push({\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'}),\n        \"items\": sum\n      })\n    })\n    return retval\n  }\n\n  /**\n   * Returns a list of timestamped items within a date range\n   * @param itemName The name of the item to search for\n   * @param start The start date of the range\n   * @param end The end date of the range\n   * @returns List of timestamped items\n   */\n  getItemDemandInRange(itemName:string, start:Date, end:Date) {\n    let retval: TimestampedItems[] = []\n    let history = this.getOrderHistory()\n\n    let cut = this.getOrdersInDateRange(history, start, end)\n    let cutReshaped = this.sortOrderListByMonth(cut)\n\n    cutReshaped.forEach(orderList => {\n      let sum: number = 0\n      orderList.forEach(order => {\n        sum += this.getNumItemOccurrences(order.items, itemName)\n      });\n      retval.push({\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'}),\n        \"items\": sum\n      })\n    })\n    return retval\n  }\n\n  /**\n   * Returns the list of orders within a given range\n   * @param orderList The list of orders to parse\n   * @param start The start date of the range\n   * @param end The end date of the range\n   * @returns The list of orders falling within the range\n   */\n  getOrdersInDateRange(orderList: Order[], start: Date, end: Date) {\n    let retval: Order[] = []\n    orderList.forEach(order => {\n      if (order.timestamp.getTime() >= start.getTime() && order.timestamp.getTime()  {\n        i++\n        a += i * element\n        b += i\n        c += element\n        d += i ** 2\n      });\n\n      return (n * (a) - b * c) / (n * d - (b ** 2))\n    }\n  }\n\n  //FORECASTING AND PREDICTION FUNCTIONS\n\n  /**\n   * Computes the current month order demand percent difference to previous year order demand\n   * @returns The percent difference in current year order demand to previous year order demand\n   */\n  prevYearDiff() {\n    let history = this.getOrderHistory()\n    let t2 = new Date()\n    let t1 = this.calcPrevDate(t2, 1)\n    let t3 = this.calcPrevDate(t2, 13)\n    let t4 = this.calcPrevDate(t2, 12)\n    let period1 = this.getOrdersInDateRange(history, t1, t2)\n    let period2 = this.getOrdersInDateRange(history, t3, t4)\n\n    if (period2.length == 0) {\n      return 0\n    }\n\n    return (period1.length - period2.length) / period2.length\n  }\n\n  /**\n   * Computes the current month item demand percent difference compared to previous year\n   * @param itemName The name of the item to parse\n   * @returns The percent difference of current to previous year item demand\n   */\n  prevYearItemDiff(itemName: string) {\n    let history = this.getOrderHistory()\n    let t2 = new Date()\n    let t1 = this.calcPrevDate(t2, 1)\n    let t3 = this.calcPrevDate(t2, 13)\n    let t4 = this.calcPrevDate(t2, 12)\n    let period1 = this.getOrdersInDateRange(history, t1, t2)\n    let period2 = this.getOrdersInDateRange(history, t3, t4)\n\n    let currentDemand = this.getNumItemOccurrences(this.getItemsFromOrders(period1), itemName)\n    let previousDemand = this.getNumItemOccurrences(this.getItemsFromOrders(period2), itemName)\n\n    if (previousDemand == 0) {\n      return 0\n    }\n\n    return (currentDemand - previousDemand) / previousDemand\n  }\n\n  /**\n   * Returns The linear regression of total order frequency trend on a monthly basis for n months\n   * @param n The number of months n to compute the linear regression on\n   * @returns A trend, positive or negative, corresponding to the desired period\n   */\n  getXMonthTrend(n: number): number {\n    let history = this.getOrderHistory()\n    let now = new Date()\n    let then = this.calcPrevDate(now, n)\n    let cut = this.getOrdersInDateRange(history, then, now)\n    let i: number = 0\n\n    let buckets: number[] = []\n    let curMonth: number = 0\n\n    cut.forEach(order => {\n      if (buckets.length == 0) {\n        buckets = [1]\n        curMonth = order.timestamp.getMonth()\n      }\n      else if (order.timestamp.getMonth() == curMonth) {\n        buckets[i] += 1\n      }\n      else {\n        buckets.push(1)\n        curMonth = order.timestamp.getMonth()\n        i++\n      }\n    });\n\n    // Negation a result of most recent months occurring at front of array\n    return -this.calcLinearRegression(buckets)\n  }\n\n  /**\n   * Returns The linear regression of item frequency trend on a monthly basis for n months\n   * @param n The number of months n to compute the linear regression on\n   * @param itemName The name of the item to parse for\n   * @returns A trend, positive or negative, corresponding to the desired period\n   */\n  getXMonthItemTrend(n: number, itemName: string): number {\n    let history = this.getOrderHistory()\n    let now = new Date()\n    let then = this.calcPrevDate(now, n)\n    let cut = this.getOrdersInDateRange(history, then, now)\n    let i: number = 0\n\n    let buckets: number[] = []\n    let curMonth: number = 0\n\n    cut.forEach(order => {\n      if (buckets.length == 0) {\n        buckets = [this.getNumItemOccurrences(order.items, itemName)]\n        curMonth = order.timestamp.getMonth()\n      }\n      else if (order.timestamp.getMonth() == curMonth) {\n        buckets[i] += this.getNumItemOccurrences(order.items, itemName)\n      }\n      else {\n        buckets.push(this.getNumItemOccurrences(order.items, itemName))\n        curMonth = order.timestamp.getMonth()\n        i++\n      }\n    });\n    // Negation a result of most recent months occurring at front of array\n    return -this.calcLinearRegression(buckets)\n  }\n\n  /**\n   * Computes the 1 Dimensional Convolution of an array with a kernel\n   * @note Uses average padding\n   * @param array The array to be convolved\n   * @param kernel The kernel to convolve with\n   * @param norm The normalization factor of the convolution\n   * @returns The result of the convolution, an array of numbers\n   */\n  convolve1D(array: number[], kernel: number[], norm: number): number[] {\n    let copy = []\n    let retval = []\n    let avg = 0\n\n    array.forEach(num => {\n      copy.push(num)\n      avg += num\n    });\n\n    avg /= array.length\n    let paddingNum = (kernel.length / 2) | 0\n\n    for (let i = 0; i  {\n      demandHist.push(element.orders)\n    })\n    return this.convolve1D(demandHist, [-1, -2, 0, 2, 1], 6)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementPage.html":{"url":"components/UserManagementPage.html","title":"component - UserManagementPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.page.ts\n\n\n\n    \n        Description\n    \n    \n        User management page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                styleUrls\n                ./user-management.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-management.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                length\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                pantryId\n                            \n                            \n                                records\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                makeAdmin\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                removeAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, alertController: AlertController, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.page.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        makeAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeAdmin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-management/user-management.page.ts:65\n                \n            \n\n\n            \n                \n                    Calls the firebase service to promote a user. Then updates user perms on the table\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user to promote\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-management/user-management.page.ts:44\n                \n            \n\n\n            \n                \n                    Retreives a pantry's users and intializes the table data\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAdmin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-management/user-management.page.ts:77\n                \n            \n\n\n            \n                \n                    Calls the firebase service to demote a user. Then updates user perms on the table.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user to demote\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatMenuTrigger)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['email', 'permissions', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [5, 10, 25, 100]\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pantryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        records\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { User } from '../../../../globalModels/user';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AlertController } from '@ionic/angular';\nimport { FirebaseService } from '../services/firebase.service';\nimport { AlertService } from '../services/alert.service';\n/**\n * User management page\n */\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.page.html',\n  styleUrls: ['./user-management.page.scss'],\n})\nexport class UserManagementPage implements OnInit {\n\n  displayedColumns: string[] = ['email', 'permissions', 'actions']\n  records: MatTableDataSource\n  length: number = 0\n  pageSize = 5\n  pageSizeOptions: number[] = [5, 10, 25, 100]\n  pantryId = ''\n\n  @ViewChild(MatPaginator) paginator: MatPaginator\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger\n\n  constructor(\n    public dialog: MatDialog,\n    private alertController: AlertController,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n  ) {\n\n  }\n\n  /**\n   * Retreives a pantry's users and intializes the table data\n   */\n  async ngOnInit() {\n    try {\n      this.pantryId = this.firebaseService.getPantryId()\n      let data = await this.firebaseService.getUsers()\n      this.records = new MatTableDataSource(data)\n      this.length = this.records.data.length\n      this.records.paginator = this.paginator\n      this.records.sort = this.sort\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n    // for (let d of data) {\n    //   console.log(d)\n    // }\n  }\n\n  /**\n   * Calls the firebase service to promote a user. Then updates user perms on the table\n   * @param user user to promote\n   */\n  async makeAdmin(user: User) {\n    await this.firebaseService.promoteUser(user.uid).then(async () => {\n      console.log('getPerms')\n      user.perms = await this.firebaseService.getPerms(user)\n      console.log(user.perms)\n    })\n  }\n\n  /**\n   * Calls the firebase service to demote a user. Then updates user perms on the table.\n   * @param user user to demote\n   */\n  async removeAdmin(user: User) {\n    await this.firebaseService.demoteUser(user.uid).then(async () => {\n      user.perms = await this.firebaseService.getPerms(user)\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    User Management\n  \n\n\n\n    \n      \n        Email\n        {{element.email}}\n      \n      \n        Permissions\n        \n          {{element.perms.admin === true && element.perms.pantry == pantryId ? 'Admin' : 'Not Admin'}}\n        \n      \n      \n        Actions\n        \n          \n                      \n          \n          \n            \n              Grant Admin Access\n            \n            \n              Revoke Admin Access\n            \n          \n        \n      \n\n      \n      \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./user-management.page.scss\n                \n                .table-container{\n    height: 100vh\n}\n\n\ntable {\n    width: 100%;\n}\n\n.mat-cell {\n    width: 40%;\n}\n  \n.mat-column-gender {\n    width: 20%;\n}\n\nth.mat-sort-header-sorted {\n    color: black;\n}\n  \n\n.mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.actions {\n    fill: black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      User Management                    Email        {{element.email}}                    Permissions                  {{element.perms.admin === true && element.perms.pantry == pantryId ? \\'Admin\\' : \\'Not Admin\\'}}                            Actions                                                                                      Grant Admin Access                                      Revoke Admin Access                                                            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserManagementPageModule.html":{"url":"modules/UserManagementPageModule.html","title":"module - UserManagementPageModule","body":"\n                   \n\n\n\n\n    Modules\n    UserManagementPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserManagementPageModule\n\n\n\ncluster_UserManagementPageModule_declarations\n\n\n\ncluster_UserManagementPageModule_imports\n\n\n\n\nUserManagementPage\n\nUserManagementPage\n\n\n\nUserManagementPageModule\n\nUserManagementPageModule\n\nUserManagementPageModule -->\n\nUserManagementPage->UserManagementPageModule\n\n\n\n\n\nUserManagementPageRoutingModule\n\nUserManagementPageRoutingModule\n\nUserManagementPageModule -->\n\nUserManagementPageRoutingModule->UserManagementPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user-management/user-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserManagementPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserManagementPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserManagementPageRoutingModule } from './user-management-routing.module';\n\nimport { UserManagementPage } from './user-management.page';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserManagementPageRoutingModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDialogModule,\n  ],\n  declarations: [UserManagementPage]\n})\nexport class UserManagementPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserManagementPageRoutingModule.html":{"url":"modules/UserManagementPageRoutingModule.html","title":"module - UserManagementPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserManagementPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user-management/user-management-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserManagementPage } from './user-management.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserManagementPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserManagementPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOrderDialog.html":{"url":"components/ViewOrderDialog.html","title":"component - ViewOrderDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOrderDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-management/order-management.page.ts\n\n\n\n    \n        Description\n    \n    \n        View order dialog that will be used on this page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                view-order-dialog\n            \n\n\n\n\n            \n                templateUrl\n                view-order-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Order)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-management/order-management.page.ts:214\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Order\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(status: OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:225\n                \n            \n\n\n            \n                \n                    Converts the numerical order status to the coresponding string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        OrderStatus to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        String representaion of OrderStatus\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:215\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Order } from '../../../../globalModels/order';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { AlertController } from '@ionic/angular';\nimport { Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { Observable, from } from 'rxjs';\nimport { AlertService } from '../services/alert.service';\n\n/**\n * Order management page\n */\n@Component({\n  selector: 'app-order-management',\n  templateUrl: './order-management.page.html',\n  styleUrls: ['./order-management.page.scss'],\n})\n\nexport class OrderManagementPage implements AfterViewInit {\n\n  displayedColumns: string[] = ['timestamp', 'id', 'status', 'actions'];\n  records: MatTableDataSource = new MatTableDataSource([]);\n\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatTable, { static: true }) table: MatTable;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n  constructor(\n    public dialog: MatDialog,\n    private firebase: FirebaseService,\n    private alertController: AlertController,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async ionViewWillEnter() {\n\n  }\n\n  /**\n   * Retrieves orders from the DB and initalizes table.\n   */\n  async ngAfterViewInit() {\n    try {\n      let orders = await this.firebase.getOrders()\n      // orders.sort(function(a, b){\n      //   return b.timestamp.getDate() - a.timestamp.getDate()\n      // })\n      this.records.data = orders\n      this.length = this.records.data.length\n      this.records.paginator = this.paginator;\n      this.records.sort = this.sort;\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n\n  /**\n   * Updates the table based on the value in the filter input\n   * @param event Event emited by filter changing\n   */\n  updateFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Removes an order from the table\n   * @param order Order to be removed\n   */\n  removeItem(order: Order) {\n    //find the index from id\n    let removed = this.records.data.splice(this.records.data.indexOf(order), 1)\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n\n  /**\n   * Opens an alert for the user for confirm if they want to remove an order\n   * @param order Order to be removed\n   */\n  async openAlert(order: Order) {\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => { }\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(order)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param order Order to edit\n   */\n  openEditDialog(order: Order) {\n    const dialogRef = this.dialog.open(EditOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * Opens the order view dialog\n   * @param order Order to view\n   */\n  openViewDialog(order: Order) {\n    const dialogRef = this.dialog.open(ViewOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n}\n\n/**\n * Edit order dialog that will be used on this page\n */\n@Component({\n  selector: 'edit-order-dialog',\n  templateUrl: 'edit-order-dialog.html'\n})\n\nexport class EditOrderDialog implements OnInit {\n  values = Object.values(OrderStatus).filter((v) => isNaN(Number(v)))\n  enumvals = Object.values(OrderStatus).filter((v) => !isNaN(Number(v)))\n  value = this.getEnumKey(this.data.status)\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n\n  ngOnInit() {\n\n    // console.log(this.values)\n    // console.log(this.enumvals)\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getEnumKey(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Saves the changes made to an order in the DB (mainly order status)\n   * @param data Order to update in the DB\n   */\n  async saveOrder(data: Order) {\n    console.log(this.value)\n    data.status = this.values.indexOf(this.value) + 1\n    console.log(data.status)\n    try {\n      this.firebaseService.updateOrderStatus(data, data.status)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update order status. Please try again later.', ['Ok'])\n    }\n    \n  }\n}\n\n/**\n * View order dialog that will be used on this page\n */\n@Component({\n  selector: 'view-order-dialog',\n  templateUrl: 'view-order-dialog.html'\n})\nexport class ViewOrderDialog implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order) { }\n  ngOnInit() {\n\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n}\n    \n\n    \n        Order Number: {{data.id}}\n\n    \n        General\n        Order Number: {{data.id}}\n        Timestamp: {{data.timestamp.toLocaleString()}}\n        Order Status: {{getStatus(data.status)}}\n        \n        \n        \n            \n                Order Contents:\n                \n                    \n                        \n                            \n                                {{item.name}}, {{item.quantity}}\n                            \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        \n            Close\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Order Number: {{data.id}}            General        Order Number: {{data.id}}        Timestamp: {{data.timestamp.toLocaleString()}}        Order Status: {{getStatus(data.status)}}                                                    Order Contents:                                                                                                                        {{item.name}}, {{item.quantity}}                                                                                                                                                                    Close            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewOrderDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/forgot-password/forgot-password.page.ts\n            \n            component\n            ForgotPasswordPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/home.page.ts\n            \n            component\n            HomePage\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/inventory-management/inventory-management.page.ts\n            \n            component\n            AddDialog\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/inventory-management/inventory-management.page.ts\n            \n            component\n            EditDialog\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/app/inventory-management/inventory-management.page.ts\n            \n            component\n            InventoryManagementPage\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                src/app/login/login.module.ts\n            \n            interface\n            Pantry\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/app/order-management/order-management.page.ts\n            \n            component\n            EditOrderDialog\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/order-management/order-management.page.ts\n            \n            component\n            OrderManagementPage\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                src/app/order-management/order-management.page.ts\n            \n            component\n            ViewOrderDialog\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/pantry-statistics/pantry-statistics.page.ts\n            \n            component\n            PantryStatisticsPage\n            \n                37 %\n                (9/24)\n            \n        \n        \n            \n                \n                src/app/pantry-statistics/pantry-statistics.page.ts\n            \n            interface\n            TimestampedItems\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pantry-statistics/pantry-statistics.page.ts\n            \n            interface\n            TimestampedOrders\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/profile/profile.page.ts\n            \n            component\n            EditDetailsDialog\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/profile/profile.page.ts\n            \n            component\n            ProfilePage\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/services/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            variable\n            auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            variable\n            functions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/firebase.service.ts\n            \n            injectable\n            FirebaseService\n            \n                81 %\n                (18/22)\n            \n        \n        \n            \n                \n                src/app/services/firebase.service.ts\n            \n            variable\n            db\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/firebase.service.ts\n            \n            variable\n            functions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/forecast.service.ts\n            \n            injectable\n            ForecastService\n            \n                82 %\n                (23/28)\n            \n        \n        \n            \n                \n                src/app/services/forecast.service.ts\n            \n            interface\n            TimestampedItems\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/forecast.service.ts\n            \n            interface\n            TimestampedOrders\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.page.ts\n            \n            component\n            UserManagementPage\n            \n                26 %\n                (4/15)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            analytics\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            authentication\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            db\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            firebaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.4\n        \n            @angular/cdk : ^15.2.3\n        \n            @angular/common : ^15.2.4\n        \n            @angular/core : ^15.2.4\n        \n            @angular/forms : ^15.2.4\n        \n            @angular/material : ^15.2.3\n        \n            @angular/platform-browser : ^15.2.4\n        \n            @angular/platform-browser-dynamic : ^15.2.4\n        \n            @angular/router : ^15.2.4\n        \n            @capacitor/app : 4.1.1\n        \n            @capacitor/core : 4.6.3\n        \n            @capacitor/haptics : 4.1.0\n        \n            @capacitor/keyboard : 4.1.1\n        \n            @capacitor/status-bar : 4.1.1\n        \n            @ionic/angular : ^6.1.9\n        \n            @swimlane/ngx-datatable : ^20.1.0\n        \n            firebase : ^9.17.1\n        \n            ionicons : ^6.0.3\n        \n            ng2-charts : ^4.1.1\n        \n            ngx-color-picker : ^14.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ForgotPasswordPageModule\n\n\n\ncluster_ForgotPasswordPageModule_declarations\n\n\n\ncluster_ForgotPasswordPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_InventoryManagementPageModule\n\n\n\ncluster_InventoryManagementPageModule_declarations\n\n\n\ncluster_InventoryManagementPageModule_imports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_OrderManagementPageModule\n\n\n\ncluster_OrderManagementPageModule_declarations\n\n\n\ncluster_OrderManagementPageModule_imports\n\n\n\ncluster_PantryStatisticsPageModule\n\n\n\ncluster_PantryStatisticsPageModule_declarations\n\n\n\ncluster_PantryStatisticsPageModule_imports\n\n\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_UserManagementPageModule\n\n\n\ncluster_UserManagementPageModule_declarations\n\n\n\ncluster_UserManagementPageModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\n\n\nForgotPasswordPageModule\n\nForgotPasswordPageModule\n\nForgotPasswordPageModule -->\n\nForgotPasswordPage->ForgotPasswordPageModule\n\n\n\n\n\nForgotPasswordPageRoutingModule\n\nForgotPasswordPageRoutingModule\n\nForgotPasswordPageModule -->\n\nForgotPasswordPageRoutingModule->ForgotPasswordPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nAddDialog\n\nAddDialog\n\n\n\nInventoryManagementPageModule\n\nInventoryManagementPageModule\n\nInventoryManagementPageModule -->\n\nAddDialog->InventoryManagementPageModule\n\n\n\n\n\nEditDialog\n\nEditDialog\n\nInventoryManagementPageModule -->\n\nEditDialog->InventoryManagementPageModule\n\n\n\n\n\nInventoryManagementPage\n\nInventoryManagementPage\n\nInventoryManagementPageModule -->\n\nInventoryManagementPage->InventoryManagementPageModule\n\n\n\n\n\nInventoryManagementPageRoutingModule\n\nInventoryManagementPageRoutingModule\n\nInventoryManagementPageModule -->\n\nInventoryManagementPageRoutingModule->InventoryManagementPageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nEditOrderDialog\n\nEditOrderDialog\n\n\n\nOrderManagementPageModule\n\nOrderManagementPageModule\n\nOrderManagementPageModule -->\n\nEditOrderDialog->OrderManagementPageModule\n\n\n\n\n\nOrderManagementPage\n\nOrderManagementPage\n\nOrderManagementPageModule -->\n\nOrderManagementPage->OrderManagementPageModule\n\n\n\n\n\nViewOrderDialog\n\nViewOrderDialog\n\nOrderManagementPageModule -->\n\nViewOrderDialog->OrderManagementPageModule\n\n\n\n\n\nOrderManagementPageRoutingModule\n\nOrderManagementPageRoutingModule\n\nOrderManagementPageModule -->\n\nOrderManagementPageRoutingModule->OrderManagementPageModule\n\n\n\n\n\nPantryStatisticsPage\n\nPantryStatisticsPage\n\n\n\nPantryStatisticsPageModule\n\nPantryStatisticsPageModule\n\nPantryStatisticsPageModule -->\n\nPantryStatisticsPage->PantryStatisticsPageModule\n\n\n\n\n\nPantryStatisticsPageRoutingModule\n\nPantryStatisticsPageRoutingModule\n\nPantryStatisticsPageModule -->\n\nPantryStatisticsPageRoutingModule->PantryStatisticsPageModule\n\n\n\n\n\nEditDetailsDialog\n\nEditDetailsDialog\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nEditDetailsDialog->ProfilePageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nUserManagementPage\n\nUserManagementPage\n\n\n\nUserManagementPageModule\n\nUserManagementPageModule\n\nUserManagementPageModule -->\n\nUserManagementPage->UserManagementPageModule\n\n\n\n\n\nUserManagementPageRoutingModule\n\nUserManagementPageRoutingModule\n\nUserManagementPageModule -->\n\nUserManagementPageRoutingModule->UserManagementPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        27 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForgotPasswordPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForgotPasswordPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InventoryManagementPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InventoryManagementPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderManagementPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderManagementPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PantryStatisticsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PantryStatisticsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserManagementPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserManagementPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            analytics   (src/.../main.ts)\n                        \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            auth   (src/.../auth.service.ts)\n                        \n                        \n                            authentication   (src/.../main.ts)\n                        \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            db   (src/.../main.ts)\n                        \n                        \n                            db   (src/.../firebase.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            firebaseConfig   (src/.../main.ts)\n                        \n                        \n                            functions   (src/.../firebase.service.ts)\n                        \n                        \n                            functions   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        analytics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getAnalytics(app)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : initializeApp(firebaseConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authentication\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getAuth(app)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFirestore(app)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firebaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.firebaseConfig\n                    \n                \n\n\n        \n    \n\n    src/app/services/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : authentication\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        functions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFunctions()\n                    \n                \n\n\n        \n    \n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'adminApp',\n  webDir: 'www',\n  bundledWebRuntime: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/services/firebase.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFirestore()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        functions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFunctions()\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n\n  firebaseConfig: {\n    apiKey: \"AIzaSyAKaIr2_B6rLny9ctiI-e4EGa5wuCycgJY\",\n    authDomain: \"foodpantry-64c40.firebaseapp.com\",\n    projectId: \"foodpantry-64c40\",\n    storageBucket: \"foodpantry-64c40.appspot.com\",\n    messagingSenderId: \"393456523030\",\n    appId: \"1:393456523030:web:1d160ece617e4e8eaf2237\",\n    measurementId: \"G-P8H232S2F7\"\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n\n  firebaseConfig: {\n    apiKey: \"AIzaSyAKaIr2_B6rLny9ctiI-e4EGa5wuCycgJY\",\n    authDomain: \"foodpantry-64c40.firebaseapp.com\",\n    projectId: \"foodpantry-64c40\",\n    storageBucket: \"foodpantry-64c40.appspot.com\",\n    messagingSenderId: \"393456523030\",\n    appId: \"1:393456523030:web:1d160ece617e4e8eaf2237\",\n    measurementId: \"G-P8H232S2F7\"\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
