var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddDialog.html",[0,0.24,1,1.014]],["body/components/AddDialog.html",[0,0.346,1,1.346,2,1.146,3,0.159,4,0.159,5,0.779,6,0.779,7,0.779,8,0.088,9,3.513,10,3.267,11,1.114,12,1.586,13,1.676,14,0.779,15,2.142,16,2.017,17,2.075,18,1.501,19,2.127,20,0.621,21,0.826,22,3.901,23,4.312,24,3.601,25,3.192,26,3.901,27,0.921,28,1.783,29,3.261,30,1.819,31,0.906,32,1.884,33,1.657,34,2.693,35,1.579,36,3.43,37,0.625,38,0.022,39,1.266,40,0.988,41,0.561,42,2.205,43,2.355,44,2.493,45,2.159,46,2.4,47,2.436,48,0.826,49,2.205,50,1.281,51,0.872,52,0.823,53,2.53,54,1.923,55,2.205,56,1.24,57,2.205,58,2.205,59,2.205,60,0.3,61,1.996,62,0.872,63,0.167,64,1.624,65,0.872,66,1.856,67,0.981,68,1.856,69,0.981,70,1.856,71,0.981,72,1.624,73,1.281,74,2.127,75,0.475,76,2.726,77,0.872,78,0.779,79,1.114,80,1.114,81,1.514,82,1.081,83,0.737,84,1.193,85,0.697,86,1.193,87,0.195,88,0.195,89,0.921,90,1.193,91,3.74,92,4.037,93,1.624,94,1.193,95,1.193,96,2.387,97,1.193,98,1.438,99,1.193,100,1.193,101,1.193,102,0.981,103,1.193,104,1.193,105,1.193,106,1.193,107,1.114,108,1.624,109,1.672,110,1.281,111,1.76,112,1.572,113,1.501,114,1.672,115,1.667,116,1.283,117,1.514,118,0.625,119,1.514,120,1.193,121,1.193,122,1.193,123,1.193,124,1.193,125,1.193,126,1.283,127,2.601,128,1.672,129,1.283,130,1.996,131,2.179,132,2.277,133,1.283,134,1.283,135,1.283,136,1.143,137,1.283,138,1.283,139,1.283,140,1.283,141,1.283,142,2.601,143,1.996,144,1.114,145,2.4,146,2.601,147,1.283,148,1.624,149,1.672,150,1.283,151,1.672,152,2.712,153,2.449,154,2.127,155,2.277,156,1.996,157,0.781,158,1.672,159,1.193,160,1.044,161,1.193,162,1.193,163,1.283,164,1.193,165,1.624,166,2.783,167,1.996,168,1.996,169,1.283,170,1.672,171,1.193,172,1.899,173,1.672,174,2.127,175,1.672,176,1.733,177,1.733,178,1.733,179,1.672,180,1.672,181,1.672,182,1.672,183,1.672,184,1.672,185,3.601,186,0.779,187,2.601,188,1.672,189,1.672,190,1.672,191,2.601,192,1.672,193,2.601,194,1.672,195,1.514,196,1.672,197,1.672,198,1.672,199,1.672,200,1.514,201,0.973,202,1.114,203,1.672,204,1.672,205,2.159,206,1.388,207,2.601,208,1.672,209,1.672,210,2.947,211,3.901,212,2.601,213,1.672,214,1.672,215,1.672,216,1.672,217,3.901,218,4.579,219,4.579,220,1.672,221,1.672,222,1.672,223,2.355,224,2.601,225,2.449,226,1.672,227,1.044,228,1.514,229,1.672,230,1.672,231,1.672,232,1.114,233,1.672,234,1.672,235,1.283,236,1.114,237,1.672,238,1.672,239,1.672,240,3.43,241,2.93,242,3.43,243,0.779,244,1.211,245,1.084,246,0.779,247,1.586,248,0.779,249,1.676,250,0.625,251,1.579,252,0.779,253,0.625,254,0.737,255,0.625,256,1.07,257,0.592,258,0.66,259,0.779,260,0.561,261,0.779,262,1.486,263,0.561,264,0.779,265,0.592,266,0.531,267,0.376,268,0.779,269,0.592,270,0.779,271,0.592,272,0.625,273,0.779,274,0.779,275,0.779,276,0.01,277,0.01]],["title/injectables/AlertService.html",[278,1.414,279,1.263]],["body/injectables/AlertService.html",[3,0.22,4,0.22,8,0.188,20,0.859,27,1.578,28,1.81,31,1.022,35,1.578,37,1.666,38,0.022,39,1.265,40,1.128,41,1.494,48,1.142,56,1.591,60,0.272,63,0.188,74,3.53,75,1.022,87,0.22,88,0.22,115,1.666,131,2.253,136,1.142,155,3.902,159,2.568,160,3.309,161,3.871,164,3.871,171,2.568,276,0.017,277,0.017,278,2.323,279,2.075,280,2.987,281,4.055,282,5.877,283,4.746,284,4.746,285,5.877,286,4.746,287,5.877,288,5.021,289,5.877,290,3.699,291,5.021,292,4.457,293,5.877,294,1.876,295,2.568,296,2.398,297,3.599]],["title/components/AppComponent.html",[0,0.24,250,1.014]],["body/components/AppComponent.html",[0,0.385,1,1.073,2,1.696,3,0.175,4,0.175,5,1.336,6,1.336,7,1.336,8,0.15,14,1.336,15,2.29,16,1.264,17,1.336,18,1.606,20,0.685,21,1.222,27,1.364,31,0.815,34,1.793,35,1.834,37,1.44,38,0.022,39,1.319,40,1.227,41,1.291,44,1.336,48,1.474,50,1.896,56,1.455,60,0.296,63,0.15,75,0.815,81,2.599,82,1.305,83,2.281,85,1.606,87,0.175,88,0.175,89,1.016,157,1.305,172,1.914,201,1.073,236,2.566,243,1.336,244,1.793,245,1.606,246,1.336,247,2.046,248,1.336,249,2.162,250,1.737,251,1.877,252,1.336,253,1.073,254,1.264,255,1.073,256,1.624,257,1.016,258,1.133,259,1.336,260,0.962,261,1.336,262,2.023,263,0.962,264,1.336,265,1.016,266,0.911,267,1.089,268,1.336,269,1.016,270,1.336,271,1.016,272,1.073,273,1.336,274,1.336,275,1.336,276,0.015,277,0.015,296,2.566,297,2.87,298,1.793,299,3.234,300,5.731,301,5.078,302,4.14,303,5.731,304,5.731,305,6.125,306,5.078,307,6.125,308,4.645,309,2.87,310,5.245,311,5.078,312,3.785,313,5.078,314,3.785,315,3.608,316,3.785,317,3.234,318,3.785,319,3.785,320,3.785,321,1.336,322,3.234,323,3.234,324,3.785,325,3.785,326,3.785,327,3.785,328,2.26,329,5.078,330,5.078,331,2.747,332,4.338,333,4.338,334,3.487,335,2.747,336,3.197,337,4.338,338,2.955,339,5.078,340,2.008,341,3.234,342,3.785,343,3.785]],["title/modules/AppModule.html",[344,1.014,345,2.457]],["body/modules/AppModule.html",[3,0.23,4,0.23,8,0.197,38,0.022,60,0.331,63,0.197,75,1.068,87,0.23,88,0.23,250,2.091,251,1.332,276,0.017,277,0.017,321,1.752,340,1.962,345,4.99,346,1.194,347,2.388,348,4.239,349,4.239,350,4.239,351,4.239,352,4.445,353,2.688,354,2.08,355,4.962,356,2.688,357,1.622,358,6.039,359,3.763,360,1.622,361,6.039,362,5.16,363,3.763,364,6.039,365,2.208,366,6.039,367,4.962,368,2.208,369,6.039,370,4.962,371,4.962,372,4.962,373,4.962,374,4.962]],["title/modules/AppRoutingModule.html",[344,1.014,352,2.252]],["body/modules/AppRoutingModule.html",[3,0.203,4,0.203,8,0.174,10,2.372,38,0.022,60,0.285,63,0.174,82,0.998,83,2.056,87,0.203,88,0.203,136,1.055,157,0.998,256,1.115,258,1.312,267,0.747,276,0.016,277,0.016,321,1.547,331,3.33,334,3.839,335,2.372,336,2.759,346,1.055,352,3.519,357,1.177,360,1.501,375,4.383,376,2.076,377,5.59,378,2.648,379,2.433,380,4.779,381,4.383,382,3.418,383,7.114,384,4.383,385,7.114,386,4.383,387,5.85,388,5.59,389,5.59,390,4.24,391,5.59,392,5.59,393,2.55,394,4.383,395,2.759,396,4.383,397,4.383,398,4.383,399,6.155,400,4.383,401,4.383,402,2.372,403,4.383,404,4.383,405,4.383,406,4.383,407,2.372,408,4.383,409,4.383,410,4.383,411,2.759,412,4.383,413,4.383,414,4.383,415,2.076]],["title/guards/AuthGuard.html",[380,2.457,416,2.713]],["body/guards/AuthGuard.html",[3,0.221,4,0.221,8,0.19,12,1.594,20,0.864,27,1.584,31,1.27,35,1.584,37,1.672,38,0.022,39,1.27,40,1.133,41,1.5,48,1.149,60,0.318,63,0.19,87,0.221,88,0.221,111,1.429,118,1.354,157,1.343,162,2.583,276,0.017,277,0.017,278,2.332,295,2.583,296,2.412,309,3.62,310,5.306,317,5.039,321,1.685,328,2.125,338,2.777,380,4.05,387,5.868,417,4.774,418,4.078,419,4.774,420,4.774,421,6.685,422,6.4,423,6.685,424,4.774,425,5.898,426,4.029,427,4.473,428,6.4,429,2.777,430,4.078,431,5.039,432,4.078,433,4.774,434,4.078,435,4.774,436,4.774,437,4.774,438,4.774]],["title/injectables/AuthService.html",[278,1.414,302,2.252]],["body/injectables/AuthService.html",[3,0.163,4,0.163,8,0.139,20,0.635,27,1.295,28,1.989,31,1.039,34,3.045,35,1.769,37,1.683,38,0.022,39,1.278,40,1.14,41,1.509,48,1.548,50,1.801,53,1.562,56,1.647,60,0.305,63,0.139,87,0.163,88,0.163,108,2.611,111,1.444,115,1.868,118,0.995,136,1.615,157,1.464,186,1.239,200,2.409,267,1.123,276,0.014,277,0.014,278,1.907,279,2.325,280,2.209,295,1.898,296,1.773,302,3.036,308,5.163,328,1.562,393,3.207,426,2.209,427,3.658,429,2.042,430,4.121,431,2.998,439,2.661,440,5.936,441,4.824,442,4.824,443,4.824,444,2.998,445,3.509,446,3.509,447,4.824,448,3.509,449,5.316,450,4.824,451,3.509,452,4.824,453,3.509,454,3.036,455,3.509,456,3.509,457,3.509,458,3.509,459,3.509,460,3.658,461,2.998,462,2.998,463,2.998,464,3.312,465,3.509,466,3.509,467,2.042,468,3.658,469,3.509,470,4.824,471,2.661,472,3.509,473,3.509,474,4.824,475,3.509,476,3.509,477,3.509,478,2.998,479,3.509,480,3.509,481,3.509,482,4.824,483,4.709,484,4.824,485,3.509,486,4.709,487,3.509,488,3.509,489,3.509,490,4.121,491,4.121,492,3.509,493,3.509,494,3.509,495,4.824,496,4.824,497,2.488,498,4.824,499,4.824,500,2.347,501,2.488,502,2.488,503,2.488,504,4.824,505,3.509,506,2.661,507,2.998,508,3.509,509,2.022,510,4.824,511,3.658,512,4.121,513,3.509]],["title/components/EditDetailsDialog.html",[0,0.24,253,1.014]],["body/components/EditDetailsDialog.html",[0,0.356,1,0.773,2,1.346,3,0.126,4,0.126,5,0.963,6,0.963,7,0.963,8,0.108,12,1.601,13,1.869,14,0.963,15,2.202,16,0.911,17,2.159,18,1.515,19,2.037,20,0.494,21,0.97,27,1.082,28,1.501,30,1.887,31,0.868,33,1.686,35,1.798,37,0.773,38,0.022,39,1.404,40,1.231,41,0.694,45,3.017,48,1.154,50,1.79,51,2.418,52,2.284,53,1.214,54,1.423,56,1.524,60,0.283,62,1.593,63,0.108,64,2.27,65,1.078,72,1.909,73,1.018,75,0.587,78,0.963,79,1.378,80,1.378,82,0.621,85,0.862,87,0.187,88,0.187,89,0.732,93,1.292,108,1.292,110,2.684,111,1.77,112,1.79,113,2.117,115,1.143,118,0.773,131,0.963,136,0.656,148,1.292,154,1.378,157,0.621,166,2.18,172,2.259,174,1.378,176,1.378,177,1.378,178,1.378,186,0.963,201,0.773,202,1.378,205,3.017,206,1.717,227,1.292,241,3.443,243,0.963,244,1.423,245,1.274,246,0.963,247,1.768,248,0.963,249,1.869,250,0.773,251,1.722,252,0.963,253,1.501,254,2.043,255,0.773,256,1.219,257,0.732,258,0.817,259,0.963,260,0.694,261,0.963,262,1.692,263,0.694,264,0.963,265,0.732,266,0.656,267,1.205,268,0.963,269,1.082,270,0.963,271,0.732,272,0.773,273,0.963,274,0.963,275,0.963,276,0.012,277,0.012,279,2.263,290,4.036,294,2.233,315,1.717,336,1.717,497,1.689,500,2.093,501,1.689,502,1.689,503,1.689,509,1.689,514,2.068,515,4.639,516,4.095,517,4.095,518,4.826,519,4.015,520,4.826,521,1.873,522,4.03,523,2.728,524,2.728,525,2.537,526,3.443,527,2.728,528,4.095,529,4.095,530,2.728,531,1.378,532,1.873,533,2.728,534,4.095,535,2.728,536,4.095,537,2.728,538,4.095,539,2.728,540,4.523,541,2.728,542,4.523,543,2.728,544,3.443,545,1.476,546,2.33,547,1.214,548,2.33,549,2.33,550,2.33,551,3.443,552,3.017,553,2.33,554,1.378,555,1.873,556,2.33,557,2.33,558,2.33,559,2.33,560,1.378,561,1.873,562,1.873,563,1.587,564,2.33,565,2.33,566,3.443,567,1.689,568,1.689,569,1.143,570,2.33,571,2.33,572,4.015,573,3.636,574,2.795,575,2.33,576,2.768,577,2.33,578,3.443,579,2.33,580,3.443,581,3.443,582,1.587,583,3.443,584,1.717,585,3.443,586,2.068,587,3.443,588,2.068,589,3.443,590,2.33,591,3.443,592,2.768,593,1.794,594,3.056]],["title/components/EditDialog.html",[0,0.24,201,1.014]],["body/components/EditDialog.html",[0,0.331,1,0.905,2,1.066,3,0.184,4,0.148,5,0.71,6,0.71,7,0.71,8,0.08,9,3.685,10,3.427,11,1.017,12,1.508,13,1.594,14,0.71,15,2.107,16,1.834,17,2.011,18,1.428,19,2.005,20,0.578,21,0.768,22,1.526,23,1.526,24,3.425,25,1.526,26,1.526,27,0.857,28,1.739,29,2.725,30,1.75,31,0.854,33,1.647,34,1.879,35,1.676,37,1.557,38,0.022,39,1.381,40,1.178,41,1.396,43,1.382,44,2.519,45,1.267,46,2.005,47,2.332,48,1.322,50,2.051,51,1.569,52,1.481,53,2.332,54,1.85,56,1.121,60,0.294,61,1.857,62,0.796,63,0.158,64,1.512,65,0.796,66,1.727,67,0.896,68,1.727,69,0.896,70,1.727,71,0.896,72,1.512,73,1.192,74,2.005,75,0.433,76,2.857,77,0.796,78,0.71,79,1.017,80,1.017,81,1.382,82,1.028,83,0.672,84,1.089,85,0.636,86,1.089,87,0.184,88,0.184,89,0.857,90,1.089,91,3.912,92,4.501,93,1.512,94,1.089,95,1.089,96,2.171,97,1.089,98,1.338,99,1.089,100,1.089,101,1.089,102,0.896,103,1.089,104,1.089,105,1.089,106,1.089,107,1.017,108,1.512,109,1.526,110,1.686,111,1.868,112,1.686,113,1.736,114,1.526,115,1.615,116,1.171,117,1.382,118,0.571,119,1.382,120,1.089,121,1.089,122,1.089,123,1.089,124,1.089,125,1.089,126,1.171,127,2.421,128,1.526,129,1.171,130,1.857,131,2.122,132,2.147,133,1.171,134,1.171,135,1.171,136,1.087,137,1.171,138,1.171,139,1.171,140,1.171,141,1.171,142,2.421,143,1.857,144,1.017,145,2.282,146,3.009,147,1.171,148,1.512,149,1.526,150,1.171,151,1.526,152,2.655,153,2.308,154,2.005,155,2.147,156,1.857,157,0.727,158,1.526,159,1.089,160,0.953,161,1.089,162,1.089,163,1.171,164,2.147,165,1.512,166,2.443,167,1.857,168,1.857,169,1.171,170,1.526,171,1.089,172,1.96,173,1.526,174,2.005,175,1.526,176,1.613,177,1.613,178,1.613,179,1.526,180,1.526,181,1.526,182,1.526,183,1.526,184,1.526,185,3.425,186,0.71,187,2.421,188,1.526,189,1.526,190,1.526,191,2.421,192,1.526,193,2.421,194,1.526,195,1.382,196,1.526,197,1.526,198,1.526,199,1.526,200,1.382,201,1.28,202,1.017,203,3.009,204,3.009,205,2.497,206,1.267,207,3.425,208,2.421,209,2.421,210,2.835,211,3.734,212,3.425,213,2.421,214,2.421,215,2.421,216,2.421,217,3.734,218,4.45,219,4.45,220,2.421,221,2.421,222,2.421,223,2.192,224,3.425,225,3.049,226,2.421,227,1.512,228,2.192,229,2.421,230,1.526,231,1.526,232,1.017,233,1.526,234,2.421,235,1.857,236,1.613,237,2.421,238,2.421,239,2.421,243,0.71,244,1.127,245,1.009,246,0.71,247,1.508,248,0.71,249,1.594,250,0.571,251,1.53,252,0.71,253,0.571,254,0.672,255,0.571,256,1.009,257,0.54,258,0.603,259,0.71,260,0.512,261,0.71,262,1.401,263,0.512,264,0.71,265,0.54,266,0.484,267,0.343,268,0.71,269,0.54,270,0.71,271,0.54,272,0.571,273,0.71,274,0.71,275,0.71,276,0.009,277,0.009,294,2.072,519,2.421,521,1.382,531,1.017,532,1.382,594,2.421,595,3.192,596,3.192,597,2.192,598,3.192,599,2.013,600,2.013,601,2.013,602,2.013,603,2.013,604,2.013,605,2.013,606,2.013,607,2.013,608,2.013,609,2.013,610,2.013,611,3.192,612,2.727,613,3.192,614,3.192,615,3.192,616,2.421,617,2.727]],["title/components/EditOrderDialog.html",[0,0.24,255,1.014]],["body/components/EditOrderDialog.html",[0,0.35,1,0.643,2,1.171,3,0.105,4,0.105,5,0.801,6,0.801,7,0.801,8,0.09,11,1.146,12,1.61,13,1.702,14,0.801,15,2.152,16,0.757,17,2.028,18,1.524,19,2.165,20,0.635,21,0.844,27,0.941,28,1.562,30,1.84,31,0.755,33,1.593,35,1.593,37,1.215,38,0.022,39,1.122,40,0.926,41,1.089,44,1.237,46,2.436,47,2.468,48,1.326,50,0.847,51,1.694,52,2.145,53,1.56,54,1.945,56,1.387,60,0.308,61,2.04,62,0.897,63,0.139,64,1.66,65,0.897,66,1.896,67,1.009,68,1.896,69,1.009,70,2.318,71,1.009,72,1.66,73,1.309,74,2.165,75,0.488,76,0.897,77,0.897,78,0.801,79,1.146,80,1.146,82,0.516,83,0.757,84,1.227,85,0.717,86,1.227,87,0.199,88,0.199,89,0.609,90,1.227,93,1.66,94,1.227,95,1.227,96,0.897,97,1.227,98,1.469,99,1.227,100,1.227,101,1.227,102,1.009,103,1.227,104,1.227,105,1.227,106,1.227,107,1.146,108,1.074,110,1.946,111,1.56,112,0.847,113,1.967,115,1.215,118,0.643,120,1.227,121,1.227,122,2.318,123,1.227,124,1.227,125,1.227,126,1.32,129,1.32,130,2.04,131,2.15,132,2.318,133,1.32,134,1.32,135,1.32,136,1.16,137,1.32,138,1.32,139,1.32,140,1.32,141,1.32,143,2.04,144,1.146,145,1.771,147,1.32,148,1.66,150,2.493,152,1.469,153,2.493,154,2.165,155,2.318,156,2.04,157,0.798,159,1.227,160,1.074,161,1.227,162,1.227,163,2.04,164,1.227,165,1.66,166,2.608,167,2.04,168,2.04,169,1.32,171,1.227,172,2.034,174,1.771,176,1.771,177,1.771,178,1.771,186,0.801,201,0.643,202,1.771,210,1.896,225,2.04,227,2.029,232,1.771,235,2.04,243,0.801,244,1.237,245,1.108,246,0.801,247,1.61,248,0.801,249,1.702,250,0.643,251,1.635,252,0.801,253,0.643,254,0.757,255,1.367,256,1.879,257,0.609,258,0.679,259,0.801,260,0.577,261,0.801,262,1.513,263,0.577,264,0.801,265,0.941,266,0.546,267,0.387,268,0.801,269,0.609,270,0.801,271,0.609,272,0.994,273,1.84,274,0.801,275,0.801,276,0.01,277,0.01,279,2.15,294,1.386,328,2.145,402,3.295,426,1.428,429,1.32,497,1.469,500,1.906,501,1.469,502,1.469,503,1.469,509,1.469,521,1.557,525,2.207,531,1.146,532,1.557,547,1.009,560,1.146,567,1.469,568,1.469,569,0.951,593,1.907,594,2.658,618,3.543,619,3.249,620,3.249,621,3.505,622,3.505,623,3.505,624,2.658,625,3.831,626,2.268,627,3.31,628,3.656,629,4.606,630,3.656,631,3.656,632,3.31,633,2.268,634,2.658,635,2.268,636,2.658,637,2.268,638,3.656,639,3.656,640,2.268,641,2.658,642,2.268,643,1.72,644,2.658,645,1.32,646,1.32,647,1.72,648,3.249,649,1.72,650,1.557,651,1.428,652,1.557,653,1.72,654,1.72,655,1.428,656,1.72,657,1.72,658,1.72,659,1.72,660,2.658,661,3.249,662,1.72,663,1.72,664,1.72,665,1.72,666,1.72,667,1.72,668,1.72,669,1.72,670,1.72,671,1.72,672,1.72,673,2.658,674,1.72,675,1.72,676,1.72,677,4.118,678,2.995,679,2.995,680,2.995]],["title/injectables/FirebaseService.html",[33,0.961,278,1.414]],["body/injectables/FirebaseService.html",[3,0.07,4,0.07,8,0.06,16,0.848,20,0.275,21,0.611,27,0.682,28,2.006,29,1.744,31,0.547,33,0.682,34,2.176,35,1.735,37,1.665,38,0.022,39,1.324,40,1.165,41,1.494,43,1.744,44,1.935,47,2.515,48,1.641,51,1.004,52,0.949,56,1.209,60,0.246,63,0.06,76,2.65,77,0.601,82,1.248,87,0.07,88,0.07,91,1.744,92,1.744,111,0.455,112,1.716,113,1.821,115,1.918,118,1.303,131,2.074,136,1.106,144,1.931,145,1.284,148,1.81,157,1.471,172,0.508,195,1.044,223,3.764,227,2.176,228,4.222,236,2.322,247,0.848,254,0.848,256,1.704,267,1.153,276,0.007,277,0.007,278,1.004,280,0.957,291,1.299,292,4.368,294,2.322,295,0.823,296,0.768,315,1.599,328,2.7,331,1.374,337,1.299,338,2.224,427,5.001,432,2.17,434,2.17,444,1.299,449,4.683,454,0.957,460,1.926,461,1.299,462,1.299,463,1.299,464,1.744,467,0.885,471,1.153,478,4.92,483,3.265,486,2.795,490,5.698,491,1.299,500,1.928,506,2.898,507,1.299,511,1.926,512,3.265,515,1.153,545,0.823,560,3.02,567,2.044,568,1.602,569,1.065,582,0.885,584,0.957,586,1.153,588,1.153,593,1.892,597,1.744,625,2.224,627,3.155,629,2.919,632,2.625,645,0.885,646,0.885,651,3.761,681,1.153,682,2.795,683,3.272,684,2.54,685,2.54,686,3.822,687,3.272,688,3.822,689,3.822,690,3.822,691,3.822,692,4.251,693,4.595,694,2.54,695,2.54,696,2.54,697,2.54,698,2.54,699,2.54,700,2.54,701,2.54,702,1.52,703,2.54,704,2.54,705,1.52,706,3.822,707,3.925,708,3.925,709,2.54,710,3.822,711,3.224,712,3.822,713,3.265,714,2.54,715,6.223,716,1.52,717,6.764,718,5.253,719,3.822,720,2.54,721,4.595,722,1.52,723,4.368,724,4.157,725,4.595,726,2.54,727,1.52,728,2.54,729,2.873,730,2.54,731,2.54,732,1.52,733,1.52,734,5.105,735,3.822,736,2.17,737,1.52,738,3.822,739,1.52,740,2.17,741,2.54,742,2.54,743,1.52,744,2.54,745,2.54,746,2.54,747,2.54,748,1.52,749,3.925,750,2.54,751,1.52,752,3.822,753,2.54,754,1.52,755,2.54,756,1.52,757,2.54,758,2.54,759,2.54,760,1.52,761,2.54,762,2.54,763,1.52,764,2.54,765,2.54,766,4.251,767,1.52,768,2.54,769,2.54,770,2.54,771,1.52,772,1.52,773,2.17,774,1.52,775,1.52,776,1.52,777,1.52,778,1.52,779,1.52,780,2.54,781,1.52,782,1.52,783,1.52,784,1.299,785,1.52,786,1.52,787,1.52,788,1.52,789,3.272,790,1.52,791,3.272,792,1.52,793,2.54,794,1.52,795,4.809,796,3.822,797,6.291,798,3.822,799,3.822,800,5.112,801,1.52,802,1.52,803,1.52,804,1.52,805,3.822,806,1.52,807,1.52,808,1.52,809,1.52,810,1.52,811,1.52,812,1.52,813,1.52,814,1.52,815,1.52,816,2.54,817,1.52,818,2.54,819,1.52,820,2.54,821,2.54,822,1.52,823,1.52,824,1.52,825,1.52,826,1.52,827,1.52,828,1.52,829,2.54,830,1.52,831,1.52,832,1.52,833,2.54,834,1.52,835,1.52,836,1.52,837,2.54,838,1.299,839,1.52,840,1.52,841,1.52,842,1.52,843,1.52,844,1.52,845,1.52,846,4.251,847,4.251,848,1.52,849,3.822,850,3.822,851,3.822,852,3.272,853,2.54,854,1.52,855,1.299,856,1.52,857,1.52,858,1.52,859,1.52,860,1.52,861,1.52,862,3.272,863,1.52,864,1.52,865,1.52,866,1.52,867,1.52,868,1.52,869,1.52,870,1.299,871,1.299,872,1.52,873,1.044,874,1.299,875,1.153,876,1.153,877,1.52,878,1.52,879,2.54,880,1.52,881,1.52,882,2.54,883,1.52,884,1.52,885,1.52,886,1.52,887,1.52,888,1.52,889,1.52,890,1.52]],["title/components/ForgotPasswordPage.html",[0,0.24,257,0.961]],["body/components/ForgotPasswordPage.html",[0,0.41,1,1.222,2,1.847,3,0.2,4,0.2,5,1.521,6,1.521,7,1.521,8,0.171,12,1.847,13,2.155,14,1.521,15,2.324,16,1.439,17,1.521,18,1.748,20,0.78,27,1.485,30,2.151,31,1.315,35,1.485,38,0.021,39,1.19,48,1.037,50,1.609,60,0.2,63,0.171,82,0.981,85,1.748,87,0.2,88,0.2,89,1.157,157,0.981,172,2.039,201,1.222,243,1.521,244,1.952,245,1.748,246,1.521,247,2.151,248,1.521,249,2.274,250,1.222,251,1.92,252,1.521,253,1.222,254,1.439,255,1.222,256,1.552,257,1.73,258,2.14,259,1.521,260,1.095,261,1.521,262,2.155,263,1.095,264,1.521,265,1.157,266,1.037,267,0.735,268,1.521,269,1.157,270,1.521,271,1.157,272,1.222,273,1.521,274,1.521,275,1.521,276,0.016,277,0.016,298,2.04,354,2.7,393,4.085,395,3.843,454,4.291,891,4.193,892,3.681,893,6.105,894,5.529,895,4.308,896,4.308,897,4.723,898,5.529,899,5.529,900,5.529,901,5.529,902,2.331,903,2.712,904,2.959,905,4.308,906,2.959,907,4.308,908,2.959]],["title/modules/ForgotPasswordPageModule.html",[344,1.014,909,2.457]],["body/modules/ForgotPasswordPageModule.html",[3,0.237,4,0.237,8,0.203,38,0.022,60,0.33,63,0.203,75,1.1,87,0.237,88,0.237,257,1.909,258,1.84,276,0.018,277,0.018,340,2.02,346,1.23,347,2.43,353,2.736,354,2.141,356,2.736,357,1.651,360,1.651,365,2.736,368,2.274,393,2.973,395,3.216,891,3.508,909,4.98,910,4.365,911,4.365,912,4.365,913,4.476,914,5.109,915,2.911,916,2.274,917,2.911,918,2.274,919,4.365]],["title/modules/ForgotPasswordPageRoutingModule.html",[344,1.014,913,2.252]],["body/modules/ForgotPasswordPageRoutingModule.html",[0,0.363,3,0.25,4,0.25,8,0.215,38,0.022,60,0.313,63,0.215,87,0.25,88,0.25,136,1.301,257,1.707,258,1.618,276,0.018,277,0.018,321,1.908,346,1.301,357,1.451,360,1.707,376,2.56,378,3.01,379,2.67,382,2.56,393,3.145,395,3.402,415,2.56,891,3.711,913,4.001,919,4.617,920,2.731]],["title/components/HomePage.html",[0,0.24,260,0.91]],["body/components/HomePage.html",[0,0.392,1,1.109,2,1.734,3,0.181,4,0.181,5,1.381,6,1.381,7,1.381,8,0.155,14,1.381,15,2.299,16,1.306,17,1.381,18,1.641,20,0.708,21,1.249,27,1.394,28,1.652,30,2.073,31,1.118,32,3.342,33,1.783,35,1.667,37,1.109,38,0.022,39,1.391,40,1.119,41,0.995,48,0.941,56,1.182,60,0.27,63,0.155,78,1.381,82,0.891,85,1.641,87,0.181,88,0.181,89,1.05,96,2.303,111,1.171,115,1.109,157,0.891,165,2.459,172,1.946,201,1.109,243,1.381,244,1.833,245,1.641,246,1.381,247,2.073,248,1.381,249,2.191,250,1.109,251,1.916,252,1.381,253,1.109,254,1.306,255,1.109,256,1.481,257,1.05,258,1.171,259,1.381,260,1.578,261,1.381,262,2.057,263,0.995,264,1.381,265,1.05,266,0.941,267,1.187,268,1.381,269,1.05,270,1.381,271,1.05,272,1.109,273,1.381,274,1.381,275,1.381,276,0.015,277,0.015,298,1.853,334,3.565,338,3.02,341,4.435,545,2.116,552,3.268,562,3.565,563,2.276,574,1.741,582,3.39,612,4.435,616,2.966,651,3.268,873,3.565,902,3.358,903,2.462,904,2.686,906,2.686,908,2.686,921,3.342,922,5.826,923,5.191,924,5.191,925,3.912,926,3.565,927,5.191,928,5.191,929,3.912,930,2.462,931,3.912,932,3.912,933,5.191,934,5.191,935,5.191,936,3.912,937,3.912,938,2.966,939,2.686,940,4.435,941,3.912,942,3.912,943,3.912,944,3.268,945,3.565,946,2.966,947,5.191,948,3.02,949,3.912,950,3.912,951,3.912,952,3.912,953,3.912,954,3.912]],["title/modules/HomePageModule.html",[344,1.014,955,2.457]],["body/modules/HomePageModule.html",[3,0.238,4,0.238,8,0.204,38,0.022,60,0.33,63,0.204,75,1.107,87,0.238,88,0.238,260,1.81,276,0.018,277,0.018,334,3.531,340,2.033,346,1.237,347,2.439,353,2.746,354,2.155,356,2.746,357,1.657,360,1.657,365,2.746,368,2.288,915,2.922,916,2.288,917,2.922,918,2.288,955,4.986,956,4.392,957,4.392,958,4.392,959,4.482,960,5.141,961,4.392]],["title/modules/HomePageRoutingModule.html",[344,1.014,959,2.252]],["body/modules/HomePageRoutingModule.html",[0,0.365,3,0.252,4,0.252,8,0.216,38,0.022,60,0.314,63,0.216,87,0.252,88,0.252,136,1.307,260,1.621,276,0.018,277,0.018,321,1.917,346,1.307,357,1.459,360,1.712,376,2.572,378,3.019,379,2.675,382,2.572,415,2.572,920,2.745,959,4.013,961,4.64,962,5.432]],["title/components/InventoryManagementPage.html",[0,0.24,89,0.961]],["body/components/InventoryManagementPage.html",[0,0.319,1,0.853,2,1.005,3,0.139,4,0.175,5,0.66,6,0.66,7,0.66,8,0.074,9,3.907,10,3.633,11,0.944,12,1.446,13,1.333,14,0.66,15,2.078,16,1.912,17,2.195,18,1.369,19,1.52,20,0.545,21,0.724,22,1.417,23,1.417,24,2.282,25,1.417,26,1.417,27,0.808,28,1.925,29,1.283,30,1.694,31,0.813,33,1.613,34,1.789,35,1.791,37,1.346,38,0.022,39,1.339,40,1.226,41,1.207,43,1.283,44,2.494,45,1.176,46,2.694,47,2.05,48,1.378,50,1.41,51,1.712,52,1.616,53,2.257,54,1.882,56,1.081,60,0.288,61,2.197,62,0.739,63,0.15,64,1.789,65,0.739,66,2.043,67,0.832,68,2.043,69,0.832,70,2.043,71,0.832,72,2.248,73,1.123,74,2.694,75,0.402,76,2.762,77,0.739,78,0.66,79,0.944,80,0.944,81,1.283,82,1.263,83,1.005,84,1.628,85,0.951,86,2.043,87,0.175,88,0.175,89,1.162,90,2.043,91,3.661,92,3.931,93,2.627,94,2.043,95,2.043,96,2.005,97,2.043,98,1.814,99,2.043,100,1.628,101,1.628,102,1.927,103,1.628,104,2.043,105,1.628,106,2.342,107,1.52,108,2.402,109,2.864,110,1.616,111,1.66,112,1.772,113,1.5,114,3.283,115,1.573,116,1.087,117,1.283,118,0.53,119,1.283,120,1.011,121,1.011,122,1.011,123,1.011,124,1.011,125,1.011,126,2.519,127,2.282,128,2.282,129,1.751,130,2.95,131,2.074,132,2.885,133,1.751,134,1.751,135,1.751,136,1.042,137,1.087,138,1.087,139,1.087,140,1.087,141,1.087,142,2.282,143,1.751,144,1.52,145,2.893,146,2.864,147,1.087,148,1.425,149,1.417,150,1.087,151,1.417,152,2.606,153,2.197,154,2.562,155,2.342,156,2.197,157,0.86,158,2.282,159,1.011,160,1.425,161,1.011,162,1.011,163,1.087,164,1.011,165,1.425,166,2.043,167,1.751,168,1.751,169,1.087,170,1.417,171,1.011,172,2.006,173,2.282,174,1.908,175,1.417,176,1.52,177,1.52,178,1.52,179,3.283,180,1.417,181,1.417,182,2.282,183,3.283,184,1.417,185,3.283,186,0.66,187,2.282,188,1.417,189,1.417,190,1.417,191,2.282,192,1.417,193,2.282,194,1.417,195,1.283,196,1.417,197,1.417,198,1.417,199,1.417,200,1.283,201,0.853,202,0.944,203,1.417,204,1.417,205,1.894,206,1.176,207,2.282,208,1.417,209,1.417,210,2.743,211,3.599,212,2.282,213,1.417,214,1.417,215,1.417,216,1.417,217,3.599,218,4.342,219,4.342,220,1.417,221,1.417,222,1.417,223,2.066,224,2.282,225,2.197,226,1.417,227,0.885,228,1.283,229,1.417,230,1.417,231,1.417,232,0.944,233,1.417,234,1.417,235,1.087,236,0.944,237,1.417,238,1.417,239,1.417,243,0.66,244,1.062,245,0.951,246,0.66,247,1.446,248,0.66,249,1.528,250,0.53,251,1.489,252,0.66,253,0.53,254,0.624,255,0.53,256,0.96,257,0.502,258,0.56,259,0.66,260,0.475,261,0.66,262,1.333,263,0.475,264,0.66,265,0.502,266,0.45,267,0.319,268,0.66,269,0.502,270,0.66,271,0.502,272,0.53,273,0.66,274,0.66,275,0.66,276,0.009,277,0.009,294,1.712,298,0.885,531,1.908,554,1.52,574,0.832,597,2.066,616,2.282,902,1.011,944,1.176,945,1.283,948,1.087,963,2.57,964,2.57,965,2.57,966,1.417,967,3.009,968,1.869,969,1.869,970,1.869,971,1.869,972,1.869,973,1.869,974,1.869,975,1.869,976,1.869,977,1.597,978,1.869,979,1.417,980,1.417,981,1.597,982,1.597,983,1.597,984,1.597,985,1.597,986,3.009,987,3.009,988,3.009,989,1.417,990,2.519,991,2.864,992,1.417,993,1.417,994,1.087,995,1.417,996,1.283,997,1.417,998,1.176,999,1.417,1000,1.417,1001,1.417,1002,1.011]],["title/modules/InventoryManagementPageModule.html",[344,1.014,1003,2.457]],["body/modules/InventoryManagementPageModule.html",[1,1.979,3,0.219,4,0.219,8,0.188,9,2.753,10,2.56,38,0.022,60,0.34,63,0.188,65,1.871,67,2.106,69,2.106,71,2.106,73,1.767,75,1.019,82,1.336,83,1.581,87,0.219,88,0.219,89,1.875,201,1.979,276,0.017,277,0.017,340,1.871,346,1.139,347,2.319,353,2.611,354,1.983,356,2.611,357,1.575,359,4.835,360,1.575,365,2.611,368,2.106,915,2.778,916,2.106,917,2.778,918,2.106,1003,5.033,1004,4.043,1005,4.043,1006,4.043,1007,4.394,1008,3.589,1009,5.011,1010,2.753,1011,4.449,1012,4.449,1013,4.449,1014,4.028,1015,3.25,1016,4.449,1017,4.028]],["title/modules/InventoryManagementPageRoutingModule.html",[344,1.014,1007,2.252]],["body/modules/InventoryManagementPageRoutingModule.html",[0,0.363,3,0.25,4,0.25,8,0.215,9,3.145,10,2.924,38,0.022,60,0.313,63,0.215,82,1.231,83,1.805,87,0.25,88,0.25,89,1.707,136,1.301,276,0.018,277,0.018,321,1.908,346,1.301,357,1.451,360,1.707,376,2.56,378,3.01,379,2.67,382,2.56,415,2.56,920,2.731,1007,4.001,1010,3.145]],["title/injectables/LoadingService.html",[34,1.694,278,1.414]],["body/injectables/LoadingService.html",[3,0.23,4,0.23,8,0.197,20,0.897,27,1.62,28,2.002,31,1.067,34,2.858,35,1.747,37,1.405,38,0.022,39,1.067,40,0.951,41,1.26,48,1.452,60,0.28,63,0.197,75,1.067,87,0.23,88,0.23,115,1.711,136,1.192,144,3.049,276,0.017,277,0.017,278,2.385,280,3.119,288,5.155,295,2.68,296,2.504,297,3.757,323,5.785,333,5.155,1018,4.233,1019,6.771,1020,6.771,1021,4.954,1022,4.954,1023,6.034,1024,4.954,1025,6.941,1026,6.771,1027,6.034,1028,4.954,1029,6.034,1030,4.954,1031,4.954,1032,4.954]],["title/components/LoginPage.html",[0,0.24,263,0.91]],["body/components/LoginPage.html",[0,0.354,1,0.767,2,1.338,3,0.125,4,0.125,5,0.955,6,0.955,7,0.955,8,0.107,12,1.338,13,1.684,14,0.955,15,2.186,16,0.903,17,0.955,18,1.266,20,0.49,21,0.964,27,1.076,28,1.352,30,1.761,31,0.862,33,1.638,35,1.773,37,1.136,38,0.022,39,1.135,40,1.132,41,1.018,44,0.955,48,1.54,50,2.102,51,2.085,52,1.969,56,1.342,60,0.273,63,0.107,78,0.955,82,0.616,85,1.266,87,0.125,88,0.125,89,0.726,102,2.347,110,2.495,111,1.579,113,0.855,115,1.352,131,0.955,132,2.853,145,1.367,157,1.342,165,2.497,172,1.593,201,0.767,236,2.024,243,0.955,244,1.414,245,1.266,246,0.955,247,1.761,248,0.955,249,1.861,250,0.767,251,1.773,252,0.955,253,0.767,254,0.903,255,0.767,256,1.213,257,0.726,258,1.428,259,0.955,260,0.688,261,0.955,262,1.684,263,1.341,264,0.955,265,0.726,266,0.651,267,1.151,268,0.955,269,0.726,270,0.955,271,0.726,272,0.767,273,0.955,274,0.955,275,0.955,276,0.011,277,0.011,279,2.154,290,2.521,292,3.038,294,1.069,298,1.281,302,3.943,308,3.038,309,2.051,310,4.471,315,3.003,321,0.955,322,2.311,328,1.204,331,3.046,332,2.311,338,2.331,340,1.584,393,3.645,454,3.544,471,2.051,497,1.134,500,1.584,501,1.134,502,1.134,503,1.134,509,1.134,545,1.463,547,1.204,552,1.703,562,2.751,563,2.331,567,1.679,568,1.999,569,1.134,572,3.038,573,4.189,574,1.783,576,1.858,592,2.751,650,3.621,652,2.751,707,3.422,713,3.422,729,1.463,734,4.809,838,2.311,855,2.311,873,2.751,875,2.051,876,2.051,897,4.505,902,1.463,903,3.003,904,3.275,906,3.621,908,4.189,930,1.703,938,3.617,939,1.858,946,2.051,990,3.549,994,1.574,1033,2.311,1034,4.77,1035,4.005,1036,4.005,1037,5.273,1038,5.273,1039,5.273,1040,4.005,1041,2.705,1042,5.273,1043,4.075,1044,2.705,1045,4.005,1046,5.273,1047,4.005,1048,2.705,1049,3.038,1050,4.005,1051,4.005,1052,2.705,1053,4.005,1054,4.005,1055,2.705,1056,2.705,1057,2.705,1058,2.705,1059,2.705,1060,2.705,1061,2.705,1062,2.705,1063,2.705,1064,3.617,1065,2.705,1066,2.705,1067,2.705,1068,2.705,1069,2.705,1070,2.705,1071,2.705,1072,2.705,1073,2.705,1074,2.705,1075,4.77,1076,2.705,1077,4.77,1078,2.705,1079,2.705,1080,2.705,1081,2.705,1082,2.705,1083,2.705,1084,2.705,1085,4.005,1086,3.275,1087,4.809,1088,3.422,1089,3.711,1090,2.311,1091,3.422,1092,4.075,1093,3.038,1094,2.311,1095,3.422,1096,2.311,1097,2.311,1098,2.311,1099,2.311,1100,2.311,1101,2.311,1102,2.051,1103,3.422,1104,2.311,1105,2.705,1106,4.005,1107,2.705,1108,2.705,1109,2.311]],["title/modules/LoginPageModule.html",[344,1.014,1110,2.252]],["body/modules/LoginPageModule.html",[3,0.234,4,0.234,8,0.2,38,0.022,39,1.085,56,1.551,60,0.328,63,0.2,75,1.085,87,0.283,88,0.234,263,1.802,267,0.859,276,0.017,277,0.017,331,2.726,340,1.992,346,1.213,347,2.41,353,2.713,354,2.112,356,2.713,357,1.637,360,1.637,365,2.713,368,2.242,582,2.931,584,3.172,915,2.887,916,2.242,917,2.887,918,2.242,1110,4.554,1111,4.304,1112,4.304,1113,4.304,1114,4.123,1115,3.821,1116,3.821,1117,1.881,1118,4.304]],["title/modules/LoginPageRoutingModule.html",[344,1.014,1114,2.082]],["body/modules/LoginPageRoutingModule.html",[0,0.365,3,0.252,4,0.252,8,0.216,38,0.022,60,0.314,63,0.216,87,0.252,88,0.252,136,1.307,263,1.621,276,0.018,277,0.018,321,1.917,346,1.307,357,1.459,360,1.712,376,2.572,378,3.019,379,2.675,382,2.572,415,2.572,920,2.745,1114,3.709,1116,4.119,1119,5.432]],["title/components/OrderManagementPage.html",[0,0.24,265,0.961]],["body/components/OrderManagementPage.html",[0,0.324,1,0.545,2,1.029,3,0.089,4,0.089,5,0.679,6,0.679,7,0.679,8,0.076,11,0.972,12,1.47,13,1.359,14,0.679,15,2.09,16,0.643,17,2.138,18,1.392,19,1.556,20,0.558,21,0.741,27,0.827,28,1.681,30,1.716,31,0.663,33,1.379,35,1.801,37,1.53,38,0.022,39,1.245,40,1.259,41,1.372,44,1.087,46,3.061,47,2.085,48,1.484,50,1.798,51,1.904,52,2.093,53,1.371,54,1.7,56,1.35,60,0.298,61,2.241,62,0.761,63,0.122,64,1.824,65,0.761,66,2.083,67,0.856,68,2.083,69,0.856,70,2.605,71,0.856,72,2.281,73,1.15,74,2.726,75,0.414,76,0.761,77,0.761,78,0.679,79,0.972,80,0.972,82,0.438,83,1.029,84,1.666,85,0.974,86,2.083,87,0.178,88,0.178,89,0.517,90,2.083,93,2.655,94,2.083,95,2.083,96,1.218,97,2.083,98,1.845,99,2.083,100,1.666,101,1.666,102,1.959,103,1.666,104,2.083,105,1.666,106,2.382,107,1.556,108,1.459,110,1.798,111,1.442,112,1.15,113,1.624,115,1.092,118,0.873,120,1.041,121,1.041,122,2.083,123,1.041,124,1.041,125,1.041,126,2.561,129,1.792,130,2.989,131,2.041,132,2.919,133,1.792,134,1.792,135,1.792,136,1.059,137,1.119,138,1.119,139,1.119,140,1.119,141,1.119,143,1.792,144,1.556,145,1.946,147,1.119,148,2.281,150,2.802,152,1.291,153,2.241,154,2.596,155,2.382,156,2.241,157,0.877,159,1.041,160,1.459,161,1.041,162,1.041,163,2.241,164,1.041,165,1.459,166,1.666,167,1.792,168,1.792,169,1.119,171,1.041,172,2.023,174,1.556,176,1.556,177,1.556,178,1.556,186,1.087,201,0.545,202,1.556,225,1.119,227,1.459,235,1.119,243,0.679,244,1.087,245,0.974,246,0.679,247,1.47,248,0.679,249,1.554,250,0.545,251,1.592,252,0.679,253,0.545,254,0.643,255,0.873,256,1.876,257,0.517,258,0.576,259,0.679,260,0.489,261,0.679,262,1.359,263,0.489,264,0.679,265,1.182,266,0.463,267,0.328,268,0.679,269,0.517,270,0.679,271,0.517,272,0.873,273,2.041,274,0.679,275,0.679,276,0.009,277,0.009,279,2.041,294,2.031,298,0.911,328,1.959,402,3.65,426,1.211,429,1.119,497,1.291,500,1.74,501,1.291,502,1.291,503,1.291,509,1.291,525,1.211,531,2.224,547,0.856,554,1.556,560,1.946,567,1.291,568,1.291,569,0.806,574,0.856,593,1.959,597,2.115,618,3.926,619,1.459,620,1.459,624,1.459,625,3.694,627,3.023,628,3.338,629,4.36,630,3.338,631,3.338,632,3.023,634,1.459,636,1.459,638,2.335,639,2.335,641,1.459,643,1.459,644,2.92,645,1.119,646,1.119,647,1.459,648,2.335,649,2.335,650,3.023,651,1.939,652,2.115,653,1.459,654,1.459,655,1.211,656,1.459,657,1.459,658,1.459,659,2.335,660,2.92,661,2.92,662,2.335,663,1.459,664,2.335,665,1.459,666,2.335,667,1.459,668,2.335,669,1.459,670,1.459,671,1.459,672,1.459,673,2.335,674,1.459,675,1.459,676,1.459,902,1.041,944,1.211,945,1.321,948,1.119,963,2.631,964,2.631,965,2.631,966,1.459,977,1.644,979,1.459,980,1.459,981,1.644,982,1.644,983,1.644,985,1.644,989,1.459,990,2.561,991,2.92,992,1.459,993,1.459,994,1.119,995,1.459,996,1.321,997,1.459,998,1.211,999,1.459,1000,1.459,1001,1.459,1002,1.041,1120,2.631,1121,3.08,1122,3.08,1123,1.924,1124,1.924,1125,1.924,1126,1.924,1127,1.924,1128,1.924,1129,1.924,1130,1.924,1131,1.644,1132,1.924,1133,1.924,1134,1.792,1135,3.08,1136,3.08,1137,3.08]],["title/modules/OrderManagementPageModule.html",[344,1.014,1138,2.457]],["body/modules/OrderManagementPageModule.html",[3,0.213,4,0.213,8,0.183,38,0.022,60,0.342,63,0.183,65,1.818,67,2.047,69,2.047,71,2.047,73,1.717,75,0.99,83,1.536,87,0.213,88,0.213,255,1.965,256,1.465,265,1.861,272,1.965,276,0.017,277,0.017,340,1.818,346,1.107,347,2.278,353,2.565,354,1.928,356,2.565,357,1.547,359,4.773,360,1.547,365,2.565,368,2.047,402,2.488,618,2.676,915,2.729,916,2.047,917,2.729,918,2.047,1008,3.488,1009,4.923,1010,2.676,1011,4.37,1012,4.37,1013,4.37,1014,3.957,1015,3.158,1016,4.37,1017,3.957,1138,5.014,1139,3.929,1140,3.929,1141,3.929,1142,4.363,1143,5.763,1144,4.599,1145,5.763,1146,4.599,1147,5.763,1148,4.599]],["title/modules/OrderManagementPageRoutingModule.html",[344,1.014,1142,2.252]],["body/modules/OrderManagementPageRoutingModule.html",[0,0.363,3,0.25,4,0.25,8,0.215,38,0.022,60,0.313,63,0.215,83,1.805,87,0.25,88,0.25,136,1.301,256,1.374,265,1.707,276,0.018,277,0.018,321,1.908,346,1.301,357,1.451,360,1.707,376,2.56,378,3.01,379,2.67,382,2.56,402,2.924,415,2.56,618,3.145,920,2.731,1010,3.145,1142,4.001]],["title/interfaces/Pantry.html",[267,0.61,1117,1.336]],["body/interfaces/Pantry.html",[3,0.232,4,0.232,8,0.199,20,0.907,21,1.462,38,0.022,39,1.463,40,1.305,56,1.681,60,0.328,63,0.199,75,1.078,87,0.281,88,0.232,263,1.544,267,1.035,276,0.017,277,0.017,331,2.709,356,2.229,357,1.345,360,1.631,365,2.703,368,2.229,582,3.954,584,4.278,915,2.876,916,2.229,917,2.876,918,2.229,1110,3.152,1114,3.533,1115,3.798,1116,3.798,1117,1.87,1118,5.806,1149,2.914]],["title/components/PantryStatisticsPage.html",[0,0.24,266,0.861]],["body/components/PantryStatisticsPage.html",[0,0.282,1,0.622,2,1.141,3,0.102,4,0.102,5,0.774,6,0.774,7,0.774,8,0.087,12,1.141,13,1.481,14,0.774,15,2.108,16,0.733,17,0.774,18,1.08,20,0.397,21,0.822,27,0.917,28,1.189,30,1.581,31,0.735,33,1.524,35,1.867,37,0.622,38,0.022,39,0.903,40,1.225,41,0.558,44,2.003,48,1.412,50,2.119,51,2.32,52,2.191,54,2.003,56,1.403,60,0.252,62,0.867,63,0.087,76,1.658,77,0.867,78,0.774,82,1.078,85,1.08,87,0.102,88,0.102,89,0.589,98,1.432,102,2.107,110,2.344,111,1.256,112,1.768,113,2.067,115,1.189,116,1.276,118,1.189,157,0.955,165,2.242,172,1.401,186,2.003,201,0.622,232,1.726,243,0.774,244,1.206,245,1.08,246,0.774,247,1.714,248,0.774,249,1.672,250,0.622,251,1.655,252,0.774,253,0.622,254,0.733,255,0.622,256,1.067,257,0.589,258,0.657,259,0.774,260,0.558,261,0.774,262,1.481,263,0.558,264,0.774,265,0.589,266,1.14,267,1.028,268,0.774,269,0.589,270,0.774,271,0.589,272,0.622,273,0.774,274,0.774,275,0.774,276,0.01,277,0.01,279,2.003,290,1.381,298,1.039,331,1.187,335,1.848,407,3.777,497,0.919,500,1.35,501,0.919,502,0.919,503,0.919,509,0.919,547,0.976,552,1.381,554,2.12,567,0.919,568,0.919,569,0.919,573,3.524,574,1.867,576,1.506,592,2.346,593,2.525,729,1.848,902,1.187,903,2.15,904,2.346,906,3.251,908,3.896,926,3.732,930,1.381,938,3.181,939,1.506,946,1.663,948,1.276,990,3.301,994,1.276,1002,2.27,1043,1.874,1064,2.59,1086,3.732,1087,4.384,1088,2.918,1089,3.23,1090,1.874,1091,2.918,1092,3.584,1093,2.59,1094,1.874,1095,2.918,1096,1.874,1097,1.874,1098,1.874,1099,1.874,1100,1.874,1101,1.874,1102,1.663,1103,2.918,1104,1.874,1117,1.275,1134,2.986,1150,4.062,1151,1.506,1152,3.181,1153,2.59,1154,3.181,1155,3.181,1156,3.181,1157,3.181,1158,3.181,1159,3.181,1160,3.416,1161,3.181,1162,3.181,1163,3.181,1164,3.181,1165,3.181,1166,3.181,1167,3.591,1168,3.591,1169,3.591,1170,3.591,1171,3.591,1172,3.591,1173,3.591,1174,2.193,1175,2.755,1176,3.416,1177,2.59,1178,2.193,1179,3.591,1180,3.591,1181,3.421,1182,2.193,1183,2.193,1184,4.121,1185,2.193,1186,2.193,1187,2.59,1188,2.193,1189,2.193,1190,4.014,1191,3.181,1192,2.59,1193,2.193,1194,2.59,1195,3.591,1196,2.346,1197,2.193,1198,2.193,1199,2.193,1200,2.12,1201,2.193,1202,2.193,1203,2.193,1204,2.193,1205,2.193,1206,3.181,1207,2.59,1208,2.193,1209,2.12,1210,2.193,1211,2.193,1212,2.193,1213,2.193,1214,1.663,1215,1.663,1216,1.663,1217,1.663,1218,1.663,1219,1.663,1220,1.663,1221,1.663,1222,1.663,1223,1.663,1224,1.663,1225,1.663,1226,1.663,1227,2.59,1228,3.181,1229,3.181,1230,3.181,1231,3.181,1232,3.181,1233,2.59,1234,3.181,1235,3.181,1236,3.181,1237,2.59,1238,1.663,1239,1.663,1240,1.663,1241,1.663,1242,1.663,1243,1.663,1244,3.181,1245,1.663,1246,1.663,1247,1.663,1248,1.663,1249,1.663,1250,1.663,1251,2.15,1252,1.663,1253,1.663,1254,1.663,1255,1.663,1256,1.663,1257,1.663,1258,1.663,1259,1.663,1260,1.663,1261,1.663,1262,1.663,1263,1.663,1264,1.663,1265,1.663,1266,2.641,1267,1.663,1268,2.59,1269,2.59,1270,1.874,1271,2.193,1272,1.874,1273,1.874,1274,1.874,1275,3.416,1276,2.193]],["title/modules/PantryStatisticsPageModule.html",[344,1.014,1277,2.457]],["body/modules/PantryStatisticsPageModule.html",[3,0.234,4,0.234,8,0.201,38,0.022,60,0.333,63,0.201,75,1.088,87,0.234,88,0.234,266,1.707,267,1.041,276,0.018,277,0.018,335,2.734,340,1.998,346,1.216,347,2.414,353,2.718,354,2.118,356,2.718,357,1.64,360,1.64,365,2.718,368,2.249,407,2.734,915,2.892,916,2.249,917,2.892,918,2.249,1150,2.941,1181,3.181,1277,4.97,1278,4.318,1279,4.318,1280,4.318,1281,4.464,1282,5.054,1283,4.318,1284,6.107,1285,4.318]],["title/modules/PantryStatisticsPageRoutingModule.html",[344,1.014,1281,2.252]],["body/modules/PantryStatisticsPageRoutingModule.html",[0,0.363,3,0.25,4,0.25,8,0.215,38,0.022,60,0.313,63,0.215,87,0.25,88,0.25,136,1.301,266,1.53,267,0.921,276,0.018,277,0.018,321,1.908,335,2.924,346,1.301,357,1.451,360,1.707,376,2.56,378,3.01,379,2.67,382,2.56,407,2.924,415,2.56,920,2.731,1150,3.145,1281,4.001,1283,4.617]],["title/components/ProfilePage.html",[0,0.24,269,0.961]],["body/components/ProfilePage.html",[0,0.34,1,0.707,2,1.258,3,0.116,4,0.116,5,0.88,6,0.88,7,0.88,8,0.099,12,1.517,13,1.787,14,0.88,15,2.171,16,0.833,17,2.252,18,1.436,19,1.26,20,0.451,21,0.907,27,1.012,28,1.436,30,1.816,31,0.811,33,1.535,35,1.68,37,1.068,38,0.022,39,1.373,40,1.14,41,0.958,45,2.859,48,1.093,50,1.696,51,0.985,52,0.931,53,1.109,54,0.88,56,1.302,60,0.283,62,1.49,63,0.099,64,2.398,65,0.985,72,2.575,73,0.931,75,0.537,78,0.88,79,1.26,80,1.26,82,0.568,85,1.191,87,0.175,88,0.175,89,0.669,93,2.151,96,1.49,102,1.109,107,1.26,108,1.784,110,2.42,111,1.91,112,1.696,113,2.017,115,1.068,118,1.068,131,0.88,136,0.6,148,1.181,154,1.904,157,0.568,160,1.181,172,2.194,174,1.26,176,1.26,177,1.26,178,1.26,186,1.33,201,0.707,202,1.26,205,2.372,206,1.569,227,1.181,243,0.88,244,1.33,245,1.191,246,0.88,247,1.91,248,0.88,249,1.787,250,0.707,251,1.764,252,0.88,253,1.068,254,1.983,255,0.707,256,1.382,257,0.669,258,0.746,259,0.88,260,0.634,261,0.88,262,1.604,263,0.634,264,0.88,265,0.669,266,0.6,267,1.21,268,0.88,269,1.36,270,0.88,271,0.669,272,0.707,273,0.88,274,0.88,275,0.88,276,0.011,277,0.011,279,2.209,290,4.015,294,2.002,298,1.181,315,2.372,336,2.372,497,1.579,500,2.002,501,1.579,502,1.579,503,1.579,509,1.579,514,1.89,515,4.336,516,3.881,517,2.13,518,4.325,519,1.89,520,4.645,525,1.569,526,2.13,528,4.645,529,3.219,531,1.904,534,3.219,536,3.219,538,3.219,540,3.881,542,3.881,544,3.881,545,1.349,546,2.13,547,1.109,548,3.219,549,3.881,550,3.219,551,3.881,552,2.859,553,3.219,554,1.904,555,2.587,556,3.219,557,3.881,558,3.881,559,3.219,560,1.904,561,2.587,562,2.587,563,1.45,564,2.13,565,2.13,566,3.219,567,1.579,568,1.579,569,1.045,570,3.219,571,2.13,572,3.84,573,4.745,574,2.785,575,2.13,576,3.119,577,2.13,578,3.219,579,2.13,580,3.219,581,3.219,582,1.45,583,3.219,584,1.569,585,3.219,586,1.89,587,3.219,588,1.89,589,3.219,590,2.13,591,3.219,592,2.587,870,3.219,871,3.219,873,2.587,874,3.219,875,2.857,876,2.857,903,2.372,939,3.119,944,1.569,948,1.45,990,2.192,994,1.45,1002,2.038,1064,2.857,1089,2.859,1093,1.89,1102,3.445,1109,3.219,1270,2.13,1272,5.073,1273,3.881,1274,4.645,1286,3.768,1287,2.493,1288,3.768,1289,2.493,1290,2.493,1291,2.493,1292,2.493,1293,2.493,1294,2.493,1295,2.493,1296,3.768,1297,3.219,1298,3.219,1299,2.493,1300,2.493,1301,2.493,1302,2.493,1303,3.768,1304,3.768,1305,3.768,1306,2.493,1307,2.493,1308,2.493,1309,4.542,1310,2.493,1311,2.493,1312,5.063,1313,2.493,1314,2.493]],["title/modules/ProfilePageModule.html",[344,1.014,1315,2.457]],["body/modules/ProfilePageModule.html",[3,0.229,4,0.229,8,0.196,38,0.022,60,0.336,63,0.196,73,1.842,75,1.062,87,0.229,88,0.229,253,1.999,269,1.894,276,0.017,277,0.017,336,3.105,340,1.95,346,1.187,347,2.379,353,2.678,354,2.067,356,2.678,357,1.616,360,1.616,365,2.678,368,2.195,574,2.195,915,2.85,916,2.195,917,2.85,918,2.195,1014,4.132,1015,3.387,1017,4.132,1315,5.015,1316,4.214,1317,4.214,1318,4.214,1319,4.439,1320,4.932,1321,4.214,1322,6.017,1323,4.214,1324,4.214]],["title/modules/ProfilePageRoutingModule.html",[344,1.014,1319,2.252]],["body/modules/ProfilePageRoutingModule.html",[0,0.365,3,0.252,4,0.252,8,0.216,38,0.022,60,0.314,63,0.216,87,0.252,88,0.252,136,1.307,269,1.712,276,0.018,277,0.018,321,1.917,346,1.307,357,1.459,360,1.712,376,2.572,378,3.019,379,2.675,382,2.572,415,2.572,920,2.745,1319,4.013,1321,4.64,1325,5.432]],["title/interfaces/TimestampedItems.html",[1117,1.336,1200,1.808]],["body/interfaces/TimestampedItems.html",[0,0.319,3,0.159,4,0.159,8,0.136,12,1.145,13,1.676,15,1.084,18,1.084,20,0.621,21,1.142,28,0.972,30,1.145,31,0.738,33,1.462,38,0.022,40,0.911,44,1.676,54,2.311,56,1.49,60,0.296,62,1.355,63,0.136,76,1.877,77,1.355,78,1.21,82,0.781,85,1.084,87,0.159,88,0.159,98,1.989,110,2.033,111,1.63,112,1.772,113,2.142,115,1.544,116,1.994,118,1.544,157,0.781,186,2.178,251,0.92,266,0.825,267,1.002,276,0.014,277,0.014,279,1.922,335,1.855,407,1.855,497,1.437,500,1.877,501,1.437,502,1.437,503,1.437,509,1.437,547,1.526,554,2.751,567,1.437,568,1.437,569,1.437,593,2.747,729,3.18,926,3.739,930,2.158,1002,2.946,1086,3.259,1117,1.772,1134,1.994,1149,1.994,1150,1.994,1151,2.354,1152,2.6,1153,2.6,1154,2.6,1155,2.6,1156,2.6,1157,2.6,1158,2.6,1159,2.6,1161,2.6,1162,2.6,1163,2.6,1164,2.6,1165,2.6,1166,2.6,1167,2.6,1168,2.6,1169,2.6,1170,2.6,1171,2.6,1172,2.6,1173,2.6,1175,2.762,1177,2.6,1179,3.6,1180,3.6,1181,3.427,1184,4.129,1187,2.6,1190,4.264,1191,2.6,1192,2.6,1194,2.6,1195,2.6,1196,2.354,1200,2.751,1206,3.6,1207,2.6,1209,2.399,1214,2.6,1215,2.6,1216,2.6,1217,2.6,1218,2.6,1219,2.6,1220,2.6,1221,2.6,1222,2.6,1223,2.6,1224,2.6,1225,2.6,1226,2.6,1227,3.6,1228,4.129,1229,4.129,1230,4.129,1231,4.129,1232,4.129,1233,3.6,1234,4.129,1235,4.129,1236,4.129,1237,3.6,1238,2.6,1239,2.6,1240,2.6,1241,2.6,1242,2.6,1243,2.6,1244,4.129,1245,2.6,1246,2.6,1247,2.6,1248,2.6,1249,2.6,1250,2.6,1251,2.988,1252,2.6,1253,2.6,1254,2.6,1255,2.6,1256,2.6,1257,2.6,1258,2.6,1259,2.6,1260,2.6,1261,2.6,1262,2.6,1263,2.6,1264,2.6,1265,2.6,1266,2.158,1267,2.6]],["title/interfaces/TimestampedItems-1.html",[152,1.251,1117,1.115,1200,1.508]],["body/interfaces/TimestampedItems-1.html",[3,0.087,4,0.087,8,0.074,20,0.339,21,0.726,31,0.404,33,0.503,38,0.022,39,1.023,40,0.975,41,0.477,44,2.076,48,1.651,54,2.482,56,1.264,60,0.235,63,0.074,76,2.195,77,0.741,82,0.427,87,0.087,88,0.087,96,2.671,113,0.593,118,1.23,131,2.398,152,2.465,210,1.014,232,0.947,236,2.191,245,0.953,256,1.752,267,0.81,276,0.009,277,0.009,278,1.192,295,1.014,296,0.947,328,2.95,390,1.421,467,1.09,545,1.014,555,3.264,561,1.287,563,1.09,593,2.927,625,2.523,645,1.09,646,1.09,655,2.73,711,2.87,723,1.421,724,3.851,729,3.414,998,1.18,1049,1.421,1089,1.18,1117,1.126,1134,3.498,1149,1.09,1175,1.09,1190,4.172,1200,2.191,1209,1.524,1251,1.18,1266,3.196,1268,3.851,1269,3.851,1326,1.421,1327,1.601,1328,1.601,1329,2.576,1330,3.233,1331,3.233,1332,1.601,1333,2.576,1334,2.576,1335,3.233,1336,3.705,1337,1.601,1338,3.233,1339,1.601,1340,1.601,1341,5.804,1342,3.233,1343,3.233,1344,1.601,1345,5.86,1346,1.601,1347,1.601,1348,2.576,1349,2.576,1350,1.601,1351,1.601,1352,1.601,1353,2.576,1354,1.601,1355,1.601,1356,3.233,1357,1.601,1358,1.601,1359,1.601,1360,1.601,1361,2.576,1362,1.601,1363,1.601,1364,1.601,1365,1.601,1366,3.233,1367,5.457,1368,1.601,1369,1.601,1370,3.233,1371,1.601,1372,1.601,1373,3.705,1374,1.601,1375,1.601,1376,3.705,1377,1.601,1378,4.896,1379,1.601,1380,4.338,1381,1.601,1382,1.601,1383,2.576,1384,3.705,1385,4.743,1386,2.576,1387,2.576,1388,2.576,1389,2.576,1390,1.601,1391,1.601,1392,1.601,1393,1.601,1394,3.705,1395,1.601,1396,2.576,1397,2.576,1398,3.233,1399,1.601,1400,3.233,1401,3.233,1402,4.743,1403,3.233,1404,1.601,1405,1.601,1406,4.338,1407,3.705,1408,2.576,1409,3.233,1410,4.56,1411,1.601,1412,1.601,1413,1.601,1414,1.601,1415,3.233,1416,4.56,1417,1.601,1418,1.601,1419,1.601,1420,1.601,1421,1.601,1422,2.576,1423,1.601,1424,2.576,1425,2.287,1426,5.025,1427,1.601,1428,1.601,1429,3.233,1430,3.705,1431,3.705,1432,3.705,1433,3.705,1434,1.601,1435,3.705,1436,3.705,1437,4.338,1438,3.705,1439,2.576,1440,3.705,1441,2.576,1442,2.576,1443,2.576,1444,3.233,1445,1.601,1446,1.601,1447,1.601,1448,2.576,1449,1.601,1450,3.705,1451,1.601,1452,3.705,1453,3.705,1454,2.576,1455,3.705,1456,2.576,1457,2.576,1458,4.338,1459,2.576,1460,2.576,1461,2.576,1462,2.576,1463,2.576,1464,1.601,1465,3.705,1466,2.576,1467,3.705,1468,4.743,1469,2.576,1470,2.576,1471,2.576,1472,1.601,1473,2.576,1474,2.576,1475,2.576,1476,2.576,1477,2.576,1478,1.601,1479,1.601,1480,1.601,1481,3.233,1482,3.705,1483,1.601,1484,1.601,1485,1.601,1486,1.601,1487,1.601,1488,2.576,1489,1.601,1490,1.601,1491,1.601,1492,1.601,1493,3.233,1494,1.601,1495,1.601,1496,1.601,1497,1.601,1498,1.601,1499,1.601,1500,1.601,1501,1.601,1502,1.601]],["title/interfaces/TimestampedOrders.html",[1117,1.336,1209,1.808]],["body/interfaces/TimestampedOrders.html",[0,0.319,3,0.159,4,0.159,8,0.136,12,1.145,13,1.676,15,1.084,18,1.084,20,0.621,21,1.142,28,0.972,30,1.145,31,0.738,33,1.462,38,0.022,40,0.911,44,1.676,54,2.311,56,1.49,60,0.296,62,1.355,63,0.136,76,1.877,77,1.355,78,1.21,82,0.781,85,1.084,87,0.159,88,0.159,98,1.989,110,2.033,111,1.63,112,1.772,113,2.142,115,1.544,116,1.994,118,1.544,157,0.781,186,2.178,251,0.92,266,0.825,267,1.002,276,0.014,277,0.014,279,1.922,335,1.855,407,1.855,497,1.437,500,1.877,501,1.437,502,1.437,503,1.437,509,1.437,547,1.526,554,2.751,567,1.437,568,1.437,569,1.437,593,2.969,729,1.855,926,3.739,930,2.158,1002,2.946,1086,3.259,1117,1.772,1134,1.994,1149,1.994,1150,1.994,1151,2.354,1152,2.6,1153,2.6,1154,2.6,1155,2.6,1156,2.6,1157,2.6,1158,2.6,1159,2.6,1161,2.6,1162,2.6,1163,2.6,1164,2.6,1165,2.6,1166,2.6,1167,2.6,1168,2.6,1169,2.6,1170,2.6,1171,2.6,1172,2.6,1173,2.6,1175,2.762,1177,2.6,1179,3.6,1180,3.6,1181,3.427,1184,4.129,1187,2.6,1190,4.264,1191,2.6,1192,2.6,1194,2.6,1195,2.6,1196,2.354,1200,2.399,1206,3.6,1207,2.6,1209,2.751,1214,2.6,1215,2.6,1216,2.6,1217,2.6,1218,2.6,1219,2.6,1220,2.6,1221,2.6,1222,2.6,1223,2.6,1224,2.6,1225,2.6,1226,2.6,1227,3.6,1228,4.129,1229,4.129,1230,4.129,1231,4.129,1232,4.129,1233,3.6,1234,4.129,1235,4.129,1236,4.129,1237,3.6,1238,2.6,1239,2.6,1240,2.6,1241,2.6,1242,2.6,1243,2.6,1244,4.129,1245,2.6,1246,2.6,1247,2.6,1248,2.6,1249,2.6,1250,2.6,1251,2.988,1252,2.6,1253,2.6,1254,2.6,1255,2.6,1256,2.6,1257,2.6,1258,2.6,1259,2.6,1260,2.6,1261,2.6,1262,2.6,1263,2.6,1264,2.6,1265,2.6,1266,2.158,1267,2.6]],["title/interfaces/TimestampedOrders-1.html",[152,1.251,1117,1.115,1209,1.508]],["body/interfaces/TimestampedOrders-1.html",[3,0.087,4,0.087,8,0.074,20,0.339,21,0.726,31,0.404,33,0.503,38,0.022,39,1.023,40,0.975,41,0.477,44,2.076,48,1.651,54,2.482,56,1.264,60,0.235,63,0.074,76,2.195,77,0.741,82,0.427,87,0.087,88,0.087,96,2.671,113,0.593,118,1.23,131,2.398,152,2.465,210,1.014,232,0.947,236,2.191,245,0.953,256,1.752,267,0.81,276,0.009,277,0.009,278,1.192,295,1.014,296,0.947,328,2.95,390,1.421,467,1.09,545,1.014,555,3.264,561,1.287,563,1.09,593,2.99,625,2.523,645,1.09,646,1.09,655,2.73,711,2.87,723,1.421,724,3.851,729,3.252,998,1.18,1049,1.421,1089,1.18,1117,1.126,1134,3.498,1149,1.09,1175,1.09,1190,4.172,1200,1.912,1209,1.912,1251,1.18,1266,3.196,1268,3.851,1269,3.851,1326,1.421,1327,1.601,1328,1.601,1329,2.576,1330,3.233,1331,3.233,1332,1.601,1333,2.576,1334,2.576,1335,3.233,1336,3.705,1337,1.601,1338,3.233,1339,1.601,1340,1.601,1341,5.804,1342,3.233,1343,3.233,1344,1.601,1345,5.86,1346,1.601,1347,1.601,1348,2.576,1349,2.576,1350,1.601,1351,1.601,1352,1.601,1353,2.576,1354,1.601,1355,1.601,1356,3.233,1357,1.601,1358,1.601,1359,1.601,1360,1.601,1361,2.576,1362,1.601,1363,1.601,1364,1.601,1365,1.601,1366,3.233,1367,5.457,1368,1.601,1369,1.601,1370,3.233,1371,1.601,1372,1.601,1373,3.705,1374,1.601,1375,1.601,1376,3.705,1377,1.601,1378,4.896,1379,1.601,1380,4.338,1381,1.601,1382,1.601,1383,2.576,1384,3.705,1385,4.743,1386,2.576,1387,2.576,1388,2.576,1389,2.576,1390,1.601,1391,1.601,1392,1.601,1393,1.601,1394,3.705,1395,1.601,1396,2.576,1397,2.576,1398,3.233,1399,1.601,1400,3.233,1401,3.233,1402,4.743,1403,3.233,1404,1.601,1405,1.601,1406,4.338,1407,3.705,1408,2.576,1409,3.233,1410,4.56,1411,1.601,1412,1.601,1413,1.601,1414,1.601,1415,3.233,1416,4.56,1417,1.601,1418,1.601,1419,1.601,1420,1.601,1421,1.601,1422,2.576,1423,1.601,1424,2.576,1425,2.287,1426,5.025,1427,1.601,1428,1.601,1429,3.233,1430,3.705,1431,3.705,1432,3.705,1433,3.705,1434,1.601,1435,3.705,1436,3.705,1437,4.338,1438,3.705,1439,2.576,1440,3.705,1441,2.576,1442,2.576,1443,2.576,1444,3.233,1445,1.601,1446,1.601,1447,1.601,1448,2.576,1449,1.601,1450,3.705,1451,1.601,1452,3.705,1453,3.705,1454,2.576,1455,3.705,1456,2.576,1457,2.576,1458,4.338,1459,2.576,1460,2.576,1461,2.576,1462,2.576,1463,2.576,1464,1.601,1465,3.705,1466,2.576,1467,3.705,1468,4.743,1469,2.576,1470,2.576,1471,2.576,1472,1.601,1473,2.576,1474,2.576,1475,2.576,1476,2.576,1477,2.576,1478,1.601,1479,1.601,1480,1.601,1481,3.233,1482,3.705,1483,1.601,1484,1.601,1485,1.601,1486,1.601,1487,1.601,1488,2.576,1489,1.601,1490,1.601,1491,1.601,1492,1.601,1493,3.233,1494,1.601,1495,1.601,1496,1.601,1497,1.601,1498,1.601,1499,1.601,1500,1.601,1501,1.601,1502,1.601]],["title/components/UserManagementPage.html",[0,0.24,271,0.961]],["body/components/UserManagementPage.html",[0,0.315,1,0.746,2,1.311,3,0.122,4,0.122,5,0.929,6,0.929,7,0.929,8,0.104,11,1.33,12,1.311,13,1.656,14,0.929,15,2.176,16,0.879,17,1.964,18,1.241,20,0.476,21,0.944,27,1.054,28,1.801,30,1.737,31,0.845,33,1.623,35,1.82,37,1.33,38,0.022,39,1.198,40,1.29,41,1.193,46,3.14,48,1.129,51,2.2,52,2.078,54,1.964,56,1.069,60,0.3,62,1.04,63,0.104,64,2.222,65,1.04,66,2.539,67,1.171,68,2.539,69,1.171,70,2.539,71,1.171,72,2.635,73,0.982,74,3.055,75,0.567,78,0.929,82,0.599,83,1.737,84,2.123,85,1.241,86,2.539,87,0.122,88,0.122,89,0.707,90,2.539,93,2.943,94,2.539,95,2.539,96,1.551,97,2.539,98,2.18,99,2.539,100,2.123,101,2.123,102,2.315,103,2.123,104,2.539,105,2.123,106,2.814,107,1.983,110,1.752,111,1.405,112,1.942,113,1.759,115,1.578,117,1.807,118,0.746,119,1.807,120,1.423,121,1.423,122,1.423,123,1.423,124,1.423,125,1.423,131,1.385,157,1.66,160,1.246,172,1.567,186,1.385,201,0.746,243,0.929,244,1.385,245,1.241,246,0.929,247,1.737,248,0.929,249,1.836,250,0.746,251,1.736,252,0.929,253,0.746,254,0.879,255,0.746,256,1.193,257,0.707,258,0.788,259,0.929,260,0.669,261,0.929,262,1.656,263,0.669,264,0.929,265,0.707,266,0.633,267,0.449,268,0.929,269,0.707,270,0.929,271,1.397,272,0.746,273,0.929,274,0.929,275,0.929,276,0.011,277,0.011,279,2.134,294,1.551,298,1.246,338,3.615,411,4.302,454,3.274,497,1.103,500,1.551,501,1.103,502,1.103,503,1.103,506,2.976,509,1.103,511,3.945,531,2.371,547,1.171,554,1.983,560,2.629,567,1.103,568,1.103,569,1.103,574,1.171,682,4.754,708,4.444,740,3.352,749,3.352,784,2.248,795,2.248,902,1.423,944,1.656,945,1.807,948,1.531,966,1.995,979,1.995,980,2.976,984,2.248,989,1.995,990,3.027,991,3.559,992,1.995,993,1.995,994,1.531,995,1.995,996,1.807,997,1.995,998,1.656,999,1.995,1000,1.995,1001,1.995,1002,1.423,1131,2.248,1425,1.995,1503,4.693,1504,3.924,1505,3.924,1506,2.631,1507,5.202,1508,5.202,1509,5.202,1510,2.631,1511,3.924,1512,3.924,1513,3.924,1514,5.202,1515,2.631,1516,2.631,1517,2.631,1518,2.631,1519,2.631,1520,2.631,1521,2.631,1522,2.631,1523,2.631,1524,2.631,1525,2.631,1526,2.631,1527,3.924,1528,3.924,1529,2.631,1530,2.631,1531,3.924,1532,3.924,1533,3.924,1534,3.924,1535,5.202,1536,3.924]],["title/modules/UserManagementPageModule.html",[344,1.014,1537,2.457]],["body/modules/UserManagementPageModule.html",[3,0.224,4,0.224,8,0.192,38,0.022,60,0.341,63,0.192,65,1.912,67,2.153,69,2.153,71,2.153,73,1.806,75,1.042,83,1.616,87,0.224,88,0.224,157,1.354,271,1.885,276,0.017,277,0.017,340,1.912,346,1.164,347,2.351,353,2.646,354,2.027,356,2.646,357,1.597,360,1.597,365,2.646,368,2.153,411,3.045,915,2.816,916,2.153,917,2.816,918,2.153,1008,3.668,1010,2.814,1011,4.509,1012,4.509,1013,4.509,1014,4.083,1015,3.322,1016,4.509,1017,4.083,1503,3.322,1537,4.931,1538,4.133,1539,4.133,1540,4.133,1541,4.418]],["title/modules/UserManagementPageRoutingModule.html",[344,1.014,1541,2.252]],["body/modules/UserManagementPageRoutingModule.html",[0,0.363,3,0.25,4,0.25,8,0.215,38,0.022,60,0.313,63,0.215,83,1.805,87,0.25,88,0.25,136,1.301,157,1.231,271,1.707,276,0.018,277,0.018,321,1.908,346,1.301,357,1.451,360,1.707,376,2.56,378,3.01,379,2.67,382,2.56,411,3.402,415,2.56,920,2.731,1010,3.145,1503,3.711,1541,4.001]],["title/components/ViewOrderDialog.html",[0,0.24,272,1.014]],["body/components/ViewOrderDialog.html",[0,0.359,1,0.677,2,1.218,3,0.111,4,0.111,5,0.843,6,0.843,7,0.843,8,0.095,11,1.207,12,1.655,13,1.749,14,0.843,15,2.17,16,0.798,17,2.066,18,1.566,19,2.236,20,0.661,21,0.878,27,0.98,28,1.405,30,1.879,31,0.785,33,1.33,35,1.33,37,1.034,38,0.022,39,1.067,40,0.85,41,0.928,44,1.288,46,2.503,47,2.096,48,1.284,50,0.892,52,1.362,53,1.624,54,1.986,56,1.408,60,0.311,61,2.123,62,0.944,63,0.145,64,1.728,65,0.944,66,1.974,67,1.063,68,1.974,69,1.063,70,2.394,71,1.063,72,1.728,73,1.362,74,2.236,75,0.514,76,0.944,77,0.944,78,0.843,79,1.207,80,1.207,82,0.544,83,0.798,84,1.292,85,0.755,86,1.292,87,0.205,88,0.205,89,0.641,90,1.292,93,1.728,94,1.292,95,1.292,96,0.944,97,1.292,98,1.529,99,1.292,100,1.292,101,1.292,102,1.063,103,1.292,104,1.292,105,1.292,106,1.292,107,1.207,108,1.131,110,1.992,111,1.597,112,0.892,113,1.955,115,1.255,118,0.677,120,1.292,121,1.292,122,2.394,123,1.292,124,1.292,125,1.292,126,1.39,129,1.39,130,2.123,131,2.183,132,2.394,133,1.39,134,1.39,135,1.39,136,1.192,137,1.39,138,1.39,139,1.39,140,1.39,141,1.39,143,2.123,144,1.207,145,1.843,147,1.39,148,1.728,150,2.575,152,1.529,153,2.575,154,2.236,155,2.394,156,2.123,157,0.831,159,1.292,160,1.131,161,1.292,162,1.292,163,2.123,164,1.292,165,1.728,166,1.974,167,2.123,168,2.123,169,1.39,171,1.292,172,1.954,174,1.843,176,1.843,177,1.843,178,1.843,186,0.843,201,0.677,202,1.843,210,1.974,225,1.39,227,1.728,232,1.843,235,1.39,243,0.843,244,1.288,245,1.153,246,0.843,247,1.655,248,0.843,249,1.749,250,0.677,251,1.66,252,0.843,253,0.677,254,0.798,255,1.034,256,1.881,257,0.641,258,0.715,259,0.843,260,0.607,261,0.843,262,1.562,263,0.607,264,0.843,265,0.98,266,0.575,267,0.407,268,0.843,269,0.641,270,0.843,271,0.641,272,1.405,273,2.066,274,0.843,275,0.843,276,0.01,277,0.01,279,1.884,294,0.944,328,2.205,402,2.887,426,1.504,429,1.39,497,1.529,500,1.958,501,1.529,502,1.529,503,1.529,509,1.529,521,1.64,525,1.504,531,1.207,532,1.64,547,1.063,560,1.207,567,1.529,568,1.529,569,1.001,593,1.97,617,3.117,618,3.104,619,1.812,620,1.812,624,1.812,625,3.872,627,3.402,628,3.757,629,4.522,630,3.757,631,3.757,632,3.402,634,1.812,636,1.812,638,2.767,639,2.767,641,1.812,643,1.812,644,2.767,645,1.39,646,1.39,647,1.812,648,3.356,649,1.812,650,1.64,651,1.504,652,1.64,653,1.812,654,1.812,655,1.504,656,1.812,657,1.812,658,1.812,659,1.812,660,3.356,661,3.356,662,1.812,663,1.812,664,1.812,665,1.812,666,1.812,667,1.812,668,1.812,669,1.812,670,1.812,671,1.812,672,1.812,673,2.767,674,1.812,675,1.812,676,1.812,677,4.232,678,3.117,679,3.117,680,3.117,1120,3.117,1542,2.389,1543,2.389,1544,2.389,1545,2.389,1546,3.648]],["title/coverage.html",[1547,4.176]],["body/coverage.html",[0,0.487,1,1.145,8,0.16,9,3.443,10,3.202,11,3.449,33,1.084,34,1.912,38,0.022,40,0.775,46,2.04,47,2.51,89,1.084,96,2.923,118,1.145,201,1.145,250,1.145,251,1.084,253,1.145,255,1.145,257,1.084,260,1.027,263,1.027,265,1.084,266,0.972,267,0.688,269,1.084,271,1.084,272,1.145,276,0.015,277,0.015,278,2.58,279,1.425,281,3.449,299,3.449,302,2.541,380,2.772,395,2.541,402,3.202,407,3.202,411,2.541,416,3.062,418,3.449,439,4.488,464,2.772,467,3.084,468,3.062,514,4.02,618,3.443,681,4.488,891,2.772,892,3.449,921,3.449,940,3.449,996,4.064,1018,3.449,1033,3.449,1115,3.062,1117,2.437,1150,3.443,1151,4.064,1175,2.349,1200,2.678,1209,2.678,1326,4.488,1503,2.772,1547,3.449,1548,4.037,1549,4.037,1550,4.037,1551,3.449,1552,7.17,1553,3.449,1554,7.17,1555,4.037,1556,6.698,1557,5.3,1558,4.037,1559,4.037,1560,4.037,1561,4.037,1562,6.526,1563,5.3,1564,4.037,1565,4.037,1566,4.037,1567,4.037,1568,4.037,1569,4.037,1570,4.037,1571,4.037,1572,4.037,1573,4.037,1574,4.037,1575,4.037,1576,4.037,1577,4.037,1578,4.037,1579,4.037,1580,4.037,1581,3.449,1582,4.528,1583,3.449,1584,5.575,1585,3.449,1586,3.449,1587,4.037]],["title/dependencies.html",[347,1.702,1588,2.55]],["body/dependencies.html",[38,0.022,63,0.205,75,1.109,276,0.018,277,0.018,321,1.818,347,2.036,362,5.276,363,4.684,429,2.996,560,2.602,574,2.292,916,2.292,918,2.292,1181,3.241,1285,4.399,1323,4.399,1324,4.399,1589,5.149,1590,7.202,1591,5.149,1592,6.176,1593,5.149,1594,5.149,1595,5.149,1596,6.86,1597,5.149,1598,5.149,1599,5.149,1600,5.149,1601,5.149,1602,5.149,1603,5.149,1604,5.149,1605,5.149,1606,5.149,1607,5.149,1608,5.149,1609,5.149,1610,5.149,1611,5.149,1612,5.149,1613,5.149,1614,5.149,1615,5.149,1616,5.149]],["title/index.html",[20,0.648,1617,3.056]],["body/index.html",[1,1.724,2,1.426,38,0.021,89,1.632,98,2.304,152,1.789,201,1.724,250,1.961,253,1.724,255,1.724,257,1.632,260,1.546,263,1.546,265,1.632,266,1.463,269,1.632,271,1.632,272,1.724,276,0.016,277,0.016,280,2.687,340,1.688,345,4.75,346,1.027,347,2.173,348,3.647,349,3.647,350,3.647,351,3.647,352,3.827,353,2.446,354,1.789,379,1.688,416,3.237,909,4.669,910,3.647,911,3.647,912,3.647,913,3.827,955,4.669,956,3.647,957,3.647,958,3.647,959,3.827,1003,4.902,1004,3.647,1005,3.647,1006,3.647,1007,3.827,1110,4.28,1111,3.647,1112,3.647,1113,3.647,1114,3.537,1138,4.902,1139,3.647,1140,3.647,1141,3.647,1142,3.827,1149,2.484,1277,4.669,1278,3.647,1279,3.647,1280,3.647,1281,3.827,1315,4.812,1316,3.647,1317,3.647,1318,3.647,1319,3.827,1537,4.669,1538,3.647,1539,3.647,1540,3.647,1541,3.827,1617,3.647,1618,4.269,1619,4.269,1620,4.269]],["title/modules.html",[346,1.177]],["body/modules.html",[38,0.018,276,0.018,277,0.018,345,3.514,346,1.232,352,3.221,363,5.538,736,6.239,909,3.514,913,3.221,955,3.514,959,3.221,1003,3.514,1007,3.221,1110,3.221,1114,2.977,1138,3.514,1142,3.221,1196,5.015,1277,3.514,1281,3.221,1315,3.514,1319,3.221,1537,3.514,1541,3.221,1621,7.303,1622,7.303,1623,7.503]],["title/properties.html",[21,1.036,1588,2.55]],["body/properties.html",[21,1.376,38,0.021,260,1.453,276,0.019,277,0.019,294,2.26,1297,4.884,1298,4.884,1624,6.567,1625,5.716,1626,5.716,1627,5.716,1628,5.716]],["title/routes.html",[379,1.933]],["body/routes.html",[38,0.019,276,0.019,277,0.019,379,2.317]],["title/miscellaneous/variables.html",[1629,2.55,1630,3.677]],["body/miscellaneous/variables.html",[20,0.825,38,0.022,40,1.203,47,3.114,51,2.883,52,2.723,53,2.549,186,1.608,251,1.538,276,0.016,277,0.016,439,3.454,460,4.343,464,4.302,467,3.825,468,4.343,681,3.454,718,4.893,773,3.891,1551,4.893,1553,4.893,1581,3.891,1582,5.616,1583,3.891,1584,3.891,1585,4.893,1586,5.616,1629,3.891,1630,3.891,1631,6.774,1632,5.727,1633,5.727,1634,4.554,1635,4.554,1636,4.554,1637,4.554,1638,4.554,1639,4.554,1640,4.554,1641,4.554,1642,6.265,1643,4.554,1644,4.554,1645,4.554,1646,4.554,1647,4.554,1648,4.554,1649,5.727,1650,5.727,1651,5.727,1652,5.727,1653,5.727,1654,6.915,1655,5.727,1656,5.727,1657,5.727,1658,5.727,1659,5.727,1660,5.727,1661,5.727,1662,5.727,1663,5.727,1664,5.727,1665,5.727]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":96,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1298,"title":{},"body":{"components/ProfilePage.html":{},"properties.html":{}}}],["0.11.4",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1262,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["0/1",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1103,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["1",{"_index":152,"title":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{},"index.html":{}}}],["1/3",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":100,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["100",{"_index":102,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["100vh",{"_index":989,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["10px",{"_index":1102,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["11",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1441,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["13",{"_index":1439,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["14",{"_index":1619,"title":{},"body":{"index.html":{}}}],["14.0.0",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":1001,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["15",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["15.2.3",{"_index":1592,"title":{},"body":{"dependencies.html":{}}}],["15.2.4",{"_index":1590,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":951,"title":{},"body":{"components/HomePage.html":{}}}],["18",{"_index":1618,"title":{},"body":{"index.html":{}}}],["18/22",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["1:393456523030:web:1d160ece617e4e8eaf2237",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1em",{"_index":1091,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["1px",{"_index":1274,"title":{},"body":{"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["2",{"_index":555,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["2.3.0",{"_index":1614,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1579,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":996,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"coverage.html":{}}}],["20.1.0",{"_index":1607,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":946,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["22",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["22px",{"_index":952,"title":{},"body":{"components/HomePage.html":{}}}],["23/28",{"_index":1578,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":101,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["26px",{"_index":949,"title":{},"body":{"components/HomePage.html":{}}}],["27",{"_index":1620,"title":{},"body":{"index.html":{}}}],["2em",{"_index":1090,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["3/10",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":1580,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":1100,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["30px",{"_index":1106,"title":{},"body":{"components/LoginPage.html":{}}}],["33",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["36em",{"_index":1104,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["393456523030",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.1.0",{"_index":1600,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["4.6.3",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":993,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["46",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["4em",{"_index":905,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["5",{"_index":98,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"index.html":{}}}],["50",{"_index":940,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["50px",{"_index":1099,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["50rem",{"_index":1276,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["6",{"_index":1502,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["6.0.3",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["6.1.9",{"_index":1604,"title":{},"body":{"dependencies.html":{}}}],["6/13",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["64c40",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64c40.appspot.com",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64c40.firebaseapp.com",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.5.0",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["7/21",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["75px",{"_index":1303,"title":{},"body":{"components/ProfilePage.html":{}}}],["8/24",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["8c8c8c",{"_index":953,"title":{},"body":{"components/HomePage.html":{}}}],["9.17.1",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["a.timestamp.getdate",{"_index":657,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["a.timestamp.gettime",{"_index":1359,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["abort",{"_index":1054,"title":{},"body":{"components/LoginPage.html":{}}}],["absolute",{"_index":937,"title":{},"body":{"components/HomePage.html":{}}}],["access",{"_index":1535,"title":{},"body":{"components/UserManagementPage.html":{}}}],["accessed",{"_index":786,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["actions",{"_index":93,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["activatedroutesnapshot",{"_index":421,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":1350,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["actual_component",{"_index":275,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["actually",{"_index":838,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["adddialog",{"_index":1,"title":{"components/AddDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["adddialogref",{"_index":109,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["adddoc",{"_index":775,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["additem",{"_index":29,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["additem(item",{"_index":209,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["additem(itemtoadd",{"_index":701,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["addlimit",{"_index":595,"title":{},"body":{"components/EditDialog.html":{}}}],["addlimit(item",{"_index":216,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["address",{"_index":515,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["adds",{"_index":43,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["admin",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/UserManagementPage.html":{}}}],["adminapp",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":61,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["again",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["aizasyakair2_b6rlny9ctii",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":155,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["alert.present",{"_index":171,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["alert.service",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["alertcontroller",{"_index":74,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["alertservice",{"_index":279,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["align",{"_index":906,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["already",{"_index":854,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["analytics",{"_index":1585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1589,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":916,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":63,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":918,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1593,"title":{},"body":{"dependencies.html":{}}}],["angular/material/card",{"_index":1148,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["angular/material/dialog",{"_index":73,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/material/divider",{"_index":1146,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["angular/material/input",{"_index":1015,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["angular/material/menu",{"_index":65,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/material/paginator",{"_index":67,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/material/select",{"_index":1144,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["angular/material/sort",{"_index":69,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/material/table",{"_index":71,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{}}}],["angular/platform",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"dependencies.html":{}}}],["apikey",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":251,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":250,"title":{"components/AppComponent.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["appid",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":935,"title":{},"body":{"components/HomePage.html":{}}}],["appmodule",{"_index":345,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appname",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":352,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["array",{"_index":724,"title":{},"body":{"injectables/FirebaseService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["array.foreach(num",{"_index":1494,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["array.length",{"_index":1497,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["arrays",{"_index":1180,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["async",{"_index":28,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["auth",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.onauthstatechanged(user",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdomain",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":380,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":1627,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":302,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"coverage.html":{}}}],["available",{"_index":736,"title":{},"body":{"injectables/FirebaseService.html":{},"modules.html":{}}}],["average",{"_index":1485,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["avg",{"_index":1493,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["await",{"_index":115,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["b",{"_index":655,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["b.timestamp.getdate",{"_index":656,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["b.timestamp.gettime",{"_index":1360,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["background",{"_index":1271,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["backgroundcolor",{"_index":1236,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["bar",{"_index":1603,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":129,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["basis",{"_index":1457,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["below",{"_index":898,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["black",{"_index":554,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{}}}],["block",{"_index":1108,"title":{},"body":{"components/LoginPage.html":{}}}],["bold",{"_index":1311,"title":{},"body":{"components/ProfilePage.html":{}}}],["boolean",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["bootstrap",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":1272,"title":{},"body":{"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["bordercolor",{"_index":1235,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["bottom",{"_index":1109,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["bread",{"_index":1265,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["browse",{"_index":1623,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["buckets",{"_index":1467,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["buckets.length",{"_index":1470,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["buckets.push(1",{"_index":1472,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["buckets.push(this.getnumitemoccurrences(order.items",{"_index":1479,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["buckets[i",{"_index":1471,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["bundledwebruntime",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":1064,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["buttons",{"_index":164,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["c",{"_index":1424,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["called",{"_index":224,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["calls",{"_index":1507,"title":{},"body":{"components/UserManagementPage.html":{}}}],["can't",{"_index":1066,"title":{},"body":{"components/LoginPage.html":{}}}],["canactivate",{"_index":387,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":420,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":166,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["canceldata",{"_index":596,"title":{},"body":{"components/EditDialog.html":{}}}],["canceldata(item",{"_index":239,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["cancelitem",{"_index":203,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["cancelled",{"_index":1347,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["cancellimit",{"_index":204,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["capacitor.config.ts",{"_index":1551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/app",{"_index":1595,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":1601,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":1602,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":567,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["catch((err",{"_index":200,"title":{},"body":{"components/AddDialog.html":{},"injectables/AuthService.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["cell",{"_index":992,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["center",{"_index":908,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["change",{"_index":769,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["changed",{"_index":526,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["changedetectorref",{"_index":643,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["changes",{"_index":225,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["changing",{"_index":659,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["chart",{"_index":1191,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["chart.js",{"_index":1216,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["chartconfiguration",{"_index":1214,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["chartconfiguration['data",{"_index":1250,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["chartoptions",{"_index":1206,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["charts",{"_index":1181,"title":{},"body":{"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"dependencies.html":{}}}],["charttype",{"_index":1215,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["check",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["child",{"_index":1309,"title":{},"body":{"components/ProfilePage.html":{}}}],["claims",{"_index":747,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["class",{"_index":88,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["click)=\"additem()\">add",{"_index":242,"title":{},"body":{"components/AddDialog.html":{}}}],["clicked",{"_index":1240,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["close",{"_index":617,"title":{},"body":{"components/EditDialog.html":{},"components/ViewOrderDialog.html":{}}}],["closeadddialog",{"_index":183,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["closes",{"_index":182,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["cloud",{"_index":712,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["cluster_appmodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_forgotpasswordpagemodule",{"_index":910,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"index.html":{}}}],["cluster_forgotpasswordpagemodule_declarations",{"_index":912,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"index.html":{}}}],["cluster_forgotpasswordpagemodule_imports",{"_index":911,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":956,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":958,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_imports",{"_index":957,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_inventorymanagementpagemodule",{"_index":1004,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"index.html":{}}}],["cluster_inventorymanagementpagemodule_declarations",{"_index":1005,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"index.html":{}}}],["cluster_inventorymanagementpagemodule_imports",{"_index":1006,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule",{"_index":1111,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":1112,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_imports",{"_index":1113,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_ordermanagementpagemodule",{"_index":1139,"title":{},"body":{"modules/OrderManagementPageModule.html":{},"index.html":{}}}],["cluster_ordermanagementpagemodule_declarations",{"_index":1141,"title":{},"body":{"modules/OrderManagementPageModule.html":{},"index.html":{}}}],["cluster_ordermanagementpagemodule_imports",{"_index":1140,"title":{},"body":{"modules/OrderManagementPageModule.html":{},"index.html":{}}}],["cluster_pantrystatisticspagemodule",{"_index":1278,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"index.html":{}}}],["cluster_pantrystatisticspagemodule_declarations",{"_index":1279,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"index.html":{}}}],["cluster_pantrystatisticspagemodule_imports",{"_index":1280,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule",{"_index":1316,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule_declarations",{"_index":1318,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule_imports",{"_index":1317,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_usermanagementpagemodule",{"_index":1538,"title":{},"body":{"modules/UserManagementPageModule.html":{},"index.html":{}}}],["cluster_usermanagementpagemodule_declarations",{"_index":1539,"title":{},"body":{"modules/UserManagementPageModule.html":{},"index.html":{}}}],["cluster_usermanagementpagemodule_imports",{"_index":1540,"title":{},"body":{"modules/UserManagementPageModule.html":{},"index.html":{}}}],["col",{"_index":1270,"title":{},"body":{"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["col:last",{"_index":1313,"title":{},"body":{"components/ProfilePage.html":{}}}],["collapse",{"_index":1305,"title":{},"body":{"components/ProfilePage.html":{}}}],["collection",{"_index":774,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["color",{"_index":574,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserManagementPage.html":{},"dependencies.html":{}}}],["colorpickermodule",{"_index":1322,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["colors",{"_index":528,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["column",{"_index":994,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["commonmodule",{"_index":915,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["compared",{"_index":1446,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["component",{"_index":0,"title":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["component_template",{"_index":248,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"index.html":{}}}],["compute",{"_index":1459,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["computes",{"_index":1429,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["config",{"_index":1553,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":156,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(\"error",{"_index":1062,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(\"getting",{"_index":1254,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(\"searching",{"_index":1264,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(\"submit",{"_index":1239,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log('calling",{"_index":851,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["console.log('done",{"_index":889,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["console.log('getperms",{"_index":1526,"title":{},"body":{"components/UserManagementPage.html":{}}}],["console.log('return",{"_index":837,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["console.log('returning",{"_index":832,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["console.log('signout",{"_index":1069,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log('user",{"_index":1078,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(d",{"_index":1524,"title":{},"body":{"components/UserManagementPage.html":{}}}],["console.log(data.status",{"_index":675,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(enddateobj.getmonth",{"_index":1248,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(err",{"_index":1082,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(fromdateobj.getmonth",{"_index":1247,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(item",{"_index":197,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["console.log(page",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(this.data",{"_index":206,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/ProfilePage.html":{}}}],["console.log(this.enddate",{"_index":1222,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.enumvals",{"_index":671,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(this.forecaster.getitemdemandbymonth(\"bread",{"_index":1267,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.forecaster.getnumorderbymonth",{"_index":1257,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.fromdate",{"_index":1221,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.nameinput",{"_index":230,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["console.log(this.pantry",{"_index":565,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["console.log(this.router.url",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(this.selectedfooditem",{"_index":1223,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["console.log(this.value",{"_index":672,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(this.values",{"_index":670,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["console.log(user.perms",{"_index":1529,"title":{},"body":{"components/UserManagementPage.html":{}}}],["const",{"_index":136,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":202,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["constructor(alertcontroller",{"_index":283,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(data",{"_index":521,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["constructor(dialog",{"_index":966,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["constructor(firebase",{"_index":1287,"title":{},"body":{"components/ProfilePage.html":{}}}],["constructor(firebaseservice",{"_index":32,"title":{},"body":{"components/AddDialog.html":{},"components/HomePage.html":{}}}],["constructor(forecaster",{"_index":1174,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["constructor(loadingctrl",{"_index":1021,"title":{},"body":{"injectables/LoadingService.html":{}}}],["constructor(loadingservice",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["constructor(private",{"_index":297,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["constructor(router",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginPage.html":{}}}],["container",{"_index":902,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/UserManagementPage.html":{}}}],["containing",{"_index":723,"title":{},"body":{"injectables/FirebaseService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["contains",{"_index":738,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["content",{"_index":1093,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["contents",{"_index":680,"title":{},"body":{"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["contrast",{"_index":576,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["conv",{"_index":841,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["convert",{"_index":631,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["convertitembymonth",{"_index":1167,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["convertordersbymonth",{"_index":1168,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["converts",{"_index":627,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["convolution",{"_index":1481,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["convolve",{"_index":1487,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["convolve1d(array",{"_index":1491,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["convolved",{"_index":1486,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["copy",{"_index":1492,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["copy.push(num",{"_index":1495,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["coresponding",{"_index":630,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["corresponding",{"_index":1462,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["counter",{"_index":1370,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["coverage",{"_index":1547,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":1372,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["createuserwithemailandpassword",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["cssstyledeclaration",{"_index":559,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["curmonth",{"_index":1468,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["current",{"_index":1430,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["currentdemand",{"_index":1448,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["currently",{"_index":735,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["currrentpage",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["cursor",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":746,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["custom_elements_schema",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{}}}],["customized",{"_index":289,"title":{},"body":{"injectables/AlertService.html":{}}}],["cut",{"_index":1415,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["cut.foreach(order",{"_index":1469,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["cutreshaped",{"_index":1417,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["cutreshaped.foreach(orderlist",{"_index":1419,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["d",{"_index":1425,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{}}}],["data",{"_index":113,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["data.id",{"_index":677,"title":{},"body":{"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["data.limit",{"_index":615,"title":{},"body":{"components/EditDialog.html":{}}}],["data.name",{"_index":611,"title":{},"body":{"components/EditDialog.html":{}}}],["data.quantity",{"_index":614,"title":{},"body":{"components/EditDialog.html":{}}}],["data.status",{"_index":673,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["data.timestamp.tolocalestring",{"_index":679,"title":{},"body":{"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["data:this.ordersbymonthnums",{"_index":1261,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["data['address",{"_index":811,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['description",{"_index":810,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['logourl",{"_index":812,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['name",{"_index":809,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['orderlimit",{"_index":815,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['primarycolor",{"_index":813,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["data['secondarycolor",{"_index":814,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["database",{"_index":228,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["datainventory",{"_index":1330,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["dataorders",{"_index":1331,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["datapantry",{"_index":1329,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["datasets",{"_index":1230,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["datatable",{"_index":1606,"title":{},"body":{"dependencies.html":{}}}],["date",{"_index":1134,"title":{},"body":{"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["date(this.enddate",{"_index":1246,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["date(this.fromdate",{"_index":1243,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["datetime",{"_index":1355,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["db",{"_index":47,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["debug",{"_index":1184,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["declarations",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["decoration",{"_index":954,"title":{},"body":{"components/HomePage.html":{}}}],["decorators",{"_index":531,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["decrement",{"_index":213,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["decrements",{"_index":212,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["default",{"_index":51,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["delete",{"_index":169,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["deletedoc",{"_index":782,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["deletedoc(docref",{"_index":867,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["demand",{"_index":1266,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["demandhist.push(element.orders",{"_index":1500,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["demote",{"_index":1514,"title":{},"body":{"components/UserManagementPage.html":{}}}],["demoted",{"_index":709,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["demoteuser",{"_index":684,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["demoteuser(uid",{"_index":704,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["dependencies",{"_index":347,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["desc",{"_index":551,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["description",{"_index":294,"title":{},"body":{"injectables/AlertService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"properties.html":{}}}],["desired",{"_index":1338,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["details",{"_index":254,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["determine",{"_index":785,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["dialog",{"_index":17,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["dialog'},{'name",{"_index":249,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["dialog.html",{"_index":19,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["dialogref",{"_index":174,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":177,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["dictionary",{"_index":745,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["difference",{"_index":1432,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["dimensional",{"_index":1480,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["direction",{"_index":1088,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["directive",{"_index":246,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["directives",{"_index":274,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["discard",{"_index":238,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["discards",{"_index":234,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["dismiss",{"_index":852,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["dismissloader",{"_index":1019,"title":{},"body":{"injectables/LoadingService.html":{}}}],["display",{"_index":1086,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["displayedcolumns",{"_index":90,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["doc",{"_index":780,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["doc(db",{"_index":847,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["doc.exists",{"_index":818,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata",{"_index":820,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['date",{"_index":843,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['imageurl",{"_index":827,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['limit",{"_index":826,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['name",{"_index":823,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['orderquan",{"_index":825,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['quantity",{"_index":824,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['status",{"_index":844,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docdata['uid",{"_index":845,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["docref",{"_index":846,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["document",{"_index":752,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["document.body.style.setproperty",{"_index":572,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["documentation",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["documentsnapshot",{"_index":715,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["dynamic",{"_index":1594,"title":{},"body":{"dependencies.html":{}}}],["e4ega5wucycgjy",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":172,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["editdetailsdialog",{"_index":253,"title":{"components/EditDetailsDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["editdialog",{"_index":201,"title":{"components/EditDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["editorderdialog",{"_index":255,"title":{"components/EditOrderDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["element",{"_index":245,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["element.email",{"_index":1531,"title":{},"body":{"components/UserManagementPage.html":{}}}],["element.id",{"_index":1136,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["element.limit",{"_index":988,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["element.name",{"_index":986,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["element.perms.admin",{"_index":1532,"title":{},"body":{"components/UserManagementPage.html":{}}}],["element.perms.pantry",{"_index":1533,"title":{},"body":{"components/UserManagementPage.html":{}}}],["element.quantity",{"_index":987,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["element.timestamp.tolocalestring",{"_index":1135,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["elementref",{"_index":544,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["email",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/UserManagementPage.html":{}}}],["emited",{"_index":133,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["emitted",{"_index":1050,"title":{},"body":{"components/LoginPage.html":{}}}],["end",{"_index":1269,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["end:date",{"_index":1414,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["enddate",{"_index":1154,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["enddatechange",{"_index":1169,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["enddateobj",{"_index":1244,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["enter",{"_index":897,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{}}}],["enumvals",{"_index":619,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["environment",{"_index":1582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebaseconfig",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":568,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["error",{"_index":292,"title":{},"body":{"injectables/AlertService.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["error('food",{"_index":804,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["error('item",{"_index":853,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["error('no",{"_index":798,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["error('order",{"_index":869,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["error('pantry",{"_index":877,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["event",{"_index":132,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["event.detail.value",{"_index":1073,"title":{},"body":{"components/LoginPage.html":{}}}],["event.target",{"_index":138,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["exist",{"_index":805,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["exists",{"_index":855,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["export",{"_index":87,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["exports",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["factor",{"_index":1490,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["failed",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["falling",{"_index":1420,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["false",{"_index":53,"title":{},"body":{"components/AddDialog.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":1275,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["field",{"_index":1000,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["fill",{"_index":1002,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{}}}],["filled",{"_index":1361,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["filter",{"_index":130,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["filtervalue",{"_index":137,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["filtervalue.trim().tolowercase",{"_index":141,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["find",{"_index":147,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["firebase",{"_index":560,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"dependencies.html":{}}}],["firebase.service",{"_index":1327,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["firebase/auth",{"_index":431,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["firebase/firestore",{"_index":783,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["firebase/functions",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["firebaseconfig",{"_index":1586,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebaseservice",{"_index":33,"title":{"injectables/FirebaseService.html":{}},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["flex",{"_index":1087,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["float",{"_index":1302,"title":{},"body":{"components/ProfilePage.html":{}}}],["font",{"_index":944,"title":{},"body":{"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["food",{"_index":236,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["fooditem",{"_index":76,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["fooditem(snap.id",{"_index":822,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["fooditemconv",{"_index":685,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["fooditemconv(snap",{"_index":714,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["foodlist",{"_index":1368,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["foodpantry",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forcedisable",{"_index":22,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["forecaster",{"_index":1177,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["forecasting",{"_index":1427,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["forecastservice",{"_index":1175,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["forgot",{"_index":258,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["forgotpasswordpage",{"_index":257,"title":{"components/ForgotPasswordPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["forgotpasswordpagemodule",{"_index":909,"title":{"modules/ForgotPasswordPageModule.html":{}},"body":{"modules/ForgotPasswordPageModule.html":{},"index.html":{},"modules.html":{}}}],["forgotpasswordpageroutingmodule",{"_index":913,"title":{"modules/ForgotPasswordPageRoutingModule.html":{}},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["form",{"_index":999,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["formsmodule",{"_index":917,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["found",{"_index":799,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["framework",{"_index":1628,"title":{},"body":{"properties.html":{}}}],["frequency",{"_index":1454,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["fromdate",{"_index":1155,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["fromdatechange",{"_index":1170,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["fromdateobj",{"_index":1242,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["front",{"_index":1476,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["full",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["function",{"_index":713,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["functions",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["g",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gender",{"_index":995,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["general",{"_index":678,"title":{},"body":{"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["generic",{"_index":288,"title":{},"body":{"injectables/AlertService.html":{},"injectables/LoadingService.html":{}}}],["getanalytics(app",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getauth",{"_index":430,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["getauth().onauthstatechanged((user",{"_index":436,"title":{},"body":{"guards/AuthGuard.html":{}}}],["getauth(app",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcurrentuser",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["getdoc",{"_index":778,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getdoc(doc(db",{"_index":803,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getdoc(docref",{"_index":849,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getdocs",{"_index":777,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getdocs(collection(db",{"_index":796,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getenumkey",{"_index":621,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["getenumkey(status",{"_index":624,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["getfirestore",{"_index":773,"title":{},"body":{"injectables/FirebaseService.html":{},"miscellaneous/variables.html":{}}}],["getfirestore(app",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getfunctions",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"miscellaneous/variables.html":{}}}],["getinventory",{"_index":686,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getitemdemandbymonth(itemname",{"_index":1405,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getitemdemandinrange(itemname:string",{"_index":1412,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getitemsfromorders(orders",{"_index":1374,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getnumitemoccurrences(list",{"_index":1369,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getnumorder(type",{"_index":1340,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getnumorderbymonth",{"_index":1395,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getorderhistory",{"_index":1362,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getorderitems",{"_index":687,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getorderitems(order",{"_index":726,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getorders",{"_index":688,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getordersindaterange(orderlist",{"_index":1421,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getoutstandingitems",{"_index":1351,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getpage",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["getpantries",{"_index":689,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getpantry",{"_index":690,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getpantryid",{"_index":691,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getperms",{"_index":692,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getperms(params).then((res",{"_index":887,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getperms(user",{"_index":742,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["gets",{"_index":561,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getstatus",{"_index":1120,"title":{},"body":{"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["getstatus(data.status",{"_index":1546,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["getstatus(element.status",{"_index":1137,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["getstatus(status",{"_index":660,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["getusers",{"_index":693,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getusers().then(async",{"_index":878,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["getxmonthitemtrend(n",{"_index":1478,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["getxmonthtrend(n",{"_index":1464,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["given",{"_index":1336,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["global.scss",{"_index":1299,"title":{},"body":{"components/ProfilePage.html":{}}}],["globalmodels/fooditem",{"_index":77,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["globalmodels/order",{"_index":645,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["globalmodels/orderstatus",{"_index":646,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["globalmodels/pantry",{"_index":545,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["globalmodels/user",{"_index":784,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["grant",{"_index":1534,"title":{},"body":{"components/UserManagementPage.html":{}}}],["grantadmin",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["grantadmin(params).catch((err",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["grantadminaccess",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["grantadminaccess(uid",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["grants",{"_index":757,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["graph",{"_index":1196,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"modules.html":{}}}],["grid",{"_index":1304,"title":{},"body":{"components/ProfilePage.html":{}}}],["guard",{"_index":416,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["guards",{"_index":417,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hamburger",{"_index":933,"title":{},"body":{"components/HomePage.html":{}}}],["handler",{"_index":168,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["handling",{"_index":293,"title":{},"body":{"injectables/AlertService.html":{}}}],["header",{"_index":160,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["height",{"_index":948,"title":{},"body":{"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["here",{"_index":1068,"title":{},"body":{"components/LoginPage.html":{}}}],["hidden",{"_index":1307,"title":{},"body":{"components/ProfilePage.html":{}}}],["history",{"_index":1378,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["history.foreach(order",{"_index":1382,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["history.foreach(orderlist",{"_index":1397,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["home",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["home'},{'name",{"_index":261,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["home.page",{"_index":961,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":923,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":922,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":260,"title":{"components/HomePage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["homepagemodule",{"_index":955,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["homepageroutingmodule",{"_index":959,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["horizontal",{"_index":1094,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["html",{"_index":244,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["htmlinputelement).value",{"_index":139,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["https://ionicframework.com",{"_index":1626,"title":{},"body":{"properties.html":{}}}],["httpscallable",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["httpscallable(functions",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["icon",{"_index":516,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["iconstyle",{"_index":558,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["icontentref",{"_index":557,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["id",{"_index":148,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["identifier",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["idk",{"_index":189,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["idtoken",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!this.limitinput",{"_index":190,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["if(!userisadmin",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(fromdateobj.getmonth",{"_index":1249,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["if(item.limit",{"_index":217,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["if(this.enddate",{"_index":1245,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["if(this.nameinput",{"_index":231,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["if(this.records.paginator",{"_index":142,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["if(this.selectedfooditem",{"_index":1241,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["image",{"_index":240,"title":{},"body":{"components/AddDialog.html":{}}}],["imageurl",{"_index":195,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["img",{"_index":1097,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["implements",{"_index":12,"title":{},"body":{"components/AddDialog.html":{},"guards/AuthGuard.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["import('./forgot",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./home/home.module').then",{"_index":384,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./inventory",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./login/login.module').then",{"_index":391,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./order",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pantry",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./user",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1101,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["imports",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["increment",{"_index":208,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["increments",{"_index":207,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["init",{"_index":562,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["initalizes",{"_index":652,"title":{},"body":{"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["initializeapp(firebaseconfig",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initializes",{"_index":1187,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["inject",{"_index":79,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["inject(mat_dialog_data",{"_index":532,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ViewOrderDialog.html":{}}}],["injectable",{"_index":278,"title":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{}},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["injectables",{"_index":280,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"index.html":{}}}],["injected",{"_index":1067,"title":{},"body":{"components/LoginPage.html":{}}}],["inline",{"_index":1107,"title":{},"body":{"components/LoginPage.html":{}}}],["input",{"_index":134,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["inputs",{"_index":1043,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["instance",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"injectables/FirebaseService.html":{}}}],["integer",{"_index":768,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["interface",{"_index":1117,"title":{"interfaces/Pantry.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}},"body":{"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":1149,"title":{},"body":{"interfaces/Pantry.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"index.html":{}}}],["intialized",{"_index":741,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["intializes",{"_index":1512,"title":{},"body":{"components/UserManagementPage.html":{}}}],["inventory",{"_index":82,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["inventorymanagementpage",{"_index":89,"title":{"components/InventoryManagementPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["inventorymanagementpage.adddialogref",{"_index":181,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["inventorymanagementpage.adddialogref.close",{"_index":184,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["inventorymanagementpage.closeadddialog",{"_index":199,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["inventorymanagementpagemodule",{"_index":1003,"title":{"modules/InventoryManagementPageModule.html":{}},"body":{"modules/InventoryManagementPageModule.html":{},"index.html":{},"modules.html":{}}}],["inventorymanagementpageroutingmodule",{"_index":1007,"title":{"modules/InventoryManagementPageRoutingModule.html":{}},"body":{"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["io.ionic.starter",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":573,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["ioncontent",{"_index":546,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["ionic",{"_index":1624,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":75,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"injectables/LoadingService.html":{},"modules/LoginPageModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"components/ViewOrderDialog.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["ionicmodule.forroot",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicons",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["ionviewwillenter",{"_index":650,"title":{},"body":{"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["isadmin",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadmin({pantry",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnan(number(v",{"_index":639,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["item",{"_index":44,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["item's",{"_index":220,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["item.limit",{"_index":218,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["item.name",{"_index":232,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["item.quantity",{"_index":210,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["itembymonth",{"_index":1156,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["itembymonthmonths",{"_index":1157,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["itembymonthnums",{"_index":1158,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["itemname",{"_index":1367,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["items",{"_index":729,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["items's",{"_index":214,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["itemtoadd",{"_index":703,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.id",{"_index":848,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.imageurl",{"_index":857,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.limit",{"_index":858,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.name",{"_index":859,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoadd.quantity",{"_index":860,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoremove",{"_index":761,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoremove.id",{"_index":866,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate",{"_index":764,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate.id",{"_index":861,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate.limit",{"_index":864,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate.name",{"_index":863,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["itemtoupdate.quantity",{"_index":865,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["justify",{"_index":1092,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["kernel",{"_index":1482,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["kernel.length",{"_index":1499,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["label",{"_index":1232,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["labels",{"_index":1228,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["later",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["left",{"_index":938,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["legend",{"_index":243,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["length",{"_index":95,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["limit",{"_index":92,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["limitinput",{"_index":23,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["line",{"_index":947,"title":{},"body":{"components/HomePage.html":{}}}],["linear",{"_index":1452,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["linechartdataitem",{"_index":1159,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["linechartdataorders",{"_index":1160,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["linechartlegend",{"_index":1161,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["linechartoptions",{"_index":1162,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["link",{"_index":900,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["list",{"_index":1345,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["list.foreach(item",{"_index":1371,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["lists",{"_index":1376,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["loadchildren",{"_index":383,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":1025,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loading.present",{"_index":1031,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loading.service",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["loadingcontroller",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["loadingctrl",{"_index":1023,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingservice",{"_index":34,"title":{"injectables/LoadingService.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"coverage.html":{}}}],["log",{"_index":1085,"title":{},"body":{"components/LoginPage.html":{}}}],["logged",{"_index":434,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FirebaseService.html":{}}}],["login",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{}}}],["login'},{'name",{"_index":264,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["login.page",{"_index":1116,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Pantry.html":{}}}],["login.page.html",{"_index":1035,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":1034,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":263,"title":{"components/LoginPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["loginpagemodule",{"_index":1110,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"index.html":{},"modules.html":{}}}],["loginpageroutingmodule",{"_index":1114,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Pantry.html":{},"index.html":{},"modules.html":{}}}],["logo",{"_index":552,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["logourl",{"_index":582,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"components/ProfilePage.html":{}}}],["logs",{"_index":788,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["long",{"_index":1401,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["m",{"_index":385,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.forgotpasswordpagemodule",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":386,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.inventorymanagementpagemodule",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.ordermanagementpagemodule",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.pantrystatisticspagemodule",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilepagemodule",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.usermanagementpagemodule",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["made",{"_index":235,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["mainly",{"_index":636,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["make",{"_index":433,"title":{},"body":{"guards/AuthGuard.html":{}}}],["makeadmin",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["makeadmin(params).then",{"_index":888,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["makeadmin(user",{"_index":1505,"title":{},"body":{"components/UserManagementPage.html":{}}}],["manage",{"_index":934,"title":{},"body":{"components/HomePage.html":{}}}],["management",{"_index":83,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["management'},{'name",{"_index":262,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["management.module').then",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["management.module.ts",{"_index":1008,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["management.page",{"_index":1010,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["management.page.html",{"_index":84,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["management.page.scss",{"_index":86,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["management.page.ts",{"_index":11,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["management.page.ts:110",{"_index":1127,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:116",{"_index":973,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:127",{"_index":971,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:134",{"_index":1128,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:140",{"_index":968,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:146",{"_index":1129,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:151",{"_index":57,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:152",{"_index":58,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:153",{"_index":55,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:154",{"_index":59,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:155",{"_index":36,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:160",{"_index":49,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:162",{"_index":642,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:163",{"_index":640,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:164",{"_index":623,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:165",{"_index":637,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:167",{"_index":42,"title":{},"body":{"components/AddDialog.html":{}}}],["management.page.ts:170",{"_index":633,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:181",{"_index":626,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:189",{"_index":635,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["management.page.ts:19",{"_index":1516,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:195",{"_index":599,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:196",{"_index":609,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:198",{"_index":607,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:199",{"_index":608,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:20",{"_index":1521,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:201",{"_index":610,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:202",{"_index":603,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:207",{"_index":1542,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["management.page.ts:208",{"_index":1545,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["management.page.ts:209",{"_index":1544,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["management.page.ts:21",{"_index":1517,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:210",{"_index":600,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:218",{"_index":1543,"title":{},"body":{"components/ViewOrderDialog.html":{}}}],["management.page.ts:219",{"_index":604,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:22",{"_index":1518,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:228",{"_index":601,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:23",{"_index":1519,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:24",{"_index":1520,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:242",{"_index":605,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:25",{"_index":1133,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:256",{"_index":606,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:26",{"_index":979,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["management.page.ts:269",{"_index":602,"title":{},"body":{"components/EditDialog.html":{}}}],["management.page.ts:27",{"_index":984,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/UserManagementPage.html":{}}}],["management.page.ts:28",{"_index":980,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["management.page.ts:29",{"_index":981,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:30",{"_index":982,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:31",{"_index":1515,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:32",{"_index":983,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:33",{"_index":985,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:34",{"_index":977,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["management.page.ts:35",{"_index":1122,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:36",{"_index":967,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:37",{"_index":1132,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:39",{"_index":978,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:42",{"_index":1510,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:43",{"_index":1126,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:44",{"_index":970,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:47",{"_index":1124,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:51",{"_index":976,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:54",{"_index":1125,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:58",{"_index":969,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:63",{"_index":1506,"title":{},"body":{"components/UserManagementPage.html":{}}}],["management.page.ts:66",{"_index":975,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:75",{"_index":1131,"title":{},"body":{"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["management.page.ts:78",{"_index":974,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:89",{"_index":1123,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management.page.ts:92",{"_index":972,"title":{},"body":{"components/InventoryManagementPage.html":{}}}],["management.page.ts:97",{"_index":1130,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["management/inventory",{"_index":10,"title":{},"body":{"components/AddDialog.html":{},"modules/AppRoutingModule.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"coverage.html":{}}}],["management/order",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["management/user",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"coverage.html":{}}}],["margin",{"_index":903,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["mat",{"_index":991,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["mat_dialog_data",{"_index":80,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["matcardmodule",{"_index":1147,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["matching",{"_index":277,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":72,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matdialogmodule",{"_index":1017,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["matdialogref",{"_index":647,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matdividermodule",{"_index":1145,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["matinputmodule",{"_index":1014,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["matmenumodule",{"_index":1016,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["matmenutrigger",{"_index":64,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matpaginator",{"_index":66,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matpaginatormodule",{"_index":1012,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["matselectmodule",{"_index":1143,"title":{},"body":{"modules/OrderManagementPageModule.html":{}}}],["matsort",{"_index":68,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["matsortmodule",{"_index":1013,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["mattable",{"_index":644,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["mattabledatasource",{"_index":70,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["mattabledatasource(data",{"_index":119,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/UserManagementPage.html":{}}}],["mattablemodule",{"_index":1011,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["max",{"_index":592,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["maxorder",{"_index":517,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["measurementid",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["message",{"_index":161,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["messagingsenderid",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["method",{"_index":926,"title":{},"body":{"components/HomePage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["min",{"_index":1098,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["miscellaneous",{"_index":1629,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modifed",{"_index":215,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["modified",{"_index":221,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["modify",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["module",{"_index":344,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{}},"body":{}}],["modules",{"_index":346,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["month",{"_index":1190,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["monthly",{"_index":1456,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["months",{"_index":1458,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["n",{"_index":1426,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["nameinput",{"_index":24,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["navigate",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{}}}],["navigatetopage",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["navigatetopage(page",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["negation",{"_index":1473,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["negative",{"_index":1461,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["new",{"_index":118,"title":{},"body":{"components/AddDialog.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["newstatus",{"_index":766,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["ng2",{"_index":1285,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":126,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["ngchartsmodule",{"_index":1284,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{}}}],["ngmodule",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["ngoninit",{"_index":30,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["ngx",{"_index":1323,"title":{},"body":{"modules/ProfilePageModule.html":{},"dependencies.html":{}}}],["none",{"_index":616,"title":{},"body":{"components/EditDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{}}}],["norm",{"_index":1488,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["normalization",{"_index":1489,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["note",{"_index":1483,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["now",{"_index":1465,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["null",{"_index":793,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["num",{"_index":1496,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["number",{"_index":54,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["numbers",{"_index":1335,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["numeric",{"_index":1403,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["numerical",{"_index":628,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["object",{"_index":718,"title":{},"body":{"injectables/FirebaseService.html":{},"miscellaneous/variables.html":{}}}],["object.values(orderstatus).filter((v",{"_index":638,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["objects",{"_index":725,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["observable",{"_index":426,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["occurences",{"_index":1366,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["occurring",{"_index":1475,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["occurs",{"_index":1053,"title":{},"body":{"components/LoginPage.html":{}}}],["ok",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["onauthstatechanged",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["onauthstatechanged(auth",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["one",{"_index":613,"title":{},"body":{"components/EditDialog.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["openadddialog",{"_index":179,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["openalert",{"_index":963,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["openalert(item",{"_index":158,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["openalert(order",{"_index":664,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["openeditdetailsdialog",{"_index":1286,"title":{},"body":{"components/ProfilePage.html":{}}}],["openeditdetailsdialog(data",{"_index":570,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["openeditdialog",{"_index":964,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["openeditdialog(item",{"_index":173,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["openeditdialog(order",{"_index":666,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["opens",{"_index":154,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["openviewdialog",{"_index":1121,"title":{},"body":{"components/OrderManagementPage.html":{}}}],["openviewdialog(order",{"_index":668,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["optional",{"_index":41,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["optionally",{"_index":1339,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["order",{"_index":256,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["order(snap.id",{"_index":842,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["order.id",{"_index":868,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["order.ref.path",{"_index":834,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["order.status",{"_index":1343,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["order.timestamp.getfullyear",{"_index":1387,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["order.timestamp.getmonth",{"_index":1385,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["order.timestamp.gettime",{"_index":1422,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderconv",{"_index":694,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["orderconv(snap",{"_index":750,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["orderhistorybymonth",{"_index":1379,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderlimit",{"_index":588,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["orderlist",{"_index":1356,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderlist.foreach(order",{"_index":1394,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderlist.length",{"_index":1399,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderlist[0].timestamp.tolocalestring('default",{"_index":1400,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["ordermanagementpage",{"_index":265,"title":{"components/OrderManagementPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["ordermanagementpagemodule",{"_index":1138,"title":{"modules/OrderManagementPageModule.html":{}},"body":{"modules/OrderManagementPageModule.html":{},"index.html":{},"modules.html":{}}}],["ordermanagementpageroutingmodule",{"_index":1142,"title":{"modules/OrderManagementPageRoutingModule.html":{}},"body":{"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["orderpath",{"_index":833,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["orders",{"_index":593,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["orders.foreach(order",{"_index":1375,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orders.sort((a",{"_index":1358,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orders.sort(function(a",{"_index":654,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["ordersbymonth",{"_index":1163,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["ordersbymonthmonths",{"_index":1164,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["ordersbymonthnums",{"_index":1165,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["orderstatus",{"_index":625,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["orderstatus.processing",{"_index":1352,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderstatus['order",{"_index":1363,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["orderstatus[status",{"_index":661,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["out",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"index.html":{}}}],["outer",{"_index":816,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["overlay",{"_index":1027,"title":{},"body":{"injectables/LoadingService.html":{}}}],["overview",{"_index":1617,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":950,"title":{},"body":{"components/HomePage.html":{}}}],["p8h232s2f7",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":1588,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1089,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["paddingnum",{"_index":1498,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["page",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["pagesize",{"_index":97,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pagesizeoptions",{"_index":99,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["paginator",{"_index":104,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pantries",{"_index":734,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["pantry",{"_index":267,"title":{"interfaces/Pantry.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["pantry's",{"_index":740,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["pantry('id",{"_index":550,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["pantry(snapshot.id",{"_index":808,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pantry.address",{"_index":870,"title":{},"body":{"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["pantry.desc",{"_index":871,"title":{},"body":{"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["pantry.logourl",{"_index":872,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pantry.name",{"_index":873,"title":{},"body":{"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["pantry.orderlimit",{"_index":874,"title":{},"body":{"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["pantry.primarycolor",{"_index":875,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["pantry.secondarycolor",{"_index":876,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["pantryconv",{"_index":695,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pantryconv(snapshot",{"_index":753,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pantryid",{"_index":682,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["pantryname",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["pantrystatisticspage",{"_index":266,"title":{"components/PantryStatisticsPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["pantrystatisticspagemodule",{"_index":1277,"title":{"modules/PantryStatisticsPageModule.html":{}},"body":{"modules/PantryStatisticsPageModule.html":{},"index.html":{},"modules.html":{}}}],["pantrystatisticspageroutingmodule",{"_index":1281,"title":{"modules/PantryStatisticsPageRoutingModule.html":{}},"body":{"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["pantry}).then((res",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["param",{"_index":131,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["parameter",{"_index":721,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["params",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["parse",{"_index":1373,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["particular",{"_index":730,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["password",{"_index":393,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/LoginPage.html":{}}}],["password'},{'name",{"_index":259,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["password).then(async",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["password.module').then",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["password.module.ts",{"_index":914,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{}}}],["password.page",{"_index":919,"title":{},"body":{"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{}}}],["password.page.html",{"_index":894,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.scss",{"_index":893,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts",{"_index":892,"title":{},"body":{"components/ForgotPasswordPage.html":{},"coverage.html":{}}}],["password.page.ts:12",{"_index":896,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:8",{"_index":895,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password/forgot",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"coverage.html":{}}}],["path",{"_index":382,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["pathmatch",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patry",{"_index":927,"title":{},"body":{"components/HomePage.html":{}}}],["percent",{"_index":1431,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period",{"_index":1463,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period1",{"_index":1442,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period1.length",{"_index":1445,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period2",{"_index":1443,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["period2.length",{"_index":1444,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["permissions",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["perms",{"_index":708,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["picked",{"_index":1348,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["picker",{"_index":1324,"title":{},"body":{"modules/ProfilePageModule.html":{},"dependencies.html":{}}}],["please",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pointer",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["position",{"_index":936,"title":{},"body":{"components/HomePage.html":{}}}],["positive",{"_index":1460,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["prediction",{"_index":1428,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["preloadallmodules",{"_index":377,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["premission",{"_index":744,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["presentalert",{"_index":282,"title":{},"body":{"injectables/AlertService.html":{}}}],["presentalert(header",{"_index":285,"title":{},"body":{"injectables/AlertService.html":{}}}],["presents",{"_index":287,"title":{},"body":{"injectables/AlertService.html":{}}}],["pressed",{"_index":237,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["presses",{"_index":1194,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["previous",{"_index":1433,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["previousdemand",{"_index":1450,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["prevyeardiff",{"_index":1434,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["prevyearitemdiff(itemname",{"_index":1447,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["primary",{"_index":290,"title":{},"body":{"injectables/AlertService.html":{},"components/EditDetailsDialog.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["primarycolor",{"_index":584,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"components/ProfilePage.html":{}}}],["private",{"_index":111,"title":{},"body":{"components/AddDialog.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["production",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{}}}],["profile'},{'name",{"_index":270,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["profile.page",{"_index":1321,"title":{},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{}}}],["profile.page.html",{"_index":548,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["profile.page.scss",{"_index":549,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["profilepage",{"_index":269,"title":{"components/ProfilePage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["profilepagemodule",{"_index":1315,"title":{"modules/ProfilePageModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"index.html":{},"modules.html":{}}}],["profilepageroutingmodule",{"_index":1319,"title":{"modules/ProfilePageRoutingModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["project",{"_index":1625,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":427,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["promise((resolve",{"_index":435,"title":{},"body":{"guards/AuthGuard.html":{}}}],["promise(async",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["promote",{"_index":1509,"title":{},"body":{"components/UserManagementPage.html":{}}}],["promoted",{"_index":758,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["promoteuser",{"_index":696,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["promoteuser(uid",{"_index":755,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["proper",{"_index":1192,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["properties",{"_index":21,"title":{"properties.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"properties.html":{}}}],["provide",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":295,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["providers",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":110,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["pubrouter",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["pull",{"_index":839,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["pulls",{"_index":1045,"title":{},"body":{"components/LoginPage.html":{}}}],["quantity",{"_index":91,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["quantityinput",{"_index":25,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["query",{"_index":1404,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["querysnapshot",{"_index":779,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["range",{"_index":1410,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["recent",{"_index":1474,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["recieve",{"_index":899,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["records",{"_index":94,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["red",{"_index":553,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["redirectto",{"_index":388,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regression",{"_index":1453,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["reject",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":145,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["removeadmin",{"_index":1504,"title":{},"body":{"components/UserManagementPage.html":{}}}],["removeadmin(user",{"_index":1513,"title":{},"body":{"components/UserManagementPage.html":{}}}],["removed",{"_index":150,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["removeitem",{"_index":597,"title":{},"body":{"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["removeitem(item",{"_index":146,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["removeitem(itemtoremove",{"_index":759,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["removeitem(order",{"_index":662,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["removelimit",{"_index":598,"title":{},"body":{"components/EditDialog.html":{}}}],["removelimit(item",{"_index":222,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["removes",{"_index":144,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["representaion",{"_index":632,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["representation",{"_index":720,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["res.data",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["reset",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"index.html":{}}}],["reshapes",{"_index":1391,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["resolve",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(true",{"_index":438,"title":{},"body":{"guards/AuthGuard.html":{}}}],["resolve(user",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsive",{"_index":1207,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["restorefocus",{"_index":176,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["result",{"_index":711,"title":{},"body":{"injectables/FirebaseService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["result.data.users",{"_index":880,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["results",{"_index":276,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retireves",{"_index":728,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["retreives",{"_index":1511,"title":{},"body":{"components/UserManagementPage.html":{}}}],["retrieve",{"_index":569,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["retrieves",{"_index":651,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["retrives",{"_index":731,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["return",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/ViewOrderDialog.html":{}}}],["returns",{"_index":48,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["retval",{"_index":1341,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.concat(order.items",{"_index":1353,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.length",{"_index":1383,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.push",{"_index":1398,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.push([order",{"_index":1384,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.push(order",{"_index":1364,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval.reverse",{"_index":1390,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval[i].push(order",{"_index":1389,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval[i][0].timestamp.getfullyear",{"_index":1388,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["retval[i][0].timestamp.getmonth",{"_index":1386,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["revoke",{"_index":1536,"title":{},"body":{"components/UserManagementPage.html":{}}}],["revokeadmin",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["revokeadmin(params).catch((err",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["revokeadmin(params).then",{"_index":890,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["revokeadminaccess",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["revokeadminaccess(uid",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["rgba(0,255,0,0.3",{"_index":1237,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["rgba(255,0,0,0.3",{"_index":1263,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["right",{"_index":939,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["role",{"_index":167,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["root",{"_index":296,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"injectables/LoadingService.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["root'},{'name",{"_index":252,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["route",{"_index":425,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginPage.html":{}}}],["routereusestrategy",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":378,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":920,"title":{},"body":{"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":423,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":379,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"interfaces/Pantry.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{}}}],["routing.module.ts",{"_index":376,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/UserManagementPageRoutingModule.html":{}}}],["row",{"_index":1096,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["row:first",{"_index":1308,"title":{},"body":{"components/ProfilePage.html":{}}}],["row:last",{"_index":1314,"title":{},"body":{"components/ProfilePage.html":{}}}],["rxjs",{"_index":429,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{},"dependencies.html":{}}}],["save",{"_index":594,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{}}}],["saved",{"_index":226,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["savedata",{"_index":519,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/ProfilePage.html":{}}}],["savedata(item",{"_index":229,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["saveorder",{"_index":622,"title":{},"body":{"components/EditOrderDialog.html":{}}}],["saveorder(data",{"_index":634,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["saves",{"_index":525,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["schemas",{"_index":1009,"title":{},"body":{"modules/InventoryManagementPageModule.html":{},"modules/OrderManagementPageModule.html":{}}}],["screen",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoadingService.html":{}}}],["search",{"_index":1411,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["secondary",{"_index":518,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["secondarycolor",{"_index":586,"title":{},"body":{"components/EditDetailsDialog.html":{},"injectables/FirebaseService.html":{},"components/ProfilePage.html":{}}}],["secondaycolor",{"_index":1118,"title":{},"body":{"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{}}}],["select",{"_index":1051,"title":{},"body":{"components/LoginPage.html":{}}}],["selectchange",{"_index":1171,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["selectedfooditem",{"_index":1166,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["selection",{"_index":1046,"title":{},"body":{"components/LoginPage.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["self",{"_index":907,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["send",{"_index":901,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["separates",{"_index":1179,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["service",{"_index":1508,"title":{},"body":{"components/UserManagementPage.html":{}}}],["services/alert.service",{"_index":547,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["services/auth.service",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{}}}],["services/firebase.service",{"_index":78,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["services/forecast.service",{"_index":1217,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["services/guards/auth.guard",{"_index":381,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["services/loading.service",{"_index":81,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["sessionstorage.getitem('pantryid",{"_index":792,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["sessionstorage.getitem('uid",{"_index":790,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["sessionstorage.setitem('pantryid",{"_index":1080,"title":{},"body":{"components/LoginPage.html":{}}}],["sessionstorage.setitem('uid",{"_index":1079,"title":{},"body":{"components/LoginPage.html":{}}}],["set",{"_index":928,"title":{},"body":{"components/HomePage.html":{}}}],["setdata(datapantry",{"_index":1332,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["setdoc",{"_index":781,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["setdoc(docref",{"_index":856,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["setpantryselection",{"_index":1036,"title":{},"body":{"components/LoginPage.html":{}}}],["setpantryselection(event",{"_index":1047,"title":{},"body":{"components/LoginPage.html":{}}}],["sets",{"_index":1049,"title":{},"body":{"components/LoginPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["showloader",{"_index":1020,"title":{},"body":{"injectables/LoadingService.html":{}}}],["showpage",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["shows",{"_index":1029,"title":{},"body":{"injectables/LoadingService.html":{}}}],["sign",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["signed",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(email",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinbutton",{"_index":1037,"title":{},"body":{"components/LoginPage.html":{}}}],["signinwithemailandpassword",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemailandpassword(auth",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["signout(auth",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["signs",{"_index":1042,"title":{},"body":{"components/LoginPage.html":{}}}],["signup",{"_index":1105,"title":{},"body":{"components/LoginPage.html":{}}}],["size",{"_index":945,"title":{},"body":{"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["snap",{"_index":719,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snap.data",{"_index":821,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot",{"_index":717,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.data",{"_index":807,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.docs",{"_index":828,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.exists",{"_index":850,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.foreach((doc",{"_index":817,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.foreach((item",{"_index":835,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["snapshot.foreach((pantry",{"_index":801,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["solid",{"_index":1273,"title":{},"body":{"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{}}}],["something",{"_index":188,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["sort",{"_index":106,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["sorted",{"_index":998,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{}}}],["sortorderlistbymonth(orderlist",{"_index":1392,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["sortordersbydate(orders",{"_index":1357,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["sorts",{"_index":1354,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["specific",{"_index":706,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["spinner",{"_index":1026,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/.../auth.service.ts",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firebase.service.ts",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":375,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/forgot",{"_index":891,"title":{},"body":{"components/ForgotPasswordPage.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/ForgotPasswordPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/home/home",{"_index":962,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/home/home.module.ts",{"_index":960,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/home/home.page.ts",{"_index":921,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/home/home.page.ts:11",{"_index":929,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:12",{"_index":924,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/home/home.page.ts:20",{"_index":925,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/inventory",{"_index":9,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"modules/InventoryManagementPageModule.html":{},"modules/InventoryManagementPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/login/login",{"_index":1119,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/login/login.module.ts",{"_index":1115,"title":{},"body":{"modules/LoginPageModule.html":{},"interfaces/Pantry.html":{},"coverage.html":{}}}],["src/app/login/login.page.ts",{"_index":1033,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/login/login.page.ts:14",{"_index":1057,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:15",{"_index":1059,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:16",{"_index":1058,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:17",{"_index":1040,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:28",{"_index":1044,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:40",{"_index":1041,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:59",{"_index":1048,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:67",{"_index":1052,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:93",{"_index":1055,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:97",{"_index":1056,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/order",{"_index":618,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"modules/OrderManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["src/app/pantry",{"_index":1150,"title":{},"body":{"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"coverage.html":{}}}],["src/app/profile/profile",{"_index":1325,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["src/app/profile/profile.module.ts",{"_index":1320,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/profile/profile.page.ts",{"_index":514,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{},"coverage.html":{}}}],["src/app/profile/profile.page.ts:116",{"_index":527,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:16",{"_index":1295,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:17",{"_index":1292,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:20",{"_index":1294,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:21",{"_index":1288,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:24",{"_index":1293,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:31",{"_index":1289,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:45",{"_index":1290,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:55",{"_index":1291,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile.page.ts:66",{"_index":539,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:67",{"_index":535,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:68",{"_index":530,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:69",{"_index":537,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:70",{"_index":541,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:71",{"_index":543,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:72",{"_index":522,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:74",{"_index":533,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:79",{"_index":523,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/profile/profile.page.ts:86",{"_index":524,"title":{},"body":{"components/EditDetailsDialog.html":{}}}],["src/app/services/alert.service.ts",{"_index":281,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/services/alert.service.ts:18",{"_index":286,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:7",{"_index":284,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/auth.service.ts",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth.service.ts:34",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:43",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:51",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:74",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:78",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:82",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:93",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/firebase.service.ts",{"_index":681,"title":{},"body":{"injectables/FirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/firebase.service.ts:108",{"_index":722,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:138",{"_index":716,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:147",{"_index":732,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:180",{"_index":727,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:205",{"_index":751,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:218",{"_index":702,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:247",{"_index":763,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:25",{"_index":772,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:26",{"_index":700,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:268",{"_index":760,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:285",{"_index":767,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:304",{"_index":771,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:329",{"_index":748,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:351",{"_index":743,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:368",{"_index":756,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:386",{"_index":705,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:43",{"_index":733,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:68",{"_index":739,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:76",{"_index":737,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/firebase.service.ts:99",{"_index":754,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["src/app/services/forecast.service.ts",{"_index":1326,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["src/app/services/guards/auth.guard.ts",{"_index":418,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/services/guards/auth.guard.ts:11",{"_index":419,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/guards/auth.guard.ts:22",{"_index":424,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/loading.service.ts",{"_index":1018,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading.service.ts:14",{"_index":1028,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:22",{"_index":1024,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:7",{"_index":1022,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/user",{"_index":1503,"title":{},"body":{"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":1584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1268,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["start.gettime",{"_index":1423,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["start:date",{"_index":1413,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["starting",{"_index":1328,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["state",{"_index":422,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":108,"title":{},"body":{"components/AddDialog.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["stating",{"_index":1337,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["statistics",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["statistics'},{'name",{"_index":268,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["statistics.module').then",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["statistics.module.ts",{"_index":1282,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{}}}],["statistics.page",{"_index":1283,"title":{},"body":{"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{}}}],["statistics.page.html",{"_index":1153,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["statistics.page.scss",{"_index":1152,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["statistics.page.ts",{"_index":1151,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"coverage.html":{}}}],["statistics.page.ts:127",{"_index":1205,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:128",{"_index":1204,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:129",{"_index":1208,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:132",{"_index":1176,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:143",{"_index":1186,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:24",{"_index":1198,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:25",{"_index":1197,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:26",{"_index":1199,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:27",{"_index":1213,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:28",{"_index":1210,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:29",{"_index":1211,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:30",{"_index":1212,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:31",{"_index":1201,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:32",{"_index":1202,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:33",{"_index":1203,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:38",{"_index":1178,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:48",{"_index":1185,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:55",{"_index":1183,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:62",{"_index":1188,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:69",{"_index":1182,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:79",{"_index":1189,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics.page.ts:98",{"_index":1193,"title":{},"body":{"components/PantryStatisticsPage.html":{}}}],["statistics/pantry",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PantryStatisticsPage.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/PantryStatisticsPageRoutingModule.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"coverage.html":{}}}],["status",{"_index":629,"title":{},"body":{"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["storagebucket",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":56,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["strong",{"_index":943,"title":{},"body":{"components/HomePage.html":{}}}],["style",{"_index":1306,"title":{},"body":{"components/ProfilePage.html":{}}}],["styles",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["styleurls",{"_index":85,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["sublist",{"_index":1377,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["submit",{"_index":1195,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["sum",{"_index":1406,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["support",{"_index":1621,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":162,"title":{},"body":{"components/AddDialog.html":{},"guards/AuthGuard.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["svg",{"_index":1622,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":1605,"title":{},"body":{"dependencies.html":{}}}],["t1",{"_index":1436,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["t2",{"_index":1435,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["t3",{"_index":1438,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["t4",{"_index":1440,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["table",{"_index":46,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{}}}],["tables",{"_index":128,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1587,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":789,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["temp2",{"_index":791,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["tension",{"_index":1234,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["text",{"_index":165,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ViewOrderDialog.html":{}}}],["th.mat",{"_index":997,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{}}}],["theme",{"_index":1296,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.actions.focus",{"_index":178,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["this.address",{"_index":581,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.alertcontroller.create",{"_index":159,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.alertservice.presentalert('error",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.alertservice.presentalert('login",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.getcurrentuser",{"_index":1076,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authservice.signout",{"_index":1070,"title":{},"body":{"components/LoginPage.html":{}}}],["this.calclinearregression(buckets",{"_index":1477,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.calcprevdate(now",{"_index":1466,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.calcprevdate(t2",{"_index":1437,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.cancelitem",{"_index":211,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.cancellimit",{"_index":219,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.convertordersbymonth",{"_index":1258,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.convolve1d(demandhist",{"_index":1501,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.data.address",{"_index":529,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.desc",{"_index":534,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.id",{"_index":579,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.logourl",{"_index":536,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.name",{"_index":205,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/ProfilePage.html":{}}}],["this.data.orderlimit",{"_index":538,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.primarycolor",{"_index":540,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.data.secondarycolor",{"_index":542,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.description",{"_index":580,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.dialog.open(adddialog",{"_index":180,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.dialog.open(editdetailsdialog",{"_index":571,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.dialog.open(editdialog",{"_index":175,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.dialog.open(editorderdialog",{"_index":667,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.dialog.open(vieworderdialog",{"_index":669,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.email",{"_index":1071,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebase.getorders",{"_index":653,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.firebase.getpantry",{"_index":564,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.firebaseservice.additem(item).then",{"_index":198,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.firebaseservice.demoteuser(user.uid).then(async",{"_index":1530,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.getinventory",{"_index":116,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.firebaseservice.getorders",{"_index":1252,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.firebaseservice.getpantries",{"_index":1061,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebaseservice.getpantry",{"_index":930,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.firebaseservice.getpantryid",{"_index":1522,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.getperms(user",{"_index":1528,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.getusers",{"_index":1523,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.pantryid",{"_index":1075,"title":{},"body":{"components/LoginPage.html":{}}}],["this.firebaseservice.promoteuser(user.uid).then(async",{"_index":1525,"title":{},"body":{"components/UserManagementPage.html":{}}}],["this.firebaseservice.removeitem(item",{"_index":149,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.firebaseservice.updateinventoryitem(item",{"_index":233,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.firebaseservice.updateorderstatus(data",{"_index":676,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.firebaseservice.updatepantry(pantry",{"_index":590,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.firebaseservice.userid",{"_index":1077,"title":{},"body":{"components/LoginPage.html":{}}}],["this.forcedisable",{"_index":185,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.forecaster.getnumorderbymonth",{"_index":1256,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.forecaster.setdata(pantry",{"_index":1253,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.getenumkey(this.data.status",{"_index":641,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.getnumitemoccurrences(order.items",{"_index":1407,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getnumitemoccurrences(this.getitemsfromorders(period1",{"_index":1449,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getnumitemoccurrences(this.getitemsfromorders(period2",{"_index":1451,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getorderhistory",{"_index":1380,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getorderitems(snap",{"_index":840,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.getordersindaterange(history",{"_index":1416,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.getperms(toadd",{"_index":884,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.icon",{"_index":583,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.inventory",{"_index":1251,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.itembymonth",{"_index":1238,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonth.foreach(element",{"_index":1218,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonthmonths",{"_index":1229,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonthmonths.push(element.month",{"_index":1219,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonthnums",{"_index":1231,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.itembymonthnums.push(element.items",{"_index":1220,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.length",{"_index":120,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.limitinput",{"_index":191,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.linechartdataitem",{"_index":1227,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.linechartdataorders",{"_index":1259,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.loadingctrl.create",{"_index":1030,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingctrl.dismiss",{"_index":1032,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingservice.dismissloader",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["this.loadingservice.showloader",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["this.logourl",{"_index":931,"title":{},"body":{"components/HomePage.html":{}}}],["this.maxorder",{"_index":589,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.name",{"_index":578,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.nameinput",{"_index":193,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.nameinput.tolowercase",{"_index":192,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.orderconv(doc",{"_index":830,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.orderhistorybymonth",{"_index":1396,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.orders",{"_index":1333,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.orders.foreach(order",{"_index":1342,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.orders?.length",{"_index":1344,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.ordersbymonth",{"_index":1255,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.ordersbymonth.foreach(element",{"_index":1224,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.ordersbymonthmonths",{"_index":1260,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.ordersbymonthmonths.push(element.month",{"_index":1225,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.ordersbymonthnums.push(element.orders",{"_index":1226,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.paginator",{"_index":123,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.pantries",{"_index":1060,"title":{},"body":{"components/LoginPage.html":{}}}],["this.pantry",{"_index":563,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.pantry.length",{"_index":1074,"title":{},"body":{"components/LoginPage.html":{}}}],["this.pantry.logourl",{"_index":932,"title":{},"body":{"components/HomePage.html":{}}}],["this.pantry.primarycolor",{"_index":575,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.pantry.secondarycolor",{"_index":577,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.pantryconv(snapshot",{"_index":806,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.pantryid",{"_index":795,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["this.password",{"_index":1072,"title":{},"body":{"components/LoginPage.html":{}}}],["this.primary",{"_index":585,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.pubrouter",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["this.quantityinput",{"_index":194,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.records",{"_index":117,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/UserManagementPage.html":{}}}],["this.records._updatechangesubscription",{"_index":153,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.data",{"_index":658,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.data.length",{"_index":121,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.data.splice(this.records.data.indexof(item",{"_index":151,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.records.data.splice(this.records.data.indexof(order",{"_index":663,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.filter",{"_index":140,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.paginator",{"_index":122,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.paginator.firstpage",{"_index":143,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.records.sort",{"_index":124,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.removeitem(item",{"_index":170,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.removeitem(order",{"_index":665,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.router.navigatebyurl(\"forgot",{"_index":1083,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigatebyurl(\"login",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigatebyurl(\"signup",{"_index":1084,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigatebyurl('/home",{"_index":1081,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigatebyurl('login",{"_index":437,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl(page",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.url",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["this.secondary",{"_index":587,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.selectedfooditem?this.selectedfooditem",{"_index":1233,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["this.signout",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sort",{"_index":125,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["this.sortorderlistbymonth(cut",{"_index":1418,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.sortordersbydate(history",{"_index":1381,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.sortordersbydate(orderlist",{"_index":1393,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.sortordersbydate(retval",{"_index":1365,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["this.updatecolors",{"_index":566,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["this.updatetablesource",{"_index":127,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.urlinput",{"_index":196,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["this.userid",{"_index":794,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["this.values.indexof(this.value",{"_index":674,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["throw",{"_index":797,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["timestamp",{"_index":648,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["timestamped",{"_index":1408,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["timestampeditems",{"_index":1200,"title":{"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{}},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["timestampedorders",{"_index":1209,"title":{"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{}},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"coverage.html":{}}}],["title",{"_index":1301,"title":{},"body":{"components/ProfilePage.html":{}}}],["toadd",{"_index":829,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toadd.perms",{"_index":883,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["todo",{"_index":432,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FirebaseService.html":{}}}],["toforgotpassword",{"_index":1038,"title":{},"body":{"components/LoginPage.html":{}}}],["token",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar",{"_index":1300,"title":{},"body":{"components/ProfilePage.html":{}}}],["top",{"_index":904,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["toreturn",{"_index":800,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toreturn.push(this.fooditemconv(doc",{"_index":819,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toreturn.push(this.fooditemconv(item",{"_index":836,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toreturn.push(this.pantryconv(pantry",{"_index":802,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["toreturn.push(toadd",{"_index":831,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["tosignup",{"_index":1039,"title":{},"body":{"components/LoginPage.html":{}}}],["total",{"_index":1334,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["transform",{"_index":941,"title":{},"body":{"components/HomePage.html":{}}}],["translatey",{"_index":942,"title":{},"body":{"components/HomePage.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["trend",{"_index":1455,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["true",{"_index":186,"title":{},"body":{"components/AddDialog.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["tslib",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/AddDialog.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"injectables/LoadingService.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"interfaces/Pantry.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders.html":{},"interfaces/TimestampedOrders-1.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1346,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["ui",{"_index":45,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{},"components/ProfilePage.html":{}}}],["uid",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{}}}],["undefined",{"_index":223,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{}}}],["unknown",{"_index":710,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["unsub",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["up",{"_index":1349,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["update",{"_index":227,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["update/change",{"_index":787,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatecolors",{"_index":520,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["updatedoc",{"_index":776,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatedoc(docref",{"_index":862,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatefilter",{"_index":965,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{}}}],["updatefilter(event",{"_index":135,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["updateinventoryitem",{"_index":697,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updateinventoryitem(itemtoupdate",{"_index":762,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updateitemchart",{"_index":1172,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["updateitemgraph",{"_index":1173,"title":{},"body":{"components/PantryStatisticsPage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{}}}],["updateorderstatus",{"_index":698,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updateorderstatus(order",{"_index":765,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatepantry",{"_index":699,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updatepantry(pantry",{"_index":770,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["updates",{"_index":112,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["updatetablesource",{"_index":114,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["url",{"_index":241,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{}}}],["urlinput",{"_index":26,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["urltree",{"_index":428,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":612,"title":{},"body":{"components/EditDialog.html":{},"components/HomePage.html":{}}}],["useclass",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":291,"title":{},"body":{"injectables/AlertService.html":{},"injectables/FirebaseService.html":{}}}],["user",{"_index":157,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{}}}],["user's",{"_index":707,"title":{},"body":{"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["user(user.uid",{"_index":881,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["user.email",{"_index":882,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["user.perms",{"_index":1527,"title":{},"body":{"components/UserManagementPage.html":{}}}],["user.uid",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FirebaseService.html":{},"components/LoginPage.html":{}}}],["userarr",{"_index":879,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["userarr.push(toadd",{"_index":885,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["userarr.reverse",{"_index":886,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["usercred",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercred.user.getidtoken",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":683,"title":{},"body":{"injectables/FirebaseService.html":{}}}],["userisadmin",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermanagementpage",{"_index":271,"title":{"components/UserManagementPage.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["usermanagementpagemodule",{"_index":1537,"title":{"modules/UserManagementPageModule.html":{}},"body":{"modules/UserManagementPageModule.html":{},"index.html":{},"modules.html":{}}}],["usermanagementpageroutingmodule",{"_index":1541,"title":{"modules/UserManagementPageRoutingModule.html":{}},"body":{"modules/UserManagementPageModule.html":{},"modules/UserManagementPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["users",{"_index":749,"title":{},"body":{"injectables/FirebaseService.html":{},"components/UserManagementPage.html":{}}}],["uses",{"_index":1484,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["value",{"_index":52,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":620,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["var",{"_index":247,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"injectables/FirebaseService.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["variable",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1630,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1297,"title":{},"body":{"components/ProfilePage.html":{},"properties.html":{}}}],["view",{"_index":273,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild",{"_index":62,"title":{},"body":{"components/AddDialog.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"interfaces/TimestampedItems.html":{},"interfaces/TimestampedOrders.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild('icontent",{"_index":556,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["viewchild(matmenutrigger",{"_index":107,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild(matpaginator",{"_index":103,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild(matsort",{"_index":105,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["viewchild(mattable",{"_index":649,"title":{},"body":{"components/EditOrderDialog.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["vieworderdialog",{"_index":272,"title":{"components/ViewOrderDialog.html":{}},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/HomePage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"modules/OrderManagementPageModule.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{},"components/ViewOrderDialog.html":{},"coverage.html":{},"index.html":{}}}],["void",{"_index":50,"title":{},"body":{"components/AddDialog.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EditDetailsDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/ForgotPasswordPage.html":{},"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/ViewOrderDialog.html":{}}}],["want",{"_index":163,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/EditOrderDialog.html":{},"components/InventoryManagementPage.html":{},"components/OrderManagementPage.html":{},"components/ViewOrderDialog.html":{}}}],["way",{"_index":1063,"title":{},"body":{"components/LoginPage.html":{}}}],["webdir",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weekly",{"_index":591,"title":{},"body":{"components/EditDetailsDialog.html":{},"components/ProfilePage.html":{}}}],["weight",{"_index":1310,"title":{},"body":{"components/ProfilePage.html":{}}}],["white",{"_index":1312,"title":{},"body":{"components/ProfilePage.html":{}}}],["width",{"_index":990,"title":{},"body":{"components/InventoryManagementPage.html":{},"components/LoginPage.html":{},"components/OrderManagementPage.html":{},"components/PantryStatisticsPage.html":{},"components/ProfilePage.html":{},"components/UserManagementPage.html":{}}}],["within",{"_index":1409,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["work",{"_index":1065,"title":{},"body":{"components/LoginPage.html":{}}}],["wrap",{"_index":1095,"title":{},"body":{"components/LoginPage.html":{},"components/PantryStatisticsPage.html":{}}}],["write",{"_index":187,"title":{},"body":{"components/AddDialog.html":{},"components/EditDialog.html":{},"components/InventoryManagementPage.html":{}}}],["www",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["year",{"_index":1402,"title":{},"body":{"interfaces/TimestampedItems-1.html":{},"interfaces/TimestampedOrders-1.html":{}}}],["zone.js",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/ForgotPasswordPageModule.html":{},"modules/HomePageModule.html":{},"modules/InventoryManagementPageModule.html":{},"modules/LoginPageModule.html":{},"modules/OrderManagementPageModule.html":{},"modules/PantryStatisticsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/UserManagementPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddDialog.html":{"url":"components/AddDialog.html","title":"component - AddDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventory-management/inventory-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                add-dialog\n            \n\n\n\n\n            \n                templateUrl\n                add-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forceDisable\n                            \n                            \n                                limitInput\n                            \n                            \n                                nameInput\n                            \n                            \n                                quantityInput\n                            \n                            \n                                urlInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService, loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventory-management/inventory-management.page.ts:155\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        AddItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:167\n                \n            \n\n\n            \n                \n                    Adds item to the UI table and the DB\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        forceDisable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limitInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantityInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:152\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        urlInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:154\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog, } from '@angular/material/dialog';\nimport { AlertController, } from '@ionic/angular';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { LoadingService } from '../services/loading.service';\n\n\n\n\n@Component({\n  selector: 'inventory-management',\n  templateUrl: './inventory-management.page.html',\n  styleUrls: ['./inventory-management.page.scss'],\n})\nexport class InventoryManagementPage implements AfterViewInit{\n  \n\n  displayedColumns: string[] = ['name', 'quantity', 'limit', 'actions'];\n  records: MatTableDataSource\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n\n  static addDialogRef: any\n\n  constructor(\n    public dialog: MatDialog,\n    private alertController: AlertController,\n    private firebaseService: FirebaseService,\n    ) { }\n\n  async ngOnInit() {    \n    \n  }\n\n  /**\n   * Updates the data source of the table\n   */\n  async updateTableSource() {\n    let data = await this.firebaseService.getInventory()\n    this.records = new MatTableDataSource(data)\n    this.length = this.records.data.length;\n    this.records.paginator = this.paginator;\n    this.records.sort = this.sort;\n  }\n  async ngAfterViewInit() {\n    await this.updateTableSource()\n  }\n\n  /**\n   * Updates the tables based on the filter\n   * @param event event emited by the filter input\n   */\n  updateFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n  /**\n   * Removes an item from the table\n   * @param item FoodItem to remove\n   */\n  async removeItem(item: FoodItem) {\n    //find the index from id\n    await this.firebaseService.removeItem(item)\n    let removed = this.records.data.splice(this.records.data.indexOf(item), 1)\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n \n  /**\n   * Opens an alert to confirm if a user wants to remove an item\n   * @param item FoodItem to remove\n   */\n  async openAlert(item: FoodItem){\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {}\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(item)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param item FoodItem to edit\n   */\n   openEditDialog(item: FoodItem){\n    const dialogRef = this.dialog.open(EditDialog, {restoreFocus: false, data: item});\n    dialogRef.afterClosed().subscribe( () => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * opens the add item dialog\n   */\n   async openAddDialog(){\n    const dialogRef = this.dialog.open(AddDialog, {restoreFocus: false});\n    InventoryManagementPage.addDialogRef = dialogRef\n    dialogRef.afterClosed().subscribe( () => {\n      this.updateTableSource()\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    })\n  }\n\n  /**\n   * Closes the add dialog\n   */\n  static async closeAddDialog() {\n    await InventoryManagementPage.addDialogRef.close()\n  }\n\n}\n\n@Component({\n  selector: 'add-dialog',\n  templateUrl: 'add-dialog.html'\n})\nexport class AddDialog implements OnInit {\n  nameInput: string\n  quantityInput: number\n  limitInput: number\n  urlInput: string\n  forceDisable = false\n  constructor(\n    private firebaseService: FirebaseService,\n    private loadingService: LoadingService\n    ){}\n  ngOnInit(): void {\n      \n  }\n\n  /**\n   * Adds item to the UI table and the DB\n   */\n  async AddItem(){\n    this.forceDisable = true\n    //write to db or something idk\n    if(!this.limitInput) {\n      this.limitInput = 0\n    }\n    let item: FoodItem = {\n      id: this.nameInput.toLowerCase(),\n      name: this.nameInput,\n      quantity: this.quantityInput,\n      limit: this.limitInput,\n      imageUrl: this.urlInput\n    }\n    console.log(item)\n    await this.firebaseService.addItem(item).then(() => {\n      InventoryManagementPage.closeAddDialog()\n      this.forceDisable = false\n    }).catch((err) => {\n      this.forceDisable = false\n    })\n    this.forceDisable = false\n  }\n}\n\n@Component({\n  selector: 'edit-dialog',\n  templateUrl: 'edit-dialog.html'\n})\nexport class EditDialog implements OnInit{\n  constructor(@Inject(MAT_DIALOG_DATA) public data: FoodItem,\n  private firebaseService: FirebaseService){}\n  private cancelItem = 0;\n  private cancelLimit = 0;\n  //private name = this.data.name;\n  nameInput: string = this.data.name\n  ngOnInit() {\n    console.log(this.data)\n  }\n\n  /**\n   * increments item quantity\n   * @param item FoodItem to increment\n   */\n  addItem(item: FoodItem){\n    item.quantity = item.quantity + 1;\n    this.cancelItem = this.cancelItem - 1;\n  }\n\n  /**\n   * decrements item quantity\n   * @param item FoodItem to decrement\n   */\n  removeItem(item: FoodItem){\n    item.quantity = item.quantity - 1;\n    this.cancelItem = this.cancelItem + 1;\n  }\n\n  /**\n   * increments and items's limit\n   * @param item FoodItem that will have limit modifed\n   */\n  addLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit + 1\n      this.cancelLimit = this.cancelLimit - 1\n    } else {\n      item.limit = 1\n      this.cancelLimit = this.cancelLimit - 1\n    }\n  }\n\n  /**\n   * decrements and item's limit\n   * @param item FoodItem that will have limit modified\n   */\n  removeLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit - 1;\n      this.cancelLimit = this.cancelLimit + 1\n    } else if(item.limit == 1) {\n      item.limit = undefined;\n      this.cancelLimit = this.cancelLimit + 1\n    }\n  }\n\n  /**\n   * Updates DB info for an item. Called when item changes are saved\n   * @param item FoodItem to update in database\n   */\n  async saveData(item: FoodItem){\n    //write to db\n    console.log(this.nameInput)\n    if(this.nameInput != \"\"){\n      item.name = this.nameInput\n    }\n    await this.firebaseService.updateInventoryItem(item)\n  }\n\n  /**\n   * Discards changes made to food item. Called when Cancel is pressed\n   * @param item FoodItem to discard changes for\n   */\n  cancelData(item: FoodItem){\n    item.quantity = item.quantity + this.cancelItem;\n    if(item.limit){\n      item.limit = item.limit + this.cancelLimit\n      if(item.limit == 0){\n        item.limit = undefined\n      }\n    }\n  }\n}\n    \n\n    \n        Add Item\n\n\n    \n        \n            Name\n            \n        \n        \n            Image URL\n            \n        \n        \n            Quantity\n            \n        \n        \n            Limit\n            \n        \n    \n        \n\n\n\n    \n        \n            Cancel\n        \n        \n            = 0 && (limitInput >= 0 || !limitInput) && urlInput) || forceDisable\" \n            (click)=\"AddItem()\">Add Item\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add Item                        Name                                        Image URL                                        Quantity                                        Limit                                                        Cancel                            = 0 && (limitInput >= 0 || !limitInput) && urlInput) || forceDisable\"             (click)=\"AddItem()\">Add Item            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/alert.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                presentAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/alert.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentAlert(header: string, message: string, buttons: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:18\n                \n            \n\n\n            \n                \n                    Presents a generic alert that can be customized.\nThis is primary used for error handling.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Header for alert\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message for alert\n\n                                    \n                                \n                                \n                                    buttons\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Buttons for alert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private alertController: AlertController) { }\n\n  /**\n   * Presents a generic alert that can be customized.\n   * This is primary used for error handling.\n   * @param header Header for alert\n   * @param message Message for alert\n   * @param buttons Buttons for alert\n   */\n  async presentAlert(header: string, message: string, buttons: any[]) {\n    const alert = await this.alertController.create({\n      header: header,\n      message: message,\n      buttons: buttons\n    })\n\n    await alert.present()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                currrentPage\n                            \n                            \n                                pubRouter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPage\n                            \n                            \n                                navigateToPage\n                            \n                            \n                                showPage\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPage\n                        \n                    \n                \n            \n            \n                \ngetPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToPage\n                        \n                    \n                \n            \n            \n                \nnavigateToPage(page: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPage\n                        \n                    \n                \n            \n            \n                \nshowPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currrentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pubRouter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { LoadingService } from './services/loading.service';\nimport { LoadingController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  currrentPage: string\n  pubRouter: Router\n  authService: AuthService\n\n  constructor(private router: Router) {\n    this.pubRouter = router\n  }\n\n  navigateToPage(page: string){\n    this.router.navigateByUrl(page)\n  }\n\n  \n  signOut() {\n    this.router.navigateByUrl(\"login\")\n  }\n\n  getPage(){\n    console.log(this.router.url)\n    return this.router.url\n  }\n\n  showPage(){\n    let page = this.router.url\n    console.log(page)\n    console.log(page !== '/login')\n    return (page !== '/login')\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n          Navigate To a Screen\n        \n      \n      \n        \n          \n            Home\n          \n          \n            Inventory Management\n          \n          \n            Order Management\n          \n          \n            User Management\n          \n          \n            Pantry Statistics\n          \n          \n            Profile and Instance Management\n          \n        \n      \n    \n    \n      \n        \n          \n            \n          \n          Food Pantry - Admin\n          Sign Out\n        \n      \n      \n     \n\n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                .menu-item {\n    cursor: pointer;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Navigate To a Screen                                                  Home                                Inventory Management                                Order Management                                User Management                                Pantry Statistics                                Profile and Instance Management                                                                                        Food Pantry - Admin          Sign Out                         '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, IonicModule.forRoot(), AppRoutingModule, BrowserAnimationsModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n  \n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './services/guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./home/home.module').then( m => m.HomePageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'forgot-password',\n    loadChildren: () => \"import('./forgot-password/forgot-password.module').then( m => m.ForgotPasswordPageModule)\"\n  },\n  {\n    path: 'inventory-management',\n    loadChildren: () => \"import('./inventory-management/inventory-management.module').then( m => m.InventoryManagementPageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'order-management',\n    loadChildren: () => \"import('./order-management/order-management.module').then( m => m.OrderManagementPageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'profile',\n    loadChildren: () => \"import('./profile/profile.module').then( m => m.ProfilePageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'pantry-statistics',\n    loadChildren: () => \"import('./pantry-statistics/pantry-statistics.module').then( m => m.PantryStatisticsPageModule)\",\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'user-management',\n    loadChildren: () => \"import('./user-management/user-management.module').then( m => m.UserManagementPageModule)\",\n    canActivate: [AuthGuard]\n  },\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guards/auth.guard.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { getAuth } from 'firebase/auth';\nimport 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router\n  ) {\n\n  }\n\n  /*\n    TODO: Make sure the logged in user is an admin!!!!!!!!!!!!!!\n  */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      return new Promise((resolve) => {\n        getAuth().onAuthStateChanged((user) => {\n          if (!user) {\n            this.router.navigateByUrl('login')\n          }\n          resolve(true);\n        });\n      });\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                    Async\n                                grantAdminAccess\n                            \n                            \n                                    Async\n                                revokeAdminAccess\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                    Static\n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        grantAdminAccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    grantAdminAccess(uid: string, pantry: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pantry\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        revokeAdminAccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    revokeAdminAccess(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(email: string, password: string, pantry: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pantry\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { \n  getAuth,\n  onAuthStateChanged,\n  signOut, \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword \n} from \"firebase/auth\"\n\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\nimport { LoadingService } from './loading.service';\nimport {authentication } from 'src/main';\nimport { Observable } from 'rxjs';\nimport { AlertService } from './alert.service';\n\nconst functions = getFunctions()\n\n//const auth = getAuth()\n\nconst auth = authentication\n\nonAuthStateChanged(auth, (user) => {\n  if (user) {\n    //user is signed in\n    const uid = user.uid\n  } else {\n    //No user signed in\n  }\n})\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private loadingService: LoadingService,\n    private alertService: AlertService\n  ) {\n\n   }\n\n   async getCurrentUser(): Promise {\n    return new Promise(async (resolve, reject) => {\n      const unsub = await auth.onAuthStateChanged(user => {\n        resolve(user)\n      }, reject)\n    })\n  }\n\n   async signIn(email: string, password: string, pantry: string) {\n    await this.loadingService.showLoader()\n    await signInWithEmailAndPassword(auth, email, password).then(async (userCred) => {\n      const isAdmin = httpsCallable(functions, 'isAdmin')\n      // let token = await userCred.user.getIdToken()\n      // let params = {\n      //   idToken: token\n      // }\n      await isAdmin({pantry: pantry}).then((res) => {\n        this.loadingService.dismissLoader()\n        //res.data will be true or false\n        let userIsAdmin = res.data\n        if(!userIsAdmin) {\n          this.signOut()\n          this.alertService.presentAlert('Login Failed', 'Please check your credentials and try again later.', ['Ok'])\n        }\n      })\n    }).catch((err) => {\n      this.alertService.presentAlert('Login Failed', 'Please check your credentials and try again later.', ['Ok'])\n      this.loadingService.dismissLoader()\n    })\n   }\n\n   signOut() {\n    signOut(auth)\n   }\n\n   static signOut() {\n    signOut(auth)\n   }\n\n   async grantAdminAccess(uid: string, pantry: string) {\n    const grantAdmin = httpsCallable(functions, 'makeAdmin')\n    let params = {\n      user: uid,\n      pantryName: pantry\n    }\n    await grantAdmin(params).catch((err) => {\n      this.alertService.presentAlert('Error', 'Could not modify permissions. Please try again later.', ['Ok'])\n    })\n   }\n\n   async revokeAdminAccess(uid: string) {\n    const revokeAdmin = httpsCallable(functions, 'revokeAdmin')\n    let params = {\n      user: uid\n    }\n    await revokeAdmin(params).catch((err) => {\n      this.alertService.presentAlert('Error', 'Could not modify permissions. Please try again later.', ['Ok'])\n    })\n   }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditDetailsDialog.html":{"url":"components/EditDetailsDialog.html","title":"component - EditDetailsDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditDetailsDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-details-dialog\n            \n\n\n\n\n            \n                templateUrl\n                edit-details-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                address\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                maxOrder\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                primary\n                            \n                            \n                                    Public\n                                secondary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveData\n                            \n                            \n                                updateColors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Pantry, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.page.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Pantry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveData\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:86\n                \n            \n\n\n            \n                \n                    Saves the pantry data that is changed in the edit dialog\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateColors\n                        \n                    \n                \n            \n            \n                \nupdateColors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:116\n                \n            \n\n\n            \n                \n                    Updates UI Colors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.address\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pantry\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.desc\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.logoUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        maxOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.data.orderLimit\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.name\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.primaryColor\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        secondary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.secondaryColor\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { FirebaseService } from '../services/firebase.service';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { IonContent } from '@ionic/angular';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  pantry: Pantry = new Pantry('id', 'name', 'desc', 'address', 'logo', 'red', 'black', 2, [], [], [])\n  @ViewChild (MatMenuTrigger) actions: MatMenuTrigger\n\n  @ViewChild('iContent', {static: true})\n  private iContentRef: ElementRef\n  private iConStyle: CSSStyleDeclaration\n  constructor(\n    private firebase: FirebaseService,\n    public dialog: MatDialog,\n    private alertService: AlertService\n  ) { }\n\n  /**\n   * Gets pantry data on page init\n   */\n  async ngOnInit() {\n    try {\n      this.pantry = await this.firebase.getPantry()\n      console.log(this.pantry)\n      this.updateColors()\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n  }\n\n  /**\n   * Opens the Pantry edit dialog\n   * @param data Pantry to Edit\n   */\n  openEditDetailsDialog(data: Pantry){\n    const dialogRef = this.dialog.open(EditDetailsDialog, {restoreFocus: false, data: data});\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n    });\n  }\n\n  /**\n   * Updates UI Colors\n   */\n  updateColors(){\n    document.body.style.setProperty('--ion-color-primary', this.pantry.primaryColor)\n    document.body.style.setProperty('--ion-color-primary-contrast', this.pantry.secondaryColor)\n  }\n\n}\n\n@Component({\n  selector: 'edit-details-dialog',\n  templateUrl: 'edit-details-dialog.html'\n}) export class EditDetailsDialog implements OnInit {\n  public name: string = this.data.name\n  public description: string = this.data.desc\n  public address: string = this.data.address\n  public icon: string = this.data.logoUrl\n  public primary: string = this.data.primaryColor\n  public secondary: string = this.data.secondaryColor\n  public maxOrder: number = this.data.orderLimit\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Pantry,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n  ){}\n\n  ngOnInit(): void {\n    // console.log(this.data)\n  }\n\n  /**\n   * Saves the pantry data that is changed in the edit dialog\n   */\n  async saveData(){\n    let pantry: Pantry = {\n      \"name\": this.name,\n      \"id\": this.data.id,\n      \"desc\": this.description,\n      \"address\": this.address,\n      \"logoUrl\": this.icon,\n      \"primaryColor\": this.primary,\n      \"secondaryColor\": this.secondary,\n      \"orderLimit\": this.maxOrder\n    }\n    this.data.name = this.name\n    this.data.desc = this.description\n    this.data.address = this.address\n    this.data.logoUrl = this.icon\n    this.data.primaryColor = this.primary\n    this.data.secondaryColor = this.secondary\n    this.data.orderLimit = this.maxOrder\n    try {\n      await this.firebaseService.updatePantry(pantry)\n      this.updateColors()\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n  /**\n   * Updates UI Colors\n   */\n  updateColors(){\n    document.body.style.setProperty('--ion-color-primary', this.data.primaryColor)\n    document.body.style.setProperty('--ion-color-primary-contrast', this.data.secondaryColor)\n  }\n\n}\n\n    \n\n    \n        Edit Pantry Details\n\n\n        \n            Pantry Name\n            \n                \n            \n            Description\n            \n                \n            \n            Address\n            \n                \n            \n            Logo Url\n            \n                \n            \n            Weekly Max Orders\n            \n                \n            \n            Primary Color\n            \n            Secondary Color\n            \n        \n\n\n\n    \n        \n            Cancel\n        \n        \n            Save\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Edit Pantry Details                    Pantry Name                                                    Description                                                    Address                                                    Logo Url                                                    Weekly Max Orders                                                    Primary Color                        Secondary Color                                            Cancel                            Save            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditDetailsDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditDialog.html":{"url":"components/EditDialog.html","title":"component - EditDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventory-management/inventory-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-dialog\n            \n\n\n\n\n            \n                templateUrl\n                edit-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cancelItem\n                            \n                            \n                                    Private\n                                cancelLimit\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                nameInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                addLimit\n                            \n                            \n                                cancelData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeItem\n                            \n                            \n                                removeLimit\n                            \n                            \n                                    Async\n                                saveData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: FoodItem, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventory-management/inventory-management.page.ts:195\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    FoodItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:210\n                \n            \n\n\n            \n                \n                    increments item quantity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to increment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addLimit\n                        \n                    \n                \n            \n            \n                \naddLimit(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:228\n                \n            \n\n\n            \n                \n                    increments and items's limit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem that will have limit modifed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelData\n                        \n                    \n                \n            \n            \n                \ncancelData(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:269\n                \n            \n\n\n            \n                \n                    Discards changes made to food item. Called when Cancel is pressed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to discard changes for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:219\n                \n            \n\n\n            \n                \n                    decrements item quantity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to decrement\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeLimit\n                        \n                    \n                \n            \n            \n                \nremoveLimit(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:242\n                \n            \n\n\n            \n                \n                    decrements and item's limit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem that will have limit modified\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveData\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveData(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:256\n                \n            \n\n\n            \n                \n                    Updates DB info for an item. Called when item changes are saved\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to update in database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cancelItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:198\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cancelLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:199\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FoodItem\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:196\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.data.name\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:201\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog, } from '@angular/material/dialog';\nimport { AlertController, } from '@ionic/angular';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { LoadingService } from '../services/loading.service';\n\n\n\n\n@Component({\n  selector: 'inventory-management',\n  templateUrl: './inventory-management.page.html',\n  styleUrls: ['./inventory-management.page.scss'],\n})\nexport class InventoryManagementPage implements AfterViewInit{\n  \n\n  displayedColumns: string[] = ['name', 'quantity', 'limit', 'actions'];\n  records: MatTableDataSource\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n\n  static addDialogRef: any\n\n  constructor(\n    public dialog: MatDialog,\n    private alertController: AlertController,\n    private firebaseService: FirebaseService,\n    ) { }\n\n  async ngOnInit() {    \n    \n  }\n\n  /**\n   * Updates the data source of the table\n   */\n  async updateTableSource() {\n    let data = await this.firebaseService.getInventory()\n    this.records = new MatTableDataSource(data)\n    this.length = this.records.data.length;\n    this.records.paginator = this.paginator;\n    this.records.sort = this.sort;\n  }\n  async ngAfterViewInit() {\n    await this.updateTableSource()\n  }\n\n  /**\n   * Updates the tables based on the filter\n   * @param event event emited by the filter input\n   */\n  updateFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n  /**\n   * Removes an item from the table\n   * @param item FoodItem to remove\n   */\n  async removeItem(item: FoodItem) {\n    //find the index from id\n    await this.firebaseService.removeItem(item)\n    let removed = this.records.data.splice(this.records.data.indexOf(item), 1)\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n \n  /**\n   * Opens an alert to confirm if a user wants to remove an item\n   * @param item FoodItem to remove\n   */\n  async openAlert(item: FoodItem){\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {}\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(item)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param item FoodItem to edit\n   */\n   openEditDialog(item: FoodItem){\n    const dialogRef = this.dialog.open(EditDialog, {restoreFocus: false, data: item});\n    dialogRef.afterClosed().subscribe( () => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * opens the add item dialog\n   */\n   async openAddDialog(){\n    const dialogRef = this.dialog.open(AddDialog, {restoreFocus: false});\n    InventoryManagementPage.addDialogRef = dialogRef\n    dialogRef.afterClosed().subscribe( () => {\n      this.updateTableSource()\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    })\n  }\n\n  /**\n   * Closes the add dialog\n   */\n  static async closeAddDialog() {\n    await InventoryManagementPage.addDialogRef.close()\n  }\n\n}\n\n@Component({\n  selector: 'add-dialog',\n  templateUrl: 'add-dialog.html'\n})\nexport class AddDialog implements OnInit {\n  nameInput: string\n  quantityInput: number\n  limitInput: number\n  urlInput: string\n  forceDisable = false\n  constructor(\n    private firebaseService: FirebaseService,\n    private loadingService: LoadingService\n    ){}\n  ngOnInit(): void {\n      \n  }\n\n  /**\n   * Adds item to the UI table and the DB\n   */\n  async AddItem(){\n    this.forceDisable = true\n    //write to db or something idk\n    if(!this.limitInput) {\n      this.limitInput = 0\n    }\n    let item: FoodItem = {\n      id: this.nameInput.toLowerCase(),\n      name: this.nameInput,\n      quantity: this.quantityInput,\n      limit: this.limitInput,\n      imageUrl: this.urlInput\n    }\n    console.log(item)\n    await this.firebaseService.addItem(item).then(() => {\n      InventoryManagementPage.closeAddDialog()\n      this.forceDisable = false\n    }).catch((err) => {\n      this.forceDisable = false\n    })\n    this.forceDisable = false\n  }\n}\n\n@Component({\n  selector: 'edit-dialog',\n  templateUrl: 'edit-dialog.html'\n})\nexport class EditDialog implements OnInit{\n  constructor(@Inject(MAT_DIALOG_DATA) public data: FoodItem,\n  private firebaseService: FirebaseService){}\n  private cancelItem = 0;\n  private cancelLimit = 0;\n  //private name = this.data.name;\n  nameInput: string = this.data.name\n  ngOnInit() {\n    console.log(this.data)\n  }\n\n  /**\n   * increments item quantity\n   * @param item FoodItem to increment\n   */\n  addItem(item: FoodItem){\n    item.quantity = item.quantity + 1;\n    this.cancelItem = this.cancelItem - 1;\n  }\n\n  /**\n   * decrements item quantity\n   * @param item FoodItem to decrement\n   */\n  removeItem(item: FoodItem){\n    item.quantity = item.quantity - 1;\n    this.cancelItem = this.cancelItem + 1;\n  }\n\n  /**\n   * increments and items's limit\n   * @param item FoodItem that will have limit modifed\n   */\n  addLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit + 1\n      this.cancelLimit = this.cancelLimit - 1\n    } else {\n      item.limit = 1\n      this.cancelLimit = this.cancelLimit - 1\n    }\n  }\n\n  /**\n   * decrements and item's limit\n   * @param item FoodItem that will have limit modified\n   */\n  removeLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit - 1;\n      this.cancelLimit = this.cancelLimit + 1\n    } else if(item.limit == 1) {\n      item.limit = undefined;\n      this.cancelLimit = this.cancelLimit + 1\n    }\n  }\n\n  /**\n   * Updates DB info for an item. Called when item changes are saved\n   * @param item FoodItem to update in database\n   */\n  async saveData(item: FoodItem){\n    //write to db\n    console.log(this.nameInput)\n    if(this.nameInput != \"\"){\n      item.name = this.nameInput\n    }\n    await this.firebaseService.updateInventoryItem(item)\n  }\n\n  /**\n   * Discards changes made to food item. Called when Cancel is pressed\n   * @param item FoodItem to discard changes for\n   */\n  cancelData(item: FoodItem){\n    item.quantity = item.quantity + this.cancelItem;\n    if(item.limit){\n      item.limit = item.limit + this.cancelLimit\n      if(item.limit == 0){\n        item.limit = undefined\n      }\n    }\n  }\n}\n    \n\n    \n        {{data.name}}\n\n    If an item has no limit, use the buttons to add one.\n    \n        \n            Name:\n            \n                \n            \n        \n        \n            Quantity: {{data.quantity}}\n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n        \n        \n            \n                Limit: {{data.limit}}\n            \n            \n                Limit: None\n            \n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n        \n    \n\n\n    \n        \n            \n                Close\n            \n            \n                Save\n            \n        \n    \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.name}}    If an item has no limit, use the buttons to add one.                        Name:                                                                    Quantity: {{data.quantity}}                                                                                                                                                                                                    Limit: {{data.limit}}                                        Limit: None                                                                                                                                                                                                                        Close                                        Save                              '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditOrderDialog.html":{"url":"components/EditOrderDialog.html","title":"component - EditOrderDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditOrderDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-management/order-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-order-dialog\n            \n\n\n\n\n            \n                templateUrl\n                edit-order-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                enumvals\n                            \n                            \n                                value\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEnumKey\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Order, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-management/order-management.page.ts:164\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Order\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEnumKey\n                        \n                    \n                \n            \n            \n                \ngetEnumKey(status: OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:181\n                \n            \n\n\n            \n                \n                    Converts the numerical order status to the coresponding string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        OrderStatus to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        String representaion of OrderStatus\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveOrder(data: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:189\n                \n            \n\n\n            \n                \n                    Saves the changes made to an order in the DB (mainly order status)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to update in the DB\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:165\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enumvals\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(OrderStatus).filter((v) => !isNaN(Number(v)))\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.getEnumKey(this.data.status)\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(OrderStatus).filter((v) => isNaN(Number(v)))\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:162\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Order } from '../../../../globalModels/order';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { AlertController } from '@ionic/angular';\nimport { Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { Observable, from } from 'rxjs';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-order-management',\n  templateUrl: './order-management.page.html',\n  styleUrls: ['./order-management.page.scss'],\n})\n\nexport class OrderManagementPage implements AfterViewInit {\n\n  displayedColumns: string[] = ['timestamp', 'id', 'status', 'actions'];\n  records: MatTableDataSource = new MatTableDataSource([]);\n\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatTable, { static: true }) table: MatTable;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n  constructor(\n    public dialog: MatDialog,\n    private firebase: FirebaseService,\n    private alertController: AlertController,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async ionViewWillEnter() {\n\n  }\n\n  /**\n   * Retrieves orders from the DB and initalizes table.\n   */\n  async ngAfterViewInit() {\n    try {\n      let orders = await this.firebase.getOrders()\n      // orders.sort(function(a, b){\n      //   return b.timestamp.getDate() - a.timestamp.getDate()\n      // })\n      this.records.data = orders\n      this.length = this.records.data.length\n      this.records.paginator = this.paginator;\n      this.records.sort = this.sort;\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n\n  /**\n   * Updates the table based on the value in the filter input\n   * @param event Event emited by filter changing\n   */\n  updateFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Removes an order from the table\n   * @param order Order to be removed\n   */\n  removeItem(order: Order) {\n    //find the index from id\n    let removed = this.records.data.splice(this.records.data.indexOf(order), 1)\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n\n  /**\n   * Opens an alert for the user for confirm if they want to remove an order\n   * @param order Order to be removed\n   */\n  async openAlert(order: Order) {\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => { }\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(order)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param order Order to edit\n   */\n  openEditDialog(order: Order) {\n    const dialogRef = this.dialog.open(EditOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * Opens the order view dialog\n   * @param order Order to view\n   */\n  openViewDialog(order: Order) {\n    const dialogRef = this.dialog.open(ViewOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n}\n\n\n@Component({\n  selector: 'edit-order-dialog',\n  templateUrl: 'edit-order-dialog.html'\n})\n\nexport class EditOrderDialog implements OnInit {\n  values = Object.values(OrderStatus).filter((v) => isNaN(Number(v)))\n  enumvals = Object.values(OrderStatus).filter((v) => !isNaN(Number(v)))\n  value = this.getEnumKey(this.data.status)\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n\n  ngOnInit() {\n\n    // console.log(this.values)\n    // console.log(this.enumvals)\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getEnumKey(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Saves the changes made to an order in the DB (mainly order status)\n   * @param data Order to update in the DB\n   */\n  async saveOrder(data: Order) {\n    console.log(this.value)\n    data.status = this.values.indexOf(this.value) + 1\n    console.log(data.status)\n    try {\n      this.firebaseService.updateOrderStatus(data, data.status)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update order status. Please try again later.', ['Ok'])\n    }\n    \n  }\n}\n\n\n@Component({\n  selector: 'view-order-dialog',\n  templateUrl: 'view-order-dialog.html'\n})\nexport class ViewOrderDialog implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order) { }\n  ngOnInit() {\n\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n}\n    \n\n    \n        Order Number: {{data.id}}\n\n    \n        General\n        Order Number: {{data.id}}\n        Timestamp: {{data.timestamp.toLocaleString()}}\n        \n            \n                Status\n                \n                    \n                        {{status}}\n                    \n                \n            \n        \n        \n        \n            \n                Order Contents:\n                \n                    \n                        \n                            \n                                {{item.name}}, {{item.quantity}}\n                            \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        \n            Cancel\n        \n        \n            Save\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Order Number: {{data.id}}            General        Order Number: {{data.id}}        Timestamp: {{data.timestamp.toLocaleString()}}                                    Status                                                            {{status}}                                                                                                    Order Contents:                                                                                                                        {{item.name}}, {{item.quantity}}                                                                                                                                                                    Cancel                            Save            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditOrderDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseService.html":{"url":"injectables/FirebaseService.html","title":"injectable - FirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pantryId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addItem\n                            \n                            \n                                    Async\n                                demoteUser\n                            \n                            \n                                foodItemConv\n                            \n                            \n                                    Async\n                                getInventory\n                            \n                            \n                                    Async\n                                getOrderItems\n                            \n                            \n                                    Async\n                                getOrders\n                            \n                            \n                                    Async\n                                getPantries\n                            \n                            \n                                    Async\n                                getPantry\n                            \n                            \n                                getPantryId\n                            \n                            \n                                    Async\n                                getPerms\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                orderConv\n                            \n                            \n                                pantryConv\n                            \n                            \n                                    Async\n                                promoteUser\n                            \n                            \n                                    Async\n                                removeItem\n                            \n                            \n                                    Async\n                                updateInventoryItem\n                            \n                            \n                                    Async\n                                updateOrderStatus\n                            \n                            \n                                    Async\n                                updatePantry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/firebase.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    addItem(itemToAdd: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:218\n                \n            \n\n\n            \n                \n                    Adds a new item to the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    itemToAdd\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to add to the database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        demoteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    demoteUser(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:386\n                \n            \n\n\n            \n                \n                    Removes a specific user's admin perms\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        UID of user to be demoted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        result of revokeAdmin cloud function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        foodItemConv\n                        \n                    \n                \n            \n            \n                \nfoodItemConv(snap: DocumentSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:138\n                \n            \n\n\n            \n                \n                    Converts Firebase Snapshot into Food Item Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    snap\n                                    \n                                            DocumentSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Firebase representation of a food item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        FoodItem object representaion of parameter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getInventory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInventory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:108\n                \n            \n\n\n            \n                \n                    Retrieves the inventory from the firebase database\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise containing an array of FoodItem Objects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOrderItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrderItems(order: DocumentSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:180\n                \n            \n\n\n            \n                \n                    Retireves items from a particular order\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            DocumentSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        DocumentSnapshot to retrives items from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise containing an array of FoodItem Objects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOrders\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:147\n                \n            \n\n\n            \n                \n                    Retrieves all orders for a pantry\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise containing an array of Order Objects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPantries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPantries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:43\n                \n            \n\n\n            \n                \n                    Retrieves all pantries that are currently in the database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise containing an array of all available Pantries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPantry\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPantry()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:76\n                \n            \n\n\n            \n                \n                    Retrieves Pantry Data from firebase database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise that contains the Pantry Data from the database\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPantryId\n                        \n                    \n                \n            \n            \n                \ngetPantryId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:68\n                \n            \n\n\n            \n                \n                    Retrieves the pantry's DB id\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The pantry Id that is intialized on login\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPerms\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPerms(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:351\n                \n            \n\n\n            \n                \n                    Retrieves a user's premission from the authentication database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User to retrieve permissions for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        An dictionary containing the user's custom claims in firebase\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:329\n                \n            \n\n\n            \n                \n                    Retrieves all users for the pantry that the user is currently logged into\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise containing an array of users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        orderConv\n                        \n                    \n                \n            \n            \n                \n                    \n                    orderConv(snap: DocumentSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:205\n                \n            \n\n\n            \n                \n                    Converts Document Snapshot into an Order Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    snap\n                                    \n                                            DocumentSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        DocumentSnapshot with order data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Order Object that contains the data from the parameter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pantryConv\n                        \n                    \n                \n            \n            \n                \npantryConv(snapshot: DocumentSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:99\n                \n            \n\n\n            \n                \n                    Converts Firebase Snapshot into Pantry Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    snapshot\n                                    \n                                            DocumentSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Firebase Document Snapshot of Pantry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Pantry Object representaion of parameter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        promoteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    promoteUser(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:368\n                \n            \n\n\n            \n                \n                    Grants a specific user admin perms\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        UID if the user to be promoted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        the result of the makeAdmin cloud function\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(itemToRemove: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:268\n                \n            \n\n\n            \n                \n                    Removes a food item from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    itemToRemove\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to remove from the DB\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateInventoryItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInventoryItem(itemToUpdate: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:247\n                \n            \n\n\n            \n                \n                    Updates a FoodItem in the inventory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    itemToUpdate\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem that is the item to update in the inventory\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOrderStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOrderStatus(order: Order, newStatus: OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:285\n                \n            \n\n\n            \n                \n                    Updates an order\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order object to update in DB\n\n                                    \n                                \n                                \n                                    newStatus\n                                    \n                                            OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Integer status to change the order status to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePantry\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePantry(pantry: Pantry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/firebase.service.ts:304\n                \n            \n\n\n            \n                \n                    Updates Pantry details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pantry\n                                    \n                                                Pantry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pantry object to update in DB\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pantryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/firebase.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/firebase.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { getFirestore, collection, addDoc, updateDoc, getDocs, getDoc, QuerySnapshot, DocumentSnapshot, doc, setDoc, deleteDoc } from 'firebase/firestore'\n\nimport { FoodItem } from '../../../../globalModels/foodItem'\nimport { Order } from '../../../../globalModels/order'\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\n\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\nimport { User } from '../../../../globalModels/user';\nimport { LoadingService } from './loading.service';\n\nconst functions = getFunctions()\n\nconst db = getFirestore()\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  //This will be used to determine which pantry instance is accessed\n  //TODO: update/change this when the user logs in\n  userId = ''\n  pantryId = ''\n\n  constructor(\n    private loadingService: LoadingService\n  ) {\n    let temp = sessionStorage.getItem('uid')\n    let temp2 = sessionStorage.getItem('pantryId')\n    if (temp != null && temp2 != null) {\n      this.userId = temp\n      this.pantryId = temp2\n    }\n  }\n\n  /**\n   * Retrieves all pantries that are currently in the database\n   * @returns A promise containing an array of all available Pantries\n   */\n  async getPantries(): Promise {\n    await this.loadingService.showLoader()\n    let snapshot = undefined\n    try {\n      snapshot = await getDocs(collection(db, 'pantries'))\n    } catch (error) {\n      this.loadingService.dismissLoader()\n      throw error\n    }\n    if (snapshot == undefined) {\n      this.loadingService.dismissLoader()\n      throw Error('No Pantries Found')\n    }\n    var toReturn: Pantry[] = []\n    snapshot.forEach((pantry) => {\n      toReturn.push(this.pantryConv(pantry))\n    })\n    this.loadingService.dismissLoader()\n    return toReturn\n  }\n\n  /**\n   * Retrieves the pantry's DB id\n   * @returns The pantry Id that is intialized on login\n   */\n  getPantryId() {\n    return this.pantryId\n  }\n\n  /**\n   * Retrieves Pantry Data from firebase database\n   * @returns Promise that contains the Pantry Data from the database\n   */\n  async getPantry(): Promise {\n    await this.loadingService.showLoader()\n    let snapshot = undefined;\n    try {\n      snapshot = await getDoc(doc(db, 'pantries/' + this.pantryId))\n    } catch (error) {\n      this.loadingService.dismissLoader()\n      throw (error)\n    }\n    if (snapshot == undefined) {\n      this.loadingService.dismissLoader()\n      throw Error('Food Pantry does not exist')\n    }\n    this.loadingService.dismissLoader()\n    return this.pantryConv(snapshot)\n\n  }\n\n  /**\n   * Converts Firebase Snapshot into Pantry Object\n   * @param snapshot Firebase Document Snapshot of Pantry\n   * @returns Pantry Object representaion of parameter\n   */\n  pantryConv(snapshot: DocumentSnapshot) {\n    let data = snapshot.data()!\n    return new Pantry(snapshot.id, data['name'], data['description'], data['address'], data['logoUrl'], data['primaryColor'], data['secondaryColor'], data['orderLimit'])\n  }\n\n  /**\n   * Retrieves the inventory from the firebase database\n   * @returns Promise containing an array of FoodItem Objects\n   */\n  async getInventory(): Promise {\n    await this.loadingService.showLoader()\n    let snapshot = undefined;\n    try {\n      snapshot = await getDocs(collection(db, \"pantries/\" + this.pantryId + \"/inventory/\"))\n    } catch (error) {\n      //throw error to outer page\n      this.loadingService.dismissLoader()\n      throw error\n    }\n    if (snapshot == undefined) {\n      this.loadingService.dismissLoader()\n      throw Error('No Data Found')\n    }\n    \n    let toReturn: FoodItem[] = []\n    snapshot.forEach((doc) => {\n      if (doc.exists()) {\n        toReturn.push(this.foodItemConv(doc))\n      }\n    })\n    this.loadingService.dismissLoader()\n    return toReturn\n  }\n\n  /**\n   * Converts Firebase Snapshot into Food Item Object\n   * @param snap Firebase representation of a food item\n   * @returns FoodItem object representaion of parameter\n   */\n  foodItemConv(snap: DocumentSnapshot) {\n    let docData = snap.data()!\n    return new FoodItem(snap.id, docData['name'], docData['quantity'], docData['orderQuan'], docData['limit'], docData['imageUrl'])\n  }\n\n  /**\n   * Retrieves all orders for a pantry\n   * @returns A Promise containing an array of Order Objects\n   */\n  async getOrders(): Promise {\n    await this.loadingService.showLoader()\n    let snapshot = undefined;\n    try {\n      snapshot = await getDocs(collection(db, \"pantries/\" + this.pantryId + \"/orders/\"))\n    } catch (error) {\n      this.loadingService.dismissLoader()\n      //throw error to outer page\n      throw error\n    }\n    if (snapshot == undefined) {\n      this.loadingService.dismissLoader()\n      throw Error('No Data Found')\n    }\n\n    let toReturn: Order[] = []\n\n    for (let doc of snapshot.docs) {\n      if (doc.exists()) {\n        let toAdd = await this.orderConv(doc)\n        toReturn.push(toAdd)\n      }\n    }\n    this.loadingService.dismissLoader()\n    // console.log('returning from orders')\n    return toReturn\n  }\n\n  /**\n   * Retireves items from a particular order\n   * @param order DocumentSnapshot to retrives items from\n   * @returns Promise containing an array of FoodItem Objects\n   */\n  async getOrderItems(order: DocumentSnapshot): Promise {\n    let snapshot = undefined\n    let orderPath = order.ref.path\n    try {\n      snapshot = await getDocs(collection(db, orderPath + '/items'))\n    } catch (error) {\n      throw error\n    }\n    if (snapshot == undefined) {\n      throw Error('No Data Found')\n    }\n\n    let toReturn: FoodItem[] = []\n    snapshot.forEach((item) => {\n      toReturn.push(this.foodItemConv(item))\n    })\n    // console.log('return from getOrderItems')\n    return toReturn\n  }\n\n  /**\n   * Converts Document Snapshot into an Order Object\n   * @param snap DocumentSnapshot with order data\n   * @returns Order Object that contains the data from the parameter\n   */\n  async orderConv(snap: DocumentSnapshot) {\n    let docData = snap.data()!\n    let items: FoodItem[] = []\n    //TODO: actually pull for items for order\n    items = await this.getOrderItems(snap)\n    // console.log('return from order conv')\n    return new Order(snap.id, docData['date'], docData['status'], docData['uid'], items)\n  }\n\n  /**\n   * Adds a new item to the database\n   * @param itemToAdd FoodItem to add to the database\n   */\n  async addItem(itemToAdd: FoodItem) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId + '/inventory/' + itemToAdd.id)\n    let snapshot = await getDoc(docRef)\n    if (snapshot.exists()) {\n      console.log('calling-dismiss')\n      this.loadingService.dismissLoader()\n      throw Error('Item already exists')\n    }\n    try {\n      await setDoc(docRef, {\n        imageUrl: itemToAdd.imageUrl,\n        limit: itemToAdd.limit,\n        name: itemToAdd.name,\n        quantity: itemToAdd.quantity\n      })\n    } catch (err) {\n      console.log('calling-dismiss')\n      this.loadingService.dismissLoader()\n      throw err\n    }\n    console.log('calling-dismiss')\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Updates a FoodItem in the inventory\n   * @param itemToUpdate FoodItem that is the item to update in the inventory\n   */\n  async updateInventoryItem(itemToUpdate: FoodItem) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId + '/inventory/' + itemToUpdate.id)\n    let snapshot = await getDoc(docRef)\n    if (snapshot.exists()) {\n      await updateDoc(docRef, {\n        name: itemToUpdate.name,\n        limit: itemToUpdate.limit,\n        quantity: itemToUpdate.quantity\n      })\n    } else {\n      this.loadingService.dismissLoader()\n      throw Error('Item does not exist!')\n    }\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Removes a food item from the database\n   * @param itemToRemove FoodItem to remove from the DB\n   */\n  async removeItem(itemToRemove: FoodItem) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId + '/inventory/' + itemToRemove.id)\n    try {\n      await deleteDoc(docRef)\n    } catch (err) {\n      this.loadingService.dismissLoader()\n      throw err\n    }\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Updates an order\n   * @param order Order object to update in DB \n   * @param newStatus Integer status to change the order status to\n   */\n  async updateOrderStatus(order: Order, newStatus: OrderStatus) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId + '/orders/' + order.id)\n    let snapshot = await getDoc(docRef)\n    if (snapshot.exists()) {\n      await updateDoc(docRef, {\n        status: newStatus\n      })\n    } else {\n      this.loadingService.dismissLoader()\n      throw Error('Order does not exist!')\n    }\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Updates Pantry details\n   * @param pantry Pantry object to update in DB\n   */\n  async updatePantry(pantry: Pantry) {\n    await this.loadingService.showLoader()\n    let docRef = doc(db, 'pantries/' + this.pantryId)\n    let snapshot = await getDoc(docRef)\n    if (snapshot.exists()) {\n      await updateDoc(docRef, {\n        address: pantry.address,\n        description: pantry.desc,\n        logoUrl: pantry.logoUrl,\n        name: pantry.name,\n        orderLimit: pantry.orderLimit,\n        primaryColor: pantry.primaryColor,\n        secondaryColor: pantry.secondaryColor\n      })\n    } else {\n      this.loadingService.dismissLoader()\n      throw Error('pantry does not exist!')\n    }\n    this.loadingService.dismissLoader()\n  }\n\n  /**\n   * Retrieves all users for the pantry that the user is currently logged into\n   * @returns A promise containing an array of users\n   */\n  async getUsers(): Promise {\n    await this.loadingService.showLoader()\n    const getUsers = httpsCallable(functions, 'getUsers')\n    return getUsers().then(async (result: any) => {\n      var userArr: User[] = []\n      let users = result.data.users\n      for (let user of users) {\n        let toAdd = new User(user.uid, user.email, user.uid)\n        toAdd.perms = await this.getPerms(toAdd)\n        userArr.push(toAdd)\n      }\n      userArr.reverse()\n      this.loadingService.dismissLoader()\n      return userArr\n    })\n  }\n\n  /**\n   * Retrieves a user's premission from the authentication database\n   * @param user User to retrieve permissions for\n   * @returns An dictionary containing the user's custom claims in firebase\n   */\n  async getPerms(user: User) {\n    console.log('calling getPerms')\n    const getPerms = httpsCallable(functions, 'getPerms')\n    let params = {\n      email: user.email\n    }\n    return getPerms(params).then((res: any) => {\n      let perms = res.data\n      return perms\n    })\n  }\n\n  /**\n   * Grants a specific user admin perms\n   * @param uid UID if the user to be promoted\n   * @returns the result of the makeAdmin cloud function\n   */\n  async promoteUser(uid: string) {\n    await this.loadingService.showLoader()\n    const makeAdmin = httpsCallable(functions, 'makeAdmin')\n    let params = {\n      user: uid,\n      pantryName: this.pantryId\n    }\n    return makeAdmin(params).then(() => {\n      console.log('done with edit')\n      this.loadingService.dismissLoader()\n    })\n  }\n\n  /**\n   * Removes a specific user's admin perms\n   * @param uid UID of user to be demoted\n   * @returns result of revokeAdmin cloud function\n   */\n  async demoteUser(uid: string) {\n    await this.loadingService.showLoader()\n    const revokeAdmin = httpsCallable(functions, 'revokeAdmin')\n    let params = {\n      user: uid\n    }\n    return revokeAdmin(params).then(() => {\n      this.loadingService.dismissLoader()\n    })\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordPage.html":{"url":"components/ForgotPasswordPage.html","title":"component - ForgotPasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forgot-password/forgot-password.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/forgot-password/forgot-password.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forgot-password/forgot-password.page.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      Forgot you password?\n      Enter you email below to recieve a password reset link.\n      \n        Email\n        \n      \n      Send Password Reset Email\n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.page.scss\n                \n                .container {\n    margin-top: 4em;\n    align-self: center;\n }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Forgot you password?      Enter you email below to recieve a password reset link.              Email                    Send Password Reset Email      '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForgotPasswordPageModule.html":{"url":"modules/ForgotPasswordPageModule.html","title":"module - ForgotPasswordPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ForgotPasswordPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ForgotPasswordPageModule\n\n\n\ncluster_ForgotPasswordPageModule_imports\n\n\n\ncluster_ForgotPasswordPageModule_declarations\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\n\n\nForgotPasswordPageModule\n\nForgotPasswordPageModule\n\nForgotPasswordPageModule -->\n\nForgotPasswordPage->ForgotPasswordPageModule\n\n\n\n\n\nForgotPasswordPageRoutingModule\n\nForgotPasswordPageRoutingModule\n\nForgotPasswordPageModule -->\n\nForgotPasswordPageRoutingModule->ForgotPasswordPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forgot-password/forgot-password.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForgotPasswordPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ForgotPasswordPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ForgotPasswordPageRoutingModule\n  ],\n  declarations: [ForgotPasswordPage]\n})\nexport class ForgotPasswordPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForgotPasswordPageRoutingModule.html":{"url":"modules/ForgotPasswordPageRoutingModule.html","title":"module - ForgotPasswordPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ForgotPasswordPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forgot-password/forgot-password-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotPasswordPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logoUrl\n                            \n                            \n                                pantry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.page.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.page.ts:20\n                \n            \n\n\n            \n                \n                    Init method retrieves the pantry so the patry name and logo can be set\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.page.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pantry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pantry\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.page.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Pantry } from '../../../../globalModels/pantry';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  pantry: Pantry\n  logoUrl: string\n  constructor(\n    private firebaseService: FirebaseService\n  ) {}\n\n  /**\n   * Init method retrieves the pantry so the patry name and logo can be set\n   */\n    async ngOnInit() {\n      this.pantry = await this.firebaseService.getPantry()\n      this.logoUrl = this.pantry.logoUrl\n    }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    {{pantry.name}} Admin App\n    \n    Use the hamburger menu to manage your application\n  \n\n    \n\n    \n                \n                    home.page.scss\n                \n                #container {\n  text-align: center;\n\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n\n  color: #8c8c8c;\n\n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{pantry.name}} Admin App        Use the hamburger menu to manage your application  '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InventoryManagementPage.html":{"url":"components/InventoryManagementPage.html","title":"component - InventoryManagementPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InventoryManagementPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inventory-management/inventory-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                inventory-management\n            \n\n            \n                styleUrls\n                ./inventory-management.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./inventory-management.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Static\n                                addDialogRef\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                length\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                records\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                closeAddDialog\n                            \n                            \n                                    Async\n                                ngAfterViewInit\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                openAddDialog\n                            \n                            \n                                    Async\n                                openAlert\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                    Async\n                                removeItem\n                            \n                            \n                                updateFilter\n                            \n                            \n                                    Async\n                                updateTableSource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, alertController: AlertController, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inventory-management/inventory-management.page.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        closeAddDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeAddDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:140\n                \n            \n\n\n            \n                \n                    Closes the add dialog\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        openAddDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAddDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:127\n                \n            \n\n\n            \n                \n                    opens the add item dialog\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        openAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAlert(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:92\n                \n            \n\n\n            \n                \n                    Opens an alert to confirm if a user wants to remove an item\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:116\n                \n            \n\n\n            \n                \n                    Opens the edit dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(item: FoodItem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:78\n                \n            \n\n\n            \n                \n                    Removes an item from the table\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            FoodItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FoodItem to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilter\n                        \n                    \n                \n            \n            \n                \nupdateFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:66\n                \n            \n\n\n            \n                \n                    Updates the tables based on the filter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        event emited by the filter input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTableSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTableSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inventory-management/inventory-management.page.ts:51\n                \n            \n\n\n            \n                \n                    Updates the data source of the table\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatMenuTrigger)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        addDialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['name', 'quantity', 'limit', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [5, 10, 25, 100]\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        records\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inventory-management/inventory-management.page.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog, } from '@angular/material/dialog';\nimport { AlertController, } from '@ionic/angular';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { LoadingService } from '../services/loading.service';\n\n\n\n\n@Component({\n  selector: 'inventory-management',\n  templateUrl: './inventory-management.page.html',\n  styleUrls: ['./inventory-management.page.scss'],\n})\nexport class InventoryManagementPage implements AfterViewInit{\n  \n\n  displayedColumns: string[] = ['name', 'quantity', 'limit', 'actions'];\n  records: MatTableDataSource\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n\n  static addDialogRef: any\n\n  constructor(\n    public dialog: MatDialog,\n    private alertController: AlertController,\n    private firebaseService: FirebaseService,\n    ) { }\n\n  async ngOnInit() {    \n    \n  }\n\n  /**\n   * Updates the data source of the table\n   */\n  async updateTableSource() {\n    let data = await this.firebaseService.getInventory()\n    this.records = new MatTableDataSource(data)\n    this.length = this.records.data.length;\n    this.records.paginator = this.paginator;\n    this.records.sort = this.sort;\n  }\n  async ngAfterViewInit() {\n    await this.updateTableSource()\n  }\n\n  /**\n   * Updates the tables based on the filter\n   * @param event event emited by the filter input\n   */\n  updateFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n  /**\n   * Removes an item from the table\n   * @param item FoodItem to remove\n   */\n  async removeItem(item: FoodItem) {\n    //find the index from id\n    await this.firebaseService.removeItem(item)\n    let removed = this.records.data.splice(this.records.data.indexOf(item), 1)\n    if(this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n \n  /**\n   * Opens an alert to confirm if a user wants to remove an item\n   * @param item FoodItem to remove\n   */\n  async openAlert(item: FoodItem){\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {}\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(item)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param item FoodItem to edit\n   */\n   openEditDialog(item: FoodItem){\n    const dialogRef = this.dialog.open(EditDialog, {restoreFocus: false, data: item});\n    dialogRef.afterClosed().subscribe( () => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * opens the add item dialog\n   */\n   async openAddDialog(){\n    const dialogRef = this.dialog.open(AddDialog, {restoreFocus: false});\n    InventoryManagementPage.addDialogRef = dialogRef\n    dialogRef.afterClosed().subscribe( () => {\n      this.updateTableSource()\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    })\n  }\n\n  /**\n   * Closes the add dialog\n   */\n  static async closeAddDialog() {\n    await InventoryManagementPage.addDialogRef.close()\n  }\n\n}\n\n@Component({\n  selector: 'add-dialog',\n  templateUrl: 'add-dialog.html'\n})\nexport class AddDialog implements OnInit {\n  nameInput: string\n  quantityInput: number\n  limitInput: number\n  urlInput: string\n  forceDisable = false\n  constructor(\n    private firebaseService: FirebaseService,\n    private loadingService: LoadingService\n    ){}\n  ngOnInit(): void {\n      \n  }\n\n  /**\n   * Adds item to the UI table and the DB\n   */\n  async AddItem(){\n    this.forceDisable = true\n    //write to db or something idk\n    if(!this.limitInput) {\n      this.limitInput = 0\n    }\n    let item: FoodItem = {\n      id: this.nameInput.toLowerCase(),\n      name: this.nameInput,\n      quantity: this.quantityInput,\n      limit: this.limitInput,\n      imageUrl: this.urlInput\n    }\n    console.log(item)\n    await this.firebaseService.addItem(item).then(() => {\n      InventoryManagementPage.closeAddDialog()\n      this.forceDisable = false\n    }).catch((err) => {\n      this.forceDisable = false\n    })\n    this.forceDisable = false\n  }\n}\n\n@Component({\n  selector: 'edit-dialog',\n  templateUrl: 'edit-dialog.html'\n})\nexport class EditDialog implements OnInit{\n  constructor(@Inject(MAT_DIALOG_DATA) public data: FoodItem,\n  private firebaseService: FirebaseService){}\n  private cancelItem = 0;\n  private cancelLimit = 0;\n  //private name = this.data.name;\n  nameInput: string = this.data.name\n  ngOnInit() {\n    console.log(this.data)\n  }\n\n  /**\n   * increments item quantity\n   * @param item FoodItem to increment\n   */\n  addItem(item: FoodItem){\n    item.quantity = item.quantity + 1;\n    this.cancelItem = this.cancelItem - 1;\n  }\n\n  /**\n   * decrements item quantity\n   * @param item FoodItem to decrement\n   */\n  removeItem(item: FoodItem){\n    item.quantity = item.quantity - 1;\n    this.cancelItem = this.cancelItem + 1;\n  }\n\n  /**\n   * increments and items's limit\n   * @param item FoodItem that will have limit modifed\n   */\n  addLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit + 1\n      this.cancelLimit = this.cancelLimit - 1\n    } else {\n      item.limit = 1\n      this.cancelLimit = this.cancelLimit - 1\n    }\n  }\n\n  /**\n   * decrements and item's limit\n   * @param item FoodItem that will have limit modified\n   */\n  removeLimit(item: FoodItem){\n    if(item.limit){\n      item.limit = item.limit - 1;\n      this.cancelLimit = this.cancelLimit + 1\n    } else if(item.limit == 1) {\n      item.limit = undefined;\n      this.cancelLimit = this.cancelLimit + 1\n    }\n  }\n\n  /**\n   * Updates DB info for an item. Called when item changes are saved\n   * @param item FoodItem to update in database\n   */\n  async saveData(item: FoodItem){\n    //write to db\n    console.log(this.nameInput)\n    if(this.nameInput != \"\"){\n      item.name = this.nameInput\n    }\n    await this.firebaseService.updateInventoryItem(item)\n  }\n\n  /**\n   * Discards changes made to food item. Called when Cancel is pressed\n   * @param item FoodItem to discard changes for\n   */\n  cancelData(item: FoodItem){\n    item.quantity = item.quantity + this.cancelItem;\n    if(item.limit){\n      item.limit = item.limit + this.cancelLimit\n      if(item.limit == 0){\n        item.limit = undefined\n      }\n    }\n  }\n}\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      \n        \n          \n            Filter\n            \n          \n        \n        \n          Add Item\n        \n      \n    \n    \n\n    \n      \n        Name\n        {{element.name}}\n      \n      \n        Quantity\n        {{element.quantity}}\n      \n      \n        Limit\n        \n         {{element.limit}}\n        None\n      \n      \n        Actions\n        \n          \n                      \n          \n          \n            \n              Edit Item\n            \n            \n              Remove Item\n            \n          \n        \n      \n      \n      \n      \n      \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./inventory-management.page.scss\n                \n                .table-container{\n    height: 100vh\n}\n\n\ntable {\n    width: 100%;\n}\n\n.mat-cell {\n    width: 40%;\n}\n  \n.mat-column-gender {\n    width: 20%;\n}\n\nth.mat-sort-header-sorted {\n    color: black;\n}\n  \n\n.mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.actions {\n    fill: black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Filter                                                Add Item                                        Name        {{element.name}}                    Quantity        {{element.quantity}}                    Limit                 {{element.limit}}        None                    Actions                                                                                      Edit Item                                      Remove Item                                                                          '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InventoryManagementPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InventoryManagementPageModule.html":{"url":"modules/InventoryManagementPageModule.html","title":"module - InventoryManagementPageModule","body":"\n                   \n\n\n\n\n    Modules\n    InventoryManagementPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InventoryManagementPageModule\n\n\n\ncluster_InventoryManagementPageModule_declarations\n\n\n\ncluster_InventoryManagementPageModule_imports\n\n\n\n\nAddDialog\n\nAddDialog\n\n\n\nInventoryManagementPageModule\n\nInventoryManagementPageModule\n\nInventoryManagementPageModule -->\n\nAddDialog->InventoryManagementPageModule\n\n\n\n\n\nEditDialog\n\nEditDialog\n\nInventoryManagementPageModule -->\n\nEditDialog->InventoryManagementPageModule\n\n\n\n\n\nInventoryManagementPage\n\nInventoryManagementPage\n\nInventoryManagementPageModule -->\n\nInventoryManagementPage->InventoryManagementPageModule\n\n\n\n\n\nInventoryManagementPageRoutingModule\n\nInventoryManagementPageRoutingModule\n\nInventoryManagementPageModule -->\n\nInventoryManagementPageRoutingModule->InventoryManagementPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/inventory-management/inventory-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddDialog\n                        \n                        \n                            EditDialog\n                        \n                        \n                            InventoryManagementPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InventoryManagementPageRoutingModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InventoryManagementPageRoutingModule } from './inventory-management-routing.module';\n\nimport { AddDialog, EditDialog, InventoryManagementPage, } from './inventory-management.page';\n\nimport {MatTableModule} from '@angular/material/table'; \nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDialogModule} from '@angular/material/dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InventoryManagementPageRoutingModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDialogModule,\n    ],\n  declarations: [InventoryManagementPage, EditDialog, AddDialog],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class InventoryManagementPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InventoryManagementPageRoutingModule.html":{"url":"modules/InventoryManagementPageRoutingModule.html","title":"module - InventoryManagementPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    InventoryManagementPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/inventory-management/inventory-management-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InventoryManagementPage } from './inventory-management.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InventoryManagementPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InventoryManagementPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                dismissLoader\n                            \n                            \n                                    Async\n                                showLoader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingCtrl: LoadingController)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dismissLoader\n                        \n                    \n                \n            \n            \n                \n                    \n                    dismissLoader()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:22\n                \n            \n\n\n            \n                \n                    Removes the loading spinner overlay from the screen\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        showLoader\n                        \n                    \n                \n            \n            \n                \n                    \n                    showLoader()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading.service.ts:14\n                \n            \n\n\n            \n                \n                    Shows a generic loading spinner\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(private loadingCtrl: LoadingController) { }\n\n  /**\n   * Shows a generic loading spinner\n   */\n  async showLoader() {\n    const loading = await this.loadingCtrl.create()\n    loading.present()\n  }\n\n  /**\n   * Removes the loading spinner overlay from the screen\n   */\n  async dismissLoader() {\n    await this.loadingCtrl.dismiss()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                pantries\n                            \n                            \n                                    Public\n                                pantry\n                            \n                            \n                                    Public\n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                setPantrySelection\n                            \n                            \n                                signInButton\n                            \n                            \n                                toForgotPassword\n                            \n                            \n                                toSignup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:40\n                \n            \n\n\n            \n                \n                    Signs a user out and initalizes inputs\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:28\n                \n            \n\n\n            \n                \n                    Pulls all pantries for selection on page init\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPantrySelection\n                        \n                    \n                \n            \n            \n                \nsetPantrySelection(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:59\n                \n            \n\n\n            \n                \n                    Sets the user's pantry selection\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        event emitted by ion-select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInButton\n                        \n                    \n                \n            \n            \n                \nsignInButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:67\n                \n            \n\n\n            \n                \n                    Signs the user in\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Returns if an error occurs and the function should abort\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toForgotPassword\n                        \n                    \n                \n            \n            \n                \ntoForgotPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSignup\n                        \n                    \n                \n            \n            \n                \ntoSignup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pantries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pantry[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pantry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { Pantry } from '../../../../globalModels/pantry';\nimport { FirebaseService } from '../services/firebase.service';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  public email: string = '';\n  public password: string = '';\n  public pantries: Pantry[] = []\n  public pantry: string = ''\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n  ) { }\n\n  /**\n   * Pulls all pantries for selection on page init\n   */\n  async ngOnInit() {\n    try {\n      this.pantries = await this.firebaseService.getPantries()\n    } catch (err) {\n      console.log(\"error\", err)\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n  }\n\n  /**\n   * Signs a user out and initalizes inputs\n   */\n  ionViewWillEnter() {\n    /*\n    Do NOT remove\n    This is the only way that the signout button which\n    exists in the app component can actually work.\n    The AuthService can't be injected there, so all\n    we can do is navigate to this page and then signout\n    here.\n    */\n    //console.log('signout')\n    this.authService.signOut()\n    this.email = ''\n    this.password = ''\n  }\n\n  /**\n   * Sets the user's pantry selection\n   * @param event event emitted by ion-select\n   */\n  setPantrySelection(event: any) {\n    this.pantry = event.detail.value\n  }\n\n  /**\n   * Signs the user in\n   * @returns Returns if an error occurs and the function should abort\n   */\n  signInButton() {\n    if (this.pantry.length  {\n        this.firebaseService.pantryId = this.pantry\n        let user = await this.authService.getCurrentUser()\n        \n        this.firebaseService.userId = user.uid\n        console.log('User:', this.firebaseService.userId, '   Pantry:', this.firebaseService.pantryId)\n        sessionStorage.setItem('uid', this.firebaseService.userId)\n        sessionStorage.setItem('pantryId', this.firebaseService.pantryId)\n        let pantry = await this.firebaseService.getPantry()\n          document.body.style.setProperty('--ion-color-primary', pantry.primaryColor)\n          document.body.style.setProperty('--ion-color-primary-contrast', pantry.secondaryColor)\n        this.router.navigateByUrl('/home')\n      })\n    } catch (err) {\n      console.log(err)\n      return\n    }\n  }\n\n  toForgotPassword() {\n    // this.router.navigateByUrl(\"forgot-password\")\n  }\n\n  toSignup() {\n    this.router.navigateByUrl(\"signup\")\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    \n    \n      Log into your Food Pantry - Admin\n      \n        \n          \n            \n              {{pantry.name}}\n            \n          \n        \n        \n          Enter your email:\n          \n        \n        \n          Enter your password:\n          \n        \n        Forgot Password?\n      \n      \n      Login\n      \n      \n      \n    \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .center {\n    display: flex;\n    flex-direction: column;\n    padding-top: 2em;\n    padding-left: 1em;\n    padding-right: 1em;\n    width: 100%;\n    justify-content: center;\n    justify-items: center;\n\n    .horizontal-container {\n        justify-content: center;\n        width: 100%;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row;\n\n        .logo {\n            text-align: center;\n\n            img {\n                min-width: 50px;\n                max-width: 300px;\n            }\n        }\n\n        .login {\n            margin-left: 20px;\n            text-align: center;\n\n            .inputs {\n                text-align: left !important;\n\n                ion-item {\n                    padding-top: 10px;\n                }\n            }\n\n            ion-button {\n                width: 100%;\n                padding: 0px;\n                margin: 0px;\n            }\n        }\n    }\n\n    ion-button {\n        width: 100%;\n        max-width: 36em;\n    }\n\n    .signup {\n        margin-top: 30px;\n        display: inline-block;\n        text-align: center;\n        padding-bottom: 30px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Log into your Food Pantry - Admin                                                  {{pantry.name}}                                                Enter your email:                                    Enter your password:                          Forgot Password?                  Login                      '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\nexport interface Pantry {\n  name: string\n  logoUrl: string\n  primaryColor: string\n  secondayColor: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderManagementPage.html":{"url":"components/OrderManagementPage.html","title":"component - OrderManagementPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderManagementPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-management/order-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-management\n            \n\n            \n                styleUrls\n                ./order-management.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./order-management.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                length\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                records\n                            \n                            \n                                sort\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                            \n                                    Async\n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                openAlert\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                openViewDialog\n                            \n                            \n                                removeItem\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, firebase: FirebaseService, alertController: AlertController, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-management/order-management.page.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(status: OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:89\n                \n            \n\n\n            \n                \n                    Converts the numerical order status to the coresponding string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        OrderStatus to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        String representaion of OrderStatus\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \n                    \n                    ionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:54\n                \n            \n\n\n            \n                \n                    Retrieves orders from the DB and initalizes table.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        openAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAlert(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:110\n                \n            \n\n\n            \n                \n                    Opens an alert for the user for confirm if they want to remove an order\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:134\n                \n            \n\n\n            \n                \n                    Opens the edit dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openViewDialog\n                        \n                    \n                \n            \n            \n                \nopenViewDialog(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:146\n                \n            \n\n\n            \n                \n                    Opens the order view dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to view\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:97\n                \n            \n\n\n            \n                \n                    Removes an order from the table\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                            Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Order to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilter\n                        \n                    \n                \n            \n            \n                \nupdateFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:75\n                \n            \n\n\n            \n                \n                    Updates the table based on the value in the filter input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event emited by filter changing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatMenuTrigger)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['timestamp', 'id', 'status', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [5, 10, 25, 100]\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        records\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                \n                    \n                        Default value : new MatTableDataSource([])\n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatTable, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Order } from '../../../../globalModels/order';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { AlertController } from '@ionic/angular';\nimport { Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { Observable, from } from 'rxjs';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-order-management',\n  templateUrl: './order-management.page.html',\n  styleUrls: ['./order-management.page.scss'],\n})\n\nexport class OrderManagementPage implements AfterViewInit {\n\n  displayedColumns: string[] = ['timestamp', 'id', 'status', 'actions'];\n  records: MatTableDataSource = new MatTableDataSource([]);\n\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatTable, { static: true }) table: MatTable;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n  constructor(\n    public dialog: MatDialog,\n    private firebase: FirebaseService,\n    private alertController: AlertController,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async ionViewWillEnter() {\n\n  }\n\n  /**\n   * Retrieves orders from the DB and initalizes table.\n   */\n  async ngAfterViewInit() {\n    try {\n      let orders = await this.firebase.getOrders()\n      // orders.sort(function(a, b){\n      //   return b.timestamp.getDate() - a.timestamp.getDate()\n      // })\n      this.records.data = orders\n      this.length = this.records.data.length\n      this.records.paginator = this.paginator;\n      this.records.sort = this.sort;\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n\n  /**\n   * Updates the table based on the value in the filter input\n   * @param event Event emited by filter changing\n   */\n  updateFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Removes an order from the table\n   * @param order Order to be removed\n   */\n  removeItem(order: Order) {\n    //find the index from id\n    let removed = this.records.data.splice(this.records.data.indexOf(order), 1)\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n\n  /**\n   * Opens an alert for the user for confirm if they want to remove an order\n   * @param order Order to be removed\n   */\n  async openAlert(order: Order) {\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => { }\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(order)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param order Order to edit\n   */\n  openEditDialog(order: Order) {\n    const dialogRef = this.dialog.open(EditOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * Opens the order view dialog\n   * @param order Order to view\n   */\n  openViewDialog(order: Order) {\n    const dialogRef = this.dialog.open(ViewOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n}\n\n\n@Component({\n  selector: 'edit-order-dialog',\n  templateUrl: 'edit-order-dialog.html'\n})\n\nexport class EditOrderDialog implements OnInit {\n  values = Object.values(OrderStatus).filter((v) => isNaN(Number(v)))\n  enumvals = Object.values(OrderStatus).filter((v) => !isNaN(Number(v)))\n  value = this.getEnumKey(this.data.status)\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n\n  ngOnInit() {\n\n    // console.log(this.values)\n    // console.log(this.enumvals)\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getEnumKey(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Saves the changes made to an order in the DB (mainly order status)\n   * @param data Order to update in the DB\n   */\n  async saveOrder(data: Order) {\n    console.log(this.value)\n    data.status = this.values.indexOf(this.value) + 1\n    console.log(data.status)\n    try {\n      this.firebaseService.updateOrderStatus(data, data.status)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update order status. Please try again later.', ['Ok'])\n    }\n    \n  }\n}\n\n\n@Component({\n  selector: 'view-order-dialog',\n  templateUrl: 'view-order-dialog.html'\n})\nexport class ViewOrderDialog implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order) { }\n  ngOnInit() {\n\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n}\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      Filter\n      \n    \n\n    \n      \n        Date\n        {{element.timestamp.toLocaleString()}}\n      \n      \n        ID\n        {{element.id}}\n      \n      \n        Status\n        {{getStatus(element.status)}}\n      \n      \n        Actions\n        \n          \n                      \n          \n          \n            \n              View Order\n            \n            \n              Edit Order\n            \n          \n        \n      \n      \n      \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./order-management.page.scss\n                \n                .table-container{\n    height: 100vh\n}\n\n\ntable {\n    width: 100%;\n}\n\n.mat-cell {\n    width: 40%;\n}\n  \n.mat-column-gender {\n    width: 20%;\n}\n\nth.mat-sort-header-sorted {\n    color: black;\n}\n  \n\n.mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.actions {\n    fill: black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Filter                            Date        {{element.timestamp.toLocaleString()}}                    ID        {{element.id}}                    Status        {{getStatus(element.status)}}                    Actions                                                                                      View Order                                      Edit Order                                                              '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderManagementPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderManagementPageModule.html":{"url":"modules/OrderManagementPageModule.html","title":"module - OrderManagementPageModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderManagementPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderManagementPageModule\n\n\n\ncluster_OrderManagementPageModule_imports\n\n\n\ncluster_OrderManagementPageModule_declarations\n\n\n\n\nEditOrderDialog\n\nEditOrderDialog\n\n\n\nOrderManagementPageModule\n\nOrderManagementPageModule\n\nOrderManagementPageModule -->\n\nEditOrderDialog->OrderManagementPageModule\n\n\n\n\n\nOrderManagementPage\n\nOrderManagementPage\n\nOrderManagementPageModule -->\n\nOrderManagementPage->OrderManagementPageModule\n\n\n\n\n\nViewOrderDialog\n\nViewOrderDialog\n\nOrderManagementPageModule -->\n\nViewOrderDialog->OrderManagementPageModule\n\n\n\n\n\nOrderManagementPageRoutingModule\n\nOrderManagementPageRoutingModule\n\nOrderManagementPageModule -->\n\nOrderManagementPageRoutingModule->OrderManagementPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/order-management/order-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditOrderDialog\n                        \n                        \n                            OrderManagementPage\n                        \n                        \n                            ViewOrderDialog\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OrderManagementPageRoutingModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderManagementPageRoutingModule } from './order-management-routing.module';\n\nimport { EditOrderDialog, OrderManagementPage, ViewOrderDialog } from './order-management.page';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrderManagementPageRoutingModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatCardModule\n  ],\n  declarations: [OrderManagementPage, EditOrderDialog, ViewOrderDialog],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n\n})\nexport class OrderManagementPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderManagementPageRoutingModule.html":{"url":"modules/OrderManagementPageRoutingModule.html","title":"module - OrderManagementPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderManagementPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/order-management/order-management-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrderManagementPage } from './order-management.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderManagementPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrderManagementPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pantry.html":{"url":"interfaces/Pantry.html","title":"interface - Pantry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pantry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logoUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            primaryColor\n                                        \n                                \n                                \n                                        \n                                            secondayColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logoUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondayColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondayColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\nexport interface Pantry {\n  name: string\n  logoUrl: string\n  primaryColor: string\n  secondayColor: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PantryStatisticsPage.html":{"url":"components/PantryStatisticsPage.html","title":"component - PantryStatisticsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PantryStatisticsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pantry-statistics/pantry-statistics.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pantry-statistics\n            \n\n            \n                styleUrls\n                ./pantry-statistics.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./pantry-statistics.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endDate\n                            \n                            \n                                fromDate\n                            \n                            \n                                inventory\n                            \n                            \n                                itembyMonth\n                            \n                            \n                                itembyMonthMonths\n                            \n                            \n                                itembyMonthNums\n                            \n                            \n                                    Public\n                                lineChartDataItem\n                            \n                            \n                                    Public\n                                lineChartDataOrders\n                            \n                            \n                                    Public\n                                lineChartLegend\n                            \n                            \n                                    Public\n                                lineChartOptions\n                            \n                            \n                                ordersByMonth\n                            \n                            \n                                ordersByMonthMonths\n                            \n                            \n                                ordersByMonthNums\n                            \n                            \n                                selectedFoodItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertItemByMonth\n                            \n                            \n                                convertOrdersByMonth\n                            \n                            \n                                endDateChange\n                            \n                            \n                                fromDateChange\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                selectChange\n                            \n                            \n                                updateItemChart\n                            \n                            \n                                updateItemGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(forecaster: ForecastService, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:132\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        forecaster\n                                                  \n                                                        \n                                                                        ForecastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertItemByMonth\n                        \n                    \n                \n            \n            \n                \nconvertItemByMonth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:38\n                \n            \n\n\n            \n                \n                    Separates data into arrays for display in charts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertOrdersByMonth\n                        \n                    \n                \n            \n            \n                \nconvertOrdersByMonth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:69\n                \n            \n\n\n            \n                \n                    Separates data into arrays for display in charts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDateChange\n                        \n                    \n                \n            \n            \n                \nendDateChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:55\n                \n            \n\n\n            \n                \n                    DEBUG method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fromDateChange\n                        \n                    \n                \n            \n            \n                \nfromDateChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:48\n                \n            \n\n\n            \n                \n                    DEBUG method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:143\n                \n            \n\n\n            \n                \n                    Initializes Charts and Data\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectChange\n                        \n                    \n                \n            \n            \n                \nselectChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:62\n                \n            \n\n\n            \n                \n                    DEBUG method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemChart\n                        \n                    \n                \n            \n            \n                \nupdateItemChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:79\n                \n            \n\n\n            \n                \n                    Updates the item by month chart with proper data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemGraph\n                        \n                    \n                \n            \n            \n                \nupdateItemGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pantry-statistics/pantry-statistics.page.ts:98\n                \n            \n\n\n            \n                \n                    Updates data when the user presses submit on \"item by month\" graph\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fromDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inventory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FoodItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itembyMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimestampedItems[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itembyMonthMonths\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itembyMonthNums\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineChartDataItem\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineChartDataOrders\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineChartLegend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lineChartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    responsive: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersByMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TimestampedOrders[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersByMonthMonths\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersByMonthNums\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFoodItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pantry-statistics/pantry-statistics.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ChartConfiguration, ChartOptions, ChartType } from \"chart.js\";\nimport { ForecastService } from '../services/forecast.service';\nimport { FirebaseService } from '../services/firebase.service';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { AlertService } from '../services/alert.service';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\n\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n@Component({\n  selector: 'app-pantry-statistics',\n  templateUrl: './pantry-statistics.page.html',\n  styleUrls: ['./pantry-statistics.page.scss'],\n})\nexport class PantryStatisticsPage implements OnInit {\n  fromDate = \"\"\n  endDate = \"\"\n  inventory: FoodItem[]\n  selectedFoodItem: string\n  ordersByMonth: TimestampedOrders[]\n  ordersByMonthMonths: string[] = []\n  ordersByMonthNums: number[] = []\n  itembyMonth: TimestampedItems[]\n  itembyMonthMonths: string[] = []\n  itembyMonthNums: number[] = []\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertItemByMonth() {\n    this.itembyMonth.forEach(element => {\n      this.itembyMonthMonths.push(element.month)\n      this.itembyMonthNums.push(element.items)\n    })\n  }\n\n  /**\n   * DEBUG method\n   */\n  fromDateChange() {\n    // console.log(this.fromDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  endDateChange() {\n    // console.log(this.endDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  selectChange() {\n    // console.log(this.selectedFoodItem)\n  }\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertOrdersByMonth() {\n    this.ordersByMonth.forEach(element => {\n      this.ordersByMonthMonths.push(element.month)\n      this.ordersByMonthNums.push(element.orders)\n    })\n  }\n\n  /**\n   * Updates the item by month chart with proper data.\n   */\n  updateItemChart() {\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n  }\n\n  /**\n   * Updates data when the user presses submit on \"item by month\" graph\n   */\n  updateItemGraph() {\n    this.itembyMonth = []\n    this.itembyMonthNums = []\n    this.itembyMonthMonths = []\n    console.log(\"submit clicked\")\n    if(this.selectedFoodItem){\n      let fromDateObj = new Date(this.fromDate)\n      let endDateObj\n      if(this.endDate) {\n        endDateObj = new Date(this.endDate)\n      } else {\n        endDateObj = new Date()\n      }\n      console.log(fromDateObj.getMonth())\n      console.log(endDateObj.getMonth())\n      \n      if(fromDateObj.getMonth() ['data']\n  public lineChartDataItem: ChartConfiguration['data']\n  public lineChartOptions: ChartOptions = {\n    responsive: true\n  };\n  public lineChartLegend = true;\n\n  constructor(\n    private forecaster: ForecastService, \n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n  \n  /**\n   * Initializes Charts and Data\n   */\n  async ngOnInit() {\n    try {\n      let pantry = await this.firebaseService.getPantry()\n      this.inventory = await this.firebaseService.getInventory()\n      let orders = await this.firebaseService.getOrders()\n      this.forecaster.setData(pantry, this.inventory, orders)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n    \n\n   \n    console.log(\"Getting number of orders by month\")\n    this.ordersByMonth = this.forecaster.getNumOrderByMonth()\n    console.log(this.forecaster.getNumOrderByMonth())\n    this.convertOrdersByMonth()\n    this.lineChartDataOrders = {\n      labels: this.ordersByMonthMonths,\n      datasets: [\n        {\n          data:this.ordersByMonthNums,\n          label: 'Orders',\n          fill: true,\n          tension: 0.5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(255,0,0,0.3)'\n        }\n      ]\n    };\n\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n    console.log(\"Searching for bread demand by month\")\n    console.log(this.forecaster.getItemDemandByMonth(\"bread\"))\n\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n       Orders by Month:\n      \n    \n    \n    \n    \n    \n      Demand by Month for an Item:\n      \n        \n          \n            \n              {{item.name}}\n            \n          \n          Start Date:\n          \n          End Date:\n          \n          Submit\n        \n      \n    \n    \n    \n    \n  \n \n\n    \n\n    \n                \n                    ./pantry-statistics.page.scss\n                \n                ion-col {\n    background-color: var( --ion-color-primary-contrast);\n    border: solid 1px #fff;\n    color: #fff;\n    text-align: center;\n}\n\n\n.center {\n    display: flex;\n    flex-direction: column;\n    padding-top: 2em;\n    padding-left: 1em;\n    padding-right: 1em;\n    width: 100%;\n    justify-content: center;\n    justify-items: center;\n\n    .horizontal-container {\n        justify-content: center;\n        width: 100%;\n        display: flex;\n        flex-wrap: wrap;\n        flex-direction: row;\n\n        .logo {\n            text-align: center;\n\n            img {\n                min-width: 50px;\n                max-width: 300px;\n            }\n        }\n\n        .login {\n            margin-left: 20px;\n            text-align: center;\n\n            .inputs {\n                text-align: left !important;\n\n                ion-item {\n                    padding-top: 10px;\n                }\n            }\n\n            ion-button {\n                width: 100%;\n                padding: 0px;\n                margin: 0px;\n            }\n        }\n    }\n\n    ion-button {\n        width: 100%;\n        max-width: 36em;\n    }\n}\n\n\n.chart {\n    height: 50rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                               Orders by Month:                                Demand by Month for an Item:                                                  {{item.name}}                                Start Date:                    End Date:                    Submit                                 '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PantryStatisticsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PantryStatisticsPageModule.html":{"url":"modules/PantryStatisticsPageModule.html","title":"module - PantryStatisticsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PantryStatisticsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PantryStatisticsPageModule\n\n\n\ncluster_PantryStatisticsPageModule_declarations\n\n\n\ncluster_PantryStatisticsPageModule_imports\n\n\n\n\nPantryStatisticsPage\n\nPantryStatisticsPage\n\n\n\nPantryStatisticsPageModule\n\nPantryStatisticsPageModule\n\nPantryStatisticsPageModule -->\n\nPantryStatisticsPage->PantryStatisticsPageModule\n\n\n\n\n\nPantryStatisticsPageRoutingModule\n\nPantryStatisticsPageRoutingModule\n\nPantryStatisticsPageModule -->\n\nPantryStatisticsPageRoutingModule->PantryStatisticsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pantry-statistics/pantry-statistics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PantryStatisticsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PantryStatisticsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PantryStatisticsPageRoutingModule } from './pantry-statistics-routing.module';\n\nimport { PantryStatisticsPage } from './pantry-statistics.page';\nimport { NgChartsModule } from 'ng2-charts';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PantryStatisticsPageRoutingModule,\n    NgChartsModule\n  ],\n  declarations: [PantryStatisticsPage]\n})\nexport class PantryStatisticsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PantryStatisticsPageRoutingModule.html":{"url":"modules/PantryStatisticsPageRoutingModule.html","title":"module - PantryStatisticsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PantryStatisticsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pantry-statistics/pantry-statistics-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PantryStatisticsPage } from './pantry-statistics.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PantryStatisticsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PantryStatisticsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Private\n                                iConStyle\n                            \n                            \n                                    Private\n                                iContentRef\n                            \n                            \n                                pantry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openEditDetailsDialog\n                            \n                            \n                                updateColors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService, dialog: MatDialog, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:31\n                \n            \n\n\n            \n                \n                    Gets pantry data on page init\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDetailsDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDetailsDialog(data: Pantry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:45\n                \n            \n\n\n            \n                \n                    Opens the Pantry edit dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Pantry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pantry to Edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateColors\n                        \n                    \n                \n            \n            \n                \nupdateColors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.page.ts:55\n                \n            \n\n\n            \n                \n                    Updates UI Colors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatMenuTrigger)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iConStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CSSStyleDeclaration\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iContentRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('iContent', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pantry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pantry\n\n                    \n                \n                \n                    \n                        Default value : new Pantry('id', 'name', 'desc', 'address', 'logo', 'red', 'black', 2, [], [], [])\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { FirebaseService } from '../services/firebase.service';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { IonContent } from '@ionic/angular';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n\n  pantry: Pantry = new Pantry('id', 'name', 'desc', 'address', 'logo', 'red', 'black', 2, [], [], [])\n  @ViewChild (MatMenuTrigger) actions: MatMenuTrigger\n\n  @ViewChild('iContent', {static: true})\n  private iContentRef: ElementRef\n  private iConStyle: CSSStyleDeclaration\n  constructor(\n    private firebase: FirebaseService,\n    public dialog: MatDialog,\n    private alertService: AlertService\n  ) { }\n\n  /**\n   * Gets pantry data on page init\n   */\n  async ngOnInit() {\n    try {\n      this.pantry = await this.firebase.getPantry()\n      console.log(this.pantry)\n      this.updateColors()\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n  }\n\n  /**\n   * Opens the Pantry edit dialog\n   * @param data Pantry to Edit\n   */\n  openEditDetailsDialog(data: Pantry){\n    const dialogRef = this.dialog.open(EditDetailsDialog, {restoreFocus: false, data: data});\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n    });\n  }\n\n  /**\n   * Updates UI Colors\n   */\n  updateColors(){\n    document.body.style.setProperty('--ion-color-primary', this.pantry.primaryColor)\n    document.body.style.setProperty('--ion-color-primary-contrast', this.pantry.secondaryColor)\n  }\n\n}\n\n@Component({\n  selector: 'edit-details-dialog',\n  templateUrl: 'edit-details-dialog.html'\n}) export class EditDetailsDialog implements OnInit {\n  public name: string = this.data.name\n  public description: string = this.data.desc\n  public address: string = this.data.address\n  public icon: string = this.data.logoUrl\n  public primary: string = this.data.primaryColor\n  public secondary: string = this.data.secondaryColor\n  public maxOrder: number = this.data.orderLimit\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Pantry,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n  ){}\n\n  ngOnInit(): void {\n    // console.log(this.data)\n  }\n\n  /**\n   * Saves the pantry data that is changed in the edit dialog\n   */\n  async saveData(){\n    let pantry: Pantry = {\n      \"name\": this.name,\n      \"id\": this.data.id,\n      \"desc\": this.description,\n      \"address\": this.address,\n      \"logoUrl\": this.icon,\n      \"primaryColor\": this.primary,\n      \"secondaryColor\": this.secondary,\n      \"orderLimit\": this.maxOrder\n    }\n    this.data.name = this.name\n    this.data.desc = this.description\n    this.data.address = this.address\n    this.data.logoUrl = this.icon\n    this.data.primaryColor = this.primary\n    this.data.secondaryColor = this.secondary\n    this.data.orderLimit = this.maxOrder\n    try {\n      await this.firebaseService.updatePantry(pantry)\n      this.updateColors()\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n  /**\n   * Updates UI Colors\n   */\n  updateColors(){\n    document.body.style.setProperty('--ion-color-primary', this.data.primaryColor)\n    document.body.style.setProperty('--ion-color-primary-contrast', this.data.secondaryColor)\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      Pantry Details\n      \n        \n          Edit Details\n      \n    \n    \n      Pantry Name\n      {{pantry.name}}\n    \n    \n      Description\n      {{pantry.desc}}\n    \n    \n      Address\n      {{pantry.address}}\n    \n    \n      Icon\n      \n    \n    \n      Theme Colors\n      \n        \n          Primary: {{pantry.primaryColor}} \n        \n        \n          Secondary: {{pantry.secondaryColor}}\n        \n      \n    \n    \n      Weekly Max Order\n      {{pantry.orderLimit}}\n    \n  \n  \n\n\n  \n    App Version: 0.0.1\n  \n\n    \n\n    \n                \n                    ./profile.page.scss\n                \n                @import \"../../global.scss\";\n\nion-header {\n  ion-toolbar {\n    ion-title {\n      padding: 10px;\n      margin: 10px;\n    }\n    ion-button {\n      float: right;\n    }\n  }\n}\n\nion-content {\n  .logo{\n    width: 75px;\n    height: 75px;\n  }\n  ion-grid {\n      --ion-grid-column-padding: 10px;\n      border-collapse: collapse;\n      border-style: hidden;\n      \n      ion-row:first-child {\n        font-weight: bold;\n      }\n      ion-col {\n        border: 1px solid white;\n        border-bottom: 0;\n        border-right: 0;\n      }\n      ion-col:last-child {\n        border-right: 1px solid white;\n      }\n      \n      ion-row:last-child {\n        border-bottom: 1px solid white;\n      }\n    }\n    ion-button {\n      width: 100%;\n      padding: 1px;\n      margin: 1px;\n      --color: white;\n    }\n\n    .primary-color {\n      fill: var(--ion-color-primary);\n    }\n\n    .secondary-color { \n      fill: var(--ion-color-primary-contrast);\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Pantry Details                        Edit Details                    Pantry Name      {{pantry.name}}              Description      {{pantry.desc}}              Address      {{pantry.address}}              Icon                    Theme Colors                        Primary: {{pantry.primaryColor}}                           Secondary: {{pantry.secondaryColor}}                            Weekly Max Order      {{pantry.orderLimit}}              App Version: 0.0.1  '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageModule.html":{"url":"modules/ProfilePageModule.html","title":"module - ProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\n\nEditDetailsDialog\n\nEditDetailsDialog\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nEditDetailsDialog->ProfilePageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditDetailsDialog\n                        \n                        \n                            ProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfilePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { EditDetailsDialog, ProfilePage } from './profile.page';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport {MatInputModule} from '@angular/material/input';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule,\n    MatDialogModule,\n    ColorPickerModule,\n    MatInputModule\n  ],\n  declarations: [ProfilePage, EditDetailsDialog]\n})\nexport class ProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageRoutingModule.html":{"url":"modules/ProfilePageRoutingModule.html","title":"module - ProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampedItems.html":{"url":"interfaces/TimestampedItems.html","title":"interface - TimestampedItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampedItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pantry-statistics/pantry-statistics.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            month\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ChartConfiguration, ChartOptions, ChartType } from \"chart.js\";\nimport { ForecastService } from '../services/forecast.service';\nimport { FirebaseService } from '../services/firebase.service';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { AlertService } from '../services/alert.service';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\n\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n@Component({\n  selector: 'app-pantry-statistics',\n  templateUrl: './pantry-statistics.page.html',\n  styleUrls: ['./pantry-statistics.page.scss'],\n})\nexport class PantryStatisticsPage implements OnInit {\n  fromDate = \"\"\n  endDate = \"\"\n  inventory: FoodItem[]\n  selectedFoodItem: string\n  ordersByMonth: TimestampedOrders[]\n  ordersByMonthMonths: string[] = []\n  ordersByMonthNums: number[] = []\n  itembyMonth: TimestampedItems[]\n  itembyMonthMonths: string[] = []\n  itembyMonthNums: number[] = []\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertItemByMonth() {\n    this.itembyMonth.forEach(element => {\n      this.itembyMonthMonths.push(element.month)\n      this.itembyMonthNums.push(element.items)\n    })\n  }\n\n  /**\n   * DEBUG method\n   */\n  fromDateChange() {\n    // console.log(this.fromDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  endDateChange() {\n    // console.log(this.endDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  selectChange() {\n    // console.log(this.selectedFoodItem)\n  }\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertOrdersByMonth() {\n    this.ordersByMonth.forEach(element => {\n      this.ordersByMonthMonths.push(element.month)\n      this.ordersByMonthNums.push(element.orders)\n    })\n  }\n\n  /**\n   * Updates the item by month chart with proper data.\n   */\n  updateItemChart() {\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n  }\n\n  /**\n   * Updates data when the user presses submit on \"item by month\" graph\n   */\n  updateItemGraph() {\n    this.itembyMonth = []\n    this.itembyMonthNums = []\n    this.itembyMonthMonths = []\n    console.log(\"submit clicked\")\n    if(this.selectedFoodItem){\n      let fromDateObj = new Date(this.fromDate)\n      let endDateObj\n      if(this.endDate) {\n        endDateObj = new Date(this.endDate)\n      } else {\n        endDateObj = new Date()\n      }\n      console.log(fromDateObj.getMonth())\n      console.log(endDateObj.getMonth())\n      \n      if(fromDateObj.getMonth() ['data']\n  public lineChartDataItem: ChartConfiguration['data']\n  public lineChartOptions: ChartOptions = {\n    responsive: true\n  };\n  public lineChartLegend = true;\n\n  constructor(\n    private forecaster: ForecastService, \n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n  \n  /**\n   * Initializes Charts and Data\n   */\n  async ngOnInit() {\n    try {\n      let pantry = await this.firebaseService.getPantry()\n      this.inventory = await this.firebaseService.getInventory()\n      let orders = await this.firebaseService.getOrders()\n      this.forecaster.setData(pantry, this.inventory, orders)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n    \n\n   \n    console.log(\"Getting number of orders by month\")\n    this.ordersByMonth = this.forecaster.getNumOrderByMonth()\n    console.log(this.forecaster.getNumOrderByMonth())\n    this.convertOrdersByMonth()\n    this.lineChartDataOrders = {\n      labels: this.ordersByMonthMonths,\n      datasets: [\n        {\n          data:this.ordersByMonthNums,\n          label: 'Orders',\n          fill: true,\n          tension: 0.5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(255,0,0,0.3)'\n        }\n      ]\n    };\n\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n    console.log(\"Searching for bread demand by month\")\n    console.log(this.forecaster.getItemDemandByMonth(\"bread\"))\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampedItems-1.html":{"url":"interfaces/TimestampedItems-1.html","title":"interface - TimestampedItems-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampedItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/forecast.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            month\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { FoodItem } from '../../../../globalModels/foodItem'\nimport { Order } from '../../../../globalModels/order'\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { FirebaseService } from './firebase.service';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ForecastService {\n\n  pantry: Pantry\n  inventory: FoodItem[]\n  orders: Order[]\n\n  constructor() {\n\n  }\n\n  /**\n   * Sets starting data\n   * @param dataPantry \n   * @param dataInventory \n   * @param dataOrders \n   */\n  setData(dataPantry: Pantry, dataInventory: FoodItem[], dataOrders: Order[]) {\n    this.pantry = dataPantry\n    this.inventory = dataInventory\n    this.orders = dataOrders\n  }\n  /**\n   * Returns the total numbers of orders for a given pantry\n   * @param type optional OrderStatus stating the desired OrderStatus\n   * @returns number of orders, optionally of a type\n   */\n  getNumOrder(type?: OrderStatus): number {\n    let retval = 0\n    if (type) {\n      this.orders.forEach(order => {\n        if (order.status === type) {\n          retval += 1\n        }\n      });\n    }\n    else if (this.orders) {\n      retval = this.orders?.length\n    }\n    return retval\n  }\n\n  /**\n   * Gets a list of all food items of order types not cancelled or picked up\n   * @returns FoodItem list of all active items\n   */\n  getOutstandingItems(): FoodItem[] {\n    let retval: FoodItem[] = []\n    this.orders.forEach(order => {\n      if (order.status === OrderStatus.Processing) {\n        retval = retval.concat(order.items)\n      }\n    });\n    return retval\n  }\n\n  /**\n   * Sorts a list of orders by datetime\n   * @param orders The orderlist to be sorted\n   */\n  sortOrdersByDate(orders: Order[]) {\n    orders.sort((a: Order, b: Order) => {\n      return (- a.timestamp.getTime() + b.timestamp.getTime())\n    })\n  }\n\n  /**\n   * Returns a list of orders that have been filled \n   * @returns Order[] of filled orders\n   */\n  getOrderHistory(): Order[] {\n    let retval: Order[] = []\n    this.orders.forEach(order => {\n      if (order.status === OrderStatus['Order Picked Up'])\n        retval.push(order)\n    });\n    this.sortOrdersByDate(retval)\n    return retval\n  }\n\n  /**\n   * For a list of food items, returns the number of occurences for that item\n   * @param list The list of food items\n   * @param itemName The item name\n   * @returns number of occurences in the foodlist\n   */\n  getNumItemOccurrences(list: FoodItem[], itemName: string): number {\n    let counter: number = 0\n    list.forEach(item => {\n      if (item.name === itemName) {\n        counter += item.quantity\n      }\n    });\n    return counter\n  }\n\n  /**\n   * Creates a list of all food items in a given order list\n   * @param orders The orders to parse\n   * @returns The full list of items from an order list\n   */\n  getItemsFromOrders(orders: Order[]) {\n    let retval: FoodItem[] = []\n    orders.forEach(order => {\n      retval = retval.concat(order.items)\n    });\n    return retval\n  }\n\n  /**\n   * Returns a list of lists where sublist are the orders for a given month\n   * @returns History list of lists \n   */\n  orderHistoryByMonth() {\n    let retval: Order[][] = []\n    let history = this.getOrderHistory()\n    let i: number = 0\n    this.sortOrdersByDate(history)\n\n    history.forEach(order => {\n      if (retval.length === 0) {\n        retval.push([order])\n      }\n      else if (order.timestamp.getMonth() === retval[i][0].timestamp.getMonth()\n        && order.timestamp.getFullYear() === retval[i][0].timestamp.getFullYear()) {\n        retval[i].push(order)\n      }\n      else {\n        retval.push([order])\n        i += 1\n      }\n    });\n    return retval.reverse()\n  }\n\n  /**\n   * Reshapes an order list to a list of order lists by month\n   * @param orderList The list of orders\n   * @returns List of order lists by month\n   */\n  sortOrderListByMonth(orderList: Order[]) {\n    let retval: Order[][] = []\n    let i: number = 0\n    this.sortOrdersByDate(orderList)\n\n    orderList.forEach(order => {\n      if (retval.length === 0) {\n        retval.push([order])\n      }\n      else if (order.timestamp.getMonth() === retval[i][0].timestamp.getMonth()\n        && order.timestamp.getFullYear() === retval[i][0].timestamp.getFullYear()) {\n        retval[i].push(order)\n      }\n      else {\n        retval.push([order])\n        i += 1\n      }\n    });\n    return retval\n  }\n\n  /**\n   * Returns a list containing the number of orders by month\n   * @returns List of numbers of orders by month\n   */\n  getNumOrderByMonth() {\n    let retval: TimestampedOrders[] = []\n    let history = this.orderHistoryByMonth()\n    history.forEach(orderList => {\n      retval.push({\n        \"orders\": orderList.length,\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'})\n      })\n    });\n    return retval\n  }\n\n  /**\n   * Returns a list of the number of item occurences by month\n   * @param itemName The name of the item to query\n   */\n  getItemDemandByMonth(itemName: string) {\n    let retval: TimestampedItems[] = []\n    let history = this.orderHistoryByMonth()\n    history.forEach(orderList => {\n      let sum: number = 0\n      orderList.forEach(order => {\n        sum += this.getNumItemOccurrences(order.items, itemName)\n      });\n      retval.push({\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'}),\n        \"items\": sum\n      })\n    })\n    return retval\n  }\n\n  /**\n   * Returns a list of timestamped items within a date range\n   * @param itemName The name of the item to search for\n   * @param start The start date of the range\n   * @param end The end date of the range\n   * @returns List of timestamped items\n   */\n  getItemDemandInRange(itemName:string, start:Date, end:Date) {\n    let retval: TimestampedItems[] = []\n    let history = this.getOrderHistory()\n\n    let cut = this.getOrdersInDateRange(history, start, end)\n    let cutReshaped = this.sortOrderListByMonth(cut)\n\n    cutReshaped.forEach(orderList => {\n      let sum: number = 0\n      orderList.forEach(order => {\n        sum += this.getNumItemOccurrences(order.items, itemName)\n      });\n      retval.push({\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'}),\n        \"items\": sum\n      })\n    })\n    return retval\n  }\n\n  /**\n   * Returns the list of orders within a given range\n   * @param orderList The list of orders to parse\n   * @param start The start date of the range\n   * @param end The end date of the range\n   * @returns The list of orders falling within the range\n   */\n  getOrdersInDateRange(orderList: Order[], start: Date, end: Date) {\n    let retval: Order[] = []\n    orderList.forEach(order => {\n      if (order.timestamp.getTime() >= start.getTime() && order.timestamp.getTime()  {\n        i++\n        a += i * element\n        b += i\n        c += element\n        d += i ** 2\n      });\n\n      return (n * (a) - b * c) / (n * d - (b ** 2))\n    }\n  }\n\n  //FORECASTING AND PREDICTION FUNCTIONS\n\n  /**\n   * Computes the current month order demand percent difference to previous year order demand\n   * @returns The percent difference in current year order demand to previous year order demand\n   */\n  prevYearDiff() {\n    let history = this.getOrderHistory()\n    let t2 = new Date()\n    let t1 = this.calcPrevDate(t2, 1)\n    let t3 = this.calcPrevDate(t2, 13)\n    let t4 = this.calcPrevDate(t2, 12)\n    let period1 = this.getOrdersInDateRange(history, t1, t2)\n    let period2 = this.getOrdersInDateRange(history, t3, t4)\n\n    if (period2.length == 0) {\n      return 0\n    }\n\n    return (period1.length - period2.length) / period2.length\n  }\n\n  /**\n   * Computes the current month item demand percent difference compared to previous year\n   * @param itemName The name of the item to parse\n   * @returns The percent difference of current to previous year item demand\n   */\n  prevYearItemDiff(itemName: string) {\n    let history = this.getOrderHistory()\n    let t2 = new Date()\n    let t1 = this.calcPrevDate(t2, 1)\n    let t3 = this.calcPrevDate(t2, 13)\n    let t4 = this.calcPrevDate(t2, 12)\n    let period1 = this.getOrdersInDateRange(history, t1, t2)\n    let period2 = this.getOrdersInDateRange(history, t3, t4)\n\n    let currentDemand = this.getNumItemOccurrences(this.getItemsFromOrders(period1), itemName)\n    let previousDemand = this.getNumItemOccurrences(this.getItemsFromOrders(period2), itemName)\n\n    if (previousDemand == 0) {\n      return 0\n    }\n\n    return (currentDemand - previousDemand) / previousDemand\n  }\n\n  /**\n   * Returns The linear regression of total order frequency trend on a monthly basis for n months\n   * @param n The number of months n to compute the linear regression on\n   * @returns A trend, positive or negative, corresponding to the desired period\n   */\n  getXMonthTrend(n: number): number {\n    let history = this.getOrderHistory()\n    let now = new Date()\n    let then = this.calcPrevDate(now, n)\n    let cut = this.getOrdersInDateRange(history, then, now)\n    let i: number = 0\n\n    let buckets: number[] = []\n    let curMonth: number = 0\n\n    cut.forEach(order => {\n      if (buckets.length == 0) {\n        buckets = [1]\n        curMonth = order.timestamp.getMonth()\n      }\n      else if (order.timestamp.getMonth() == curMonth) {\n        buckets[i] += 1\n      }\n      else {\n        buckets.push(1)\n        curMonth = order.timestamp.getMonth()\n        i++\n      }\n    });\n\n    // Negation a result of most recent months occurring at front of array\n    return -this.calcLinearRegression(buckets)\n  }\n\n  /**\n   * Returns The linear regression of item frequency trend on a monthly basis for n months\n   * @param n The number of months n to compute the linear regression on\n   * @param itemName The name of the item to parse for\n   * @returns A trend, positive or negative, corresponding to the desired period\n   */\n  getXMonthItemTrend(n: number, itemName: string): number {\n    let history = this.getOrderHistory()\n    let now = new Date()\n    let then = this.calcPrevDate(now, n)\n    let cut = this.getOrdersInDateRange(history, then, now)\n    let i: number = 0\n\n    let buckets: number[] = []\n    let curMonth: number = 0\n\n    cut.forEach(order => {\n      if (buckets.length == 0) {\n        buckets = [this.getNumItemOccurrences(order.items, itemName)]\n        curMonth = order.timestamp.getMonth()\n      }\n      else if (order.timestamp.getMonth() == curMonth) {\n        buckets[i] += this.getNumItemOccurrences(order.items, itemName)\n      }\n      else {\n        buckets.push(this.getNumItemOccurrences(order.items, itemName))\n        curMonth = order.timestamp.getMonth()\n        i++\n      }\n    });\n    // Negation a result of most recent months occurring at front of array\n    return -this.calcLinearRegression(buckets)\n  }\n\n  /**\n   * Computes the 1 Dimensional Convolution of an array with a kernel\n   * @note Uses average padding\n   * @param array The array to be convolved\n   * @param kernel The kernel to convolve with\n   * @param norm The normalization factor of the convolution\n   * @returns The result of the convolution, an array of numbers\n   */\n  convolve1D(array: number[], kernel: number[], norm: number): number[] {\n    let copy = []\n    let retval = []\n    let avg = 0\n\n    array.forEach(num => {\n      copy.push(num)\n      avg += num\n    });\n\n    avg /= array.length\n    let paddingNum = (kernel.length / 2) | 0\n\n    for (let i = 0; i  {\n      demandHist.push(element.orders)\n    })\n    return this.convolve1D(demandHist, [-1, -2, 0, 2, 1], 6)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampedOrders.html":{"url":"interfaces/TimestampedOrders.html","title":"interface - TimestampedOrders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampedOrders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pantry-statistics/pantry-statistics.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            month\n                                        \n                                \n                                \n                                        \n                                            orders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orders:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ChartConfiguration, ChartOptions, ChartType } from \"chart.js\";\nimport { ForecastService } from '../services/forecast.service';\nimport { FirebaseService } from '../services/firebase.service';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { AlertService } from '../services/alert.service';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\n\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n@Component({\n  selector: 'app-pantry-statistics',\n  templateUrl: './pantry-statistics.page.html',\n  styleUrls: ['./pantry-statistics.page.scss'],\n})\nexport class PantryStatisticsPage implements OnInit {\n  fromDate = \"\"\n  endDate = \"\"\n  inventory: FoodItem[]\n  selectedFoodItem: string\n  ordersByMonth: TimestampedOrders[]\n  ordersByMonthMonths: string[] = []\n  ordersByMonthNums: number[] = []\n  itembyMonth: TimestampedItems[]\n  itembyMonthMonths: string[] = []\n  itembyMonthNums: number[] = []\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertItemByMonth() {\n    this.itembyMonth.forEach(element => {\n      this.itembyMonthMonths.push(element.month)\n      this.itembyMonthNums.push(element.items)\n    })\n  }\n\n  /**\n   * DEBUG method\n   */\n  fromDateChange() {\n    // console.log(this.fromDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  endDateChange() {\n    // console.log(this.endDate)\n  }\n\n  /**\n   * DEBUG method\n   */\n  selectChange() {\n    // console.log(this.selectedFoodItem)\n  }\n\n  /**\n   * Separates data into arrays for display in charts\n   */\n  convertOrdersByMonth() {\n    this.ordersByMonth.forEach(element => {\n      this.ordersByMonthMonths.push(element.month)\n      this.ordersByMonthNums.push(element.orders)\n    })\n  }\n\n  /**\n   * Updates the item by month chart with proper data.\n   */\n  updateItemChart() {\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n  }\n\n  /**\n   * Updates data when the user presses submit on \"item by month\" graph\n   */\n  updateItemGraph() {\n    this.itembyMonth = []\n    this.itembyMonthNums = []\n    this.itembyMonthMonths = []\n    console.log(\"submit clicked\")\n    if(this.selectedFoodItem){\n      let fromDateObj = new Date(this.fromDate)\n      let endDateObj\n      if(this.endDate) {\n        endDateObj = new Date(this.endDate)\n      } else {\n        endDateObj = new Date()\n      }\n      console.log(fromDateObj.getMonth())\n      console.log(endDateObj.getMonth())\n      \n      if(fromDateObj.getMonth() ['data']\n  public lineChartDataItem: ChartConfiguration['data']\n  public lineChartOptions: ChartOptions = {\n    responsive: true\n  };\n  public lineChartLegend = true;\n\n  constructor(\n    private forecaster: ForecastService, \n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n  \n  /**\n   * Initializes Charts and Data\n   */\n  async ngOnInit() {\n    try {\n      let pantry = await this.firebaseService.getPantry()\n      this.inventory = await this.firebaseService.getInventory()\n      let orders = await this.firebaseService.getOrders()\n      this.forecaster.setData(pantry, this.inventory, orders)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n    \n\n   \n    console.log(\"Getting number of orders by month\")\n    this.ordersByMonth = this.forecaster.getNumOrderByMonth()\n    console.log(this.forecaster.getNumOrderByMonth())\n    this.convertOrdersByMonth()\n    this.lineChartDataOrders = {\n      labels: this.ordersByMonthMonths,\n      datasets: [\n        {\n          data:this.ordersByMonthNums,\n          label: 'Orders',\n          fill: true,\n          tension: 0.5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(255,0,0,0.3)'\n        }\n      ]\n    };\n\n    this.lineChartDataItem = {\n      labels: this.itembyMonthMonths,\n      datasets: [\n        {\n          data: this.itembyMonthNums,\n          label: this.selectedFoodItem?this.selectedFoodItem:\"\",\n          fill: true,\n          tension: .5,\n          borderColor: 'black',\n          backgroundColor: 'rgba(0,255,0,0.3)'\n        }\n      ]\n    }\n    console.log(\"Searching for bread demand by month\")\n    console.log(this.forecaster.getItemDemandByMonth(\"bread\"))\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampedOrders-1.html":{"url":"interfaces/TimestampedOrders-1.html","title":"interface - TimestampedOrders-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampedOrders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/forecast.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            month\n                                        \n                                \n                                \n                                        \n                                            orders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        month:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orders:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { FoodItem } from '../../../../globalModels/foodItem'\nimport { Order } from '../../../../globalModels/order'\nimport { Pantry } from '../../../../globalModels/pantry'\nimport { FirebaseService } from './firebase.service';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\n\n\ninterface TimestampedOrders {\n  orders: number\n  month: string\n}\ninterface TimestampedItems {\n  items: number\n  month: string\n}\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ForecastService {\n\n  pantry: Pantry\n  inventory: FoodItem[]\n  orders: Order[]\n\n  constructor() {\n\n  }\n\n  /**\n   * Sets starting data\n   * @param dataPantry \n   * @param dataInventory \n   * @param dataOrders \n   */\n  setData(dataPantry: Pantry, dataInventory: FoodItem[], dataOrders: Order[]) {\n    this.pantry = dataPantry\n    this.inventory = dataInventory\n    this.orders = dataOrders\n  }\n  /**\n   * Returns the total numbers of orders for a given pantry\n   * @param type optional OrderStatus stating the desired OrderStatus\n   * @returns number of orders, optionally of a type\n   */\n  getNumOrder(type?: OrderStatus): number {\n    let retval = 0\n    if (type) {\n      this.orders.forEach(order => {\n        if (order.status === type) {\n          retval += 1\n        }\n      });\n    }\n    else if (this.orders) {\n      retval = this.orders?.length\n    }\n    return retval\n  }\n\n  /**\n   * Gets a list of all food items of order types not cancelled or picked up\n   * @returns FoodItem list of all active items\n   */\n  getOutstandingItems(): FoodItem[] {\n    let retval: FoodItem[] = []\n    this.orders.forEach(order => {\n      if (order.status === OrderStatus.Processing) {\n        retval = retval.concat(order.items)\n      }\n    });\n    return retval\n  }\n\n  /**\n   * Sorts a list of orders by datetime\n   * @param orders The orderlist to be sorted\n   */\n  sortOrdersByDate(orders: Order[]) {\n    orders.sort((a: Order, b: Order) => {\n      return (- a.timestamp.getTime() + b.timestamp.getTime())\n    })\n  }\n\n  /**\n   * Returns a list of orders that have been filled \n   * @returns Order[] of filled orders\n   */\n  getOrderHistory(): Order[] {\n    let retval: Order[] = []\n    this.orders.forEach(order => {\n      if (order.status === OrderStatus['Order Picked Up'])\n        retval.push(order)\n    });\n    this.sortOrdersByDate(retval)\n    return retval\n  }\n\n  /**\n   * For a list of food items, returns the number of occurences for that item\n   * @param list The list of food items\n   * @param itemName The item name\n   * @returns number of occurences in the foodlist\n   */\n  getNumItemOccurrences(list: FoodItem[], itemName: string): number {\n    let counter: number = 0\n    list.forEach(item => {\n      if (item.name === itemName) {\n        counter += item.quantity\n      }\n    });\n    return counter\n  }\n\n  /**\n   * Creates a list of all food items in a given order list\n   * @param orders The orders to parse\n   * @returns The full list of items from an order list\n   */\n  getItemsFromOrders(orders: Order[]) {\n    let retval: FoodItem[] = []\n    orders.forEach(order => {\n      retval = retval.concat(order.items)\n    });\n    return retval\n  }\n\n  /**\n   * Returns a list of lists where sublist are the orders for a given month\n   * @returns History list of lists \n   */\n  orderHistoryByMonth() {\n    let retval: Order[][] = []\n    let history = this.getOrderHistory()\n    let i: number = 0\n    this.sortOrdersByDate(history)\n\n    history.forEach(order => {\n      if (retval.length === 0) {\n        retval.push([order])\n      }\n      else if (order.timestamp.getMonth() === retval[i][0].timestamp.getMonth()\n        && order.timestamp.getFullYear() === retval[i][0].timestamp.getFullYear()) {\n        retval[i].push(order)\n      }\n      else {\n        retval.push([order])\n        i += 1\n      }\n    });\n    return retval.reverse()\n  }\n\n  /**\n   * Reshapes an order list to a list of order lists by month\n   * @param orderList The list of orders\n   * @returns List of order lists by month\n   */\n  sortOrderListByMonth(orderList: Order[]) {\n    let retval: Order[][] = []\n    let i: number = 0\n    this.sortOrdersByDate(orderList)\n\n    orderList.forEach(order => {\n      if (retval.length === 0) {\n        retval.push([order])\n      }\n      else if (order.timestamp.getMonth() === retval[i][0].timestamp.getMonth()\n        && order.timestamp.getFullYear() === retval[i][0].timestamp.getFullYear()) {\n        retval[i].push(order)\n      }\n      else {\n        retval.push([order])\n        i += 1\n      }\n    });\n    return retval\n  }\n\n  /**\n   * Returns a list containing the number of orders by month\n   * @returns List of numbers of orders by month\n   */\n  getNumOrderByMonth() {\n    let retval: TimestampedOrders[] = []\n    let history = this.orderHistoryByMonth()\n    history.forEach(orderList => {\n      retval.push({\n        \"orders\": orderList.length,\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'})\n      })\n    });\n    return retval\n  }\n\n  /**\n   * Returns a list of the number of item occurences by month\n   * @param itemName The name of the item to query\n   */\n  getItemDemandByMonth(itemName: string) {\n    let retval: TimestampedItems[] = []\n    let history = this.orderHistoryByMonth()\n    history.forEach(orderList => {\n      let sum: number = 0\n      orderList.forEach(order => {\n        sum += this.getNumItemOccurrences(order.items, itemName)\n      });\n      retval.push({\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'}),\n        \"items\": sum\n      })\n    })\n    return retval\n  }\n\n  /**\n   * Returns a list of timestamped items within a date range\n   * @param itemName The name of the item to search for\n   * @param start The start date of the range\n   * @param end The end date of the range\n   * @returns List of timestamped items\n   */\n  getItemDemandInRange(itemName:string, start:Date, end:Date) {\n    let retval: TimestampedItems[] = []\n    let history = this.getOrderHistory()\n\n    let cut = this.getOrdersInDateRange(history, start, end)\n    let cutReshaped = this.sortOrderListByMonth(cut)\n\n    cutReshaped.forEach(orderList => {\n      let sum: number = 0\n      orderList.forEach(order => {\n        sum += this.getNumItemOccurrences(order.items, itemName)\n      });\n      retval.push({\n        \"month\": orderList[0].timestamp.toLocaleString('default', {month: 'long', year: 'numeric'}),\n        \"items\": sum\n      })\n    })\n    return retval\n  }\n\n  /**\n   * Returns the list of orders within a given range\n   * @param orderList The list of orders to parse\n   * @param start The start date of the range\n   * @param end The end date of the range\n   * @returns The list of orders falling within the range\n   */\n  getOrdersInDateRange(orderList: Order[], start: Date, end: Date) {\n    let retval: Order[] = []\n    orderList.forEach(order => {\n      if (order.timestamp.getTime() >= start.getTime() && order.timestamp.getTime()  {\n        i++\n        a += i * element\n        b += i\n        c += element\n        d += i ** 2\n      });\n\n      return (n * (a) - b * c) / (n * d - (b ** 2))\n    }\n  }\n\n  //FORECASTING AND PREDICTION FUNCTIONS\n\n  /**\n   * Computes the current month order demand percent difference to previous year order demand\n   * @returns The percent difference in current year order demand to previous year order demand\n   */\n  prevYearDiff() {\n    let history = this.getOrderHistory()\n    let t2 = new Date()\n    let t1 = this.calcPrevDate(t2, 1)\n    let t3 = this.calcPrevDate(t2, 13)\n    let t4 = this.calcPrevDate(t2, 12)\n    let period1 = this.getOrdersInDateRange(history, t1, t2)\n    let period2 = this.getOrdersInDateRange(history, t3, t4)\n\n    if (period2.length == 0) {\n      return 0\n    }\n\n    return (period1.length - period2.length) / period2.length\n  }\n\n  /**\n   * Computes the current month item demand percent difference compared to previous year\n   * @param itemName The name of the item to parse\n   * @returns The percent difference of current to previous year item demand\n   */\n  prevYearItemDiff(itemName: string) {\n    let history = this.getOrderHistory()\n    let t2 = new Date()\n    let t1 = this.calcPrevDate(t2, 1)\n    let t3 = this.calcPrevDate(t2, 13)\n    let t4 = this.calcPrevDate(t2, 12)\n    let period1 = this.getOrdersInDateRange(history, t1, t2)\n    let period2 = this.getOrdersInDateRange(history, t3, t4)\n\n    let currentDemand = this.getNumItemOccurrences(this.getItemsFromOrders(period1), itemName)\n    let previousDemand = this.getNumItemOccurrences(this.getItemsFromOrders(period2), itemName)\n\n    if (previousDemand == 0) {\n      return 0\n    }\n\n    return (currentDemand - previousDemand) / previousDemand\n  }\n\n  /**\n   * Returns The linear regression of total order frequency trend on a monthly basis for n months\n   * @param n The number of months n to compute the linear regression on\n   * @returns A trend, positive or negative, corresponding to the desired period\n   */\n  getXMonthTrend(n: number): number {\n    let history = this.getOrderHistory()\n    let now = new Date()\n    let then = this.calcPrevDate(now, n)\n    let cut = this.getOrdersInDateRange(history, then, now)\n    let i: number = 0\n\n    let buckets: number[] = []\n    let curMonth: number = 0\n\n    cut.forEach(order => {\n      if (buckets.length == 0) {\n        buckets = [1]\n        curMonth = order.timestamp.getMonth()\n      }\n      else if (order.timestamp.getMonth() == curMonth) {\n        buckets[i] += 1\n      }\n      else {\n        buckets.push(1)\n        curMonth = order.timestamp.getMonth()\n        i++\n      }\n    });\n\n    // Negation a result of most recent months occurring at front of array\n    return -this.calcLinearRegression(buckets)\n  }\n\n  /**\n   * Returns The linear regression of item frequency trend on a monthly basis for n months\n   * @param n The number of months n to compute the linear regression on\n   * @param itemName The name of the item to parse for\n   * @returns A trend, positive or negative, corresponding to the desired period\n   */\n  getXMonthItemTrend(n: number, itemName: string): number {\n    let history = this.getOrderHistory()\n    let now = new Date()\n    let then = this.calcPrevDate(now, n)\n    let cut = this.getOrdersInDateRange(history, then, now)\n    let i: number = 0\n\n    let buckets: number[] = []\n    let curMonth: number = 0\n\n    cut.forEach(order => {\n      if (buckets.length == 0) {\n        buckets = [this.getNumItemOccurrences(order.items, itemName)]\n        curMonth = order.timestamp.getMonth()\n      }\n      else if (order.timestamp.getMonth() == curMonth) {\n        buckets[i] += this.getNumItemOccurrences(order.items, itemName)\n      }\n      else {\n        buckets.push(this.getNumItemOccurrences(order.items, itemName))\n        curMonth = order.timestamp.getMonth()\n        i++\n      }\n    });\n    // Negation a result of most recent months occurring at front of array\n    return -this.calcLinearRegression(buckets)\n  }\n\n  /**\n   * Computes the 1 Dimensional Convolution of an array with a kernel\n   * @note Uses average padding\n   * @param array The array to be convolved\n   * @param kernel The kernel to convolve with\n   * @param norm The normalization factor of the convolution\n   * @returns The result of the convolution, an array of numbers\n   */\n  convolve1D(array: number[], kernel: number[], norm: number): number[] {\n    let copy = []\n    let retval = []\n    let avg = 0\n\n    array.forEach(num => {\n      copy.push(num)\n      avg += num\n    });\n\n    avg /= array.length\n    let paddingNum = (kernel.length / 2) | 0\n\n    for (let i = 0; i  {\n      demandHist.push(element.orders)\n    })\n    return this.convolve1D(demandHist, [-1, -2, 0, 2, 1], 6)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementPage.html":{"url":"components/UserManagementPage.html","title":"component - UserManagementPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                styleUrls\n                ./user-management.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-management.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                length\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                pantryId\n                            \n                            \n                                records\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                makeAdmin\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                removeAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, alertController: AlertController, firebaseService: FirebaseService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.page.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        makeAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeAdmin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-management/user-management.page.ts:63\n                \n            \n\n\n            \n                \n                    Calls the firebase service to promote a user. Then updates user perms on the table\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user to promote\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-management/user-management.page.ts:42\n                \n            \n\n\n            \n                \n                    Retreives a pantry's users and intializes the table data\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAdmin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-management/user-management.page.ts:75\n                \n            \n\n\n            \n                \n                    Calls the firebase service to demote a user. Then updates user perms on the table.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user to demote\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatMenuTrigger)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['email', 'permissions', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [5, 10, 25, 100]\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pantryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        records\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { User } from '../../../../globalModels/user';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AlertController } from '@ionic/angular';\nimport { FirebaseService } from '../services/firebase.service';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.page.html',\n  styleUrls: ['./user-management.page.scss'],\n})\nexport class UserManagementPage implements OnInit {\n\n  displayedColumns: string[] = ['email', 'permissions', 'actions']\n  records: MatTableDataSource\n  length: number = 0\n  pageSize = 5\n  pageSizeOptions: number[] = [5, 10, 25, 100]\n  pantryId = ''\n\n  @ViewChild(MatPaginator) paginator: MatPaginator\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger\n\n  constructor(\n    public dialog: MatDialog,\n    private alertController: AlertController,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n  ) {\n\n  }\n\n  /**\n   * Retreives a pantry's users and intializes the table data\n   */\n  async ngOnInit() {\n    try {\n      this.pantryId = this.firebaseService.getPantryId()\n      let data = await this.firebaseService.getUsers()\n      this.records = new MatTableDataSource(data)\n      this.length = this.records.data.length\n      this.records.paginator = this.paginator\n      this.records.sort = this.sort\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n    // for (let d of data) {\n    //   console.log(d)\n    // }\n  }\n\n  /**\n   * Calls the firebase service to promote a user. Then updates user perms on the table\n   * @param user user to promote\n   */\n  async makeAdmin(user: User) {\n    await this.firebaseService.promoteUser(user.uid).then(async () => {\n      console.log('getPerms')\n      user.perms = await this.firebaseService.getPerms(user)\n      console.log(user.perms)\n    })\n  }\n\n  /**\n   * Calls the firebase service to demote a user. Then updates user perms on the table.\n   * @param user user to demote\n   */\n  async removeAdmin(user: User) {\n    await this.firebaseService.demoteUser(user.uid).then(async () => {\n      user.perms = await this.firebaseService.getPerms(user)\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    User Management\n  \n\n\n\n    \n      \n        Email\n        {{element.email}}\n      \n      \n        Permissions\n        \n          {{element.perms.admin === true && element.perms.pantry == pantryId ? 'Admin' : 'Not Admin'}}\n        \n      \n      \n        Actions\n        \n          \n                      \n          \n          \n            \n              Grant Admin Access\n            \n            \n              Revoke Admin Access\n            \n          \n        \n      \n\n      \n      \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./user-management.page.scss\n                \n                .table-container{\n    height: 100vh\n}\n\n\ntable {\n    width: 100%;\n}\n\n.mat-cell {\n    width: 40%;\n}\n  \n.mat-column-gender {\n    width: 20%;\n}\n\nth.mat-sort-header-sorted {\n    color: black;\n}\n  \n\n.mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.actions {\n    fill: black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      User Management                    Email        {{element.email}}                    Permissions                  {{element.perms.admin === true && element.perms.pantry == pantryId ? \\'Admin\\' : \\'Not Admin\\'}}                            Actions                                                                                      Grant Admin Access                                      Revoke Admin Access                                                            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserManagementPageModule.html":{"url":"modules/UserManagementPageModule.html","title":"module - UserManagementPageModule","body":"\n                   \n\n\n\n\n    Modules\n    UserManagementPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserManagementPageModule\n\n\n\ncluster_UserManagementPageModule_declarations\n\n\n\ncluster_UserManagementPageModule_imports\n\n\n\n\nUserManagementPage\n\nUserManagementPage\n\n\n\nUserManagementPageModule\n\nUserManagementPageModule\n\nUserManagementPageModule -->\n\nUserManagementPage->UserManagementPageModule\n\n\n\n\n\nUserManagementPageRoutingModule\n\nUserManagementPageRoutingModule\n\nUserManagementPageModule -->\n\nUserManagementPageRoutingModule->UserManagementPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user-management/user-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserManagementPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserManagementPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserManagementPageRoutingModule } from './user-management-routing.module';\n\nimport { UserManagementPage } from './user-management.page';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserManagementPageRoutingModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDialogModule,\n  ],\n  declarations: [UserManagementPage]\n})\nexport class UserManagementPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserManagementPageRoutingModule.html":{"url":"modules/UserManagementPageRoutingModule.html","title":"module - UserManagementPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserManagementPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user-management/user-management-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserManagementPage } from './user-management.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserManagementPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserManagementPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOrderDialog.html":{"url":"components/ViewOrderDialog.html","title":"component - ViewOrderDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOrderDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-management/order-management.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                view-order-dialog\n            \n\n\n\n\n            \n                templateUrl\n                view-order-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Order)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-management/order-management.page.ts:207\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Order\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(status: OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:218\n                \n            \n\n\n            \n                \n                    Converts the numerical order status to the coresponding string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        OrderStatus to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        String representaion of OrderStatus\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order-management/order-management.page.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/order-management/order-management.page.ts:208\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Order } from '../../../../globalModels/order';\nimport { FoodItem } from '../../../../globalModels/foodItem';\nimport { OrderStatus } from '../../../../globalModels/orderStatus';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { AlertController } from '@ionic/angular';\nimport { Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { Observable, from } from 'rxjs';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  selector: 'app-order-management',\n  templateUrl: './order-management.page.html',\n  styleUrls: ['./order-management.page.scss'],\n})\n\nexport class OrderManagementPage implements AfterViewInit {\n\n  displayedColumns: string[] = ['timestamp', 'id', 'status', 'actions'];\n  records: MatTableDataSource = new MatTableDataSource([]);\n\n  length: number = 0;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  @ViewChild(MatTable, { static: true }) table: MatTable;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatMenuTrigger) actions: MatMenuTrigger;\n  constructor(\n    public dialog: MatDialog,\n    private firebase: FirebaseService,\n    private alertController: AlertController,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async ionViewWillEnter() {\n\n  }\n\n  /**\n   * Retrieves orders from the DB and initalizes table.\n   */\n  async ngAfterViewInit() {\n    try {\n      let orders = await this.firebase.getOrders()\n      // orders.sort(function(a, b){\n      //   return b.timestamp.getDate() - a.timestamp.getDate()\n      // })\n      this.records.data = orders\n      this.length = this.records.data.length\n      this.records.paginator = this.paginator;\n      this.records.sort = this.sort;\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not retrieve data. Please try again later.', ['Ok'])\n    }\n    \n  }\n\n\n  /**\n   * Updates the table based on the value in the filter input\n   * @param event Event emited by filter changing\n   */\n  updateFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.records.filter = filterValue.trim().toLowerCase();\n\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Removes an order from the table\n   * @param order Order to be removed\n   */\n  removeItem(order: Order) {\n    //find the index from id\n    let removed = this.records.data.splice(this.records.data.indexOf(order), 1)\n    if (this.records.paginator) {\n      this.records.paginator.firstPage();\n    }\n    this.records._updateChangeSubscription();\n  }\n\n  /**\n   * Opens an alert for the user for confirm if they want to remove an order\n   * @param order Order to be removed\n   */\n  async openAlert(order: Order) {\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Are you sure you want to remove this item?',\n      buttons: [{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => { }\n      },\n      {\n        text: 'Delete Item',\n        role: 'confirm',\n        handler: () => {\n          this.removeItem(order)\n        }\n      }],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Opens the edit dialog\n   * @param order Order to edit\n   */\n  openEditDialog(order: Order) {\n    const dialogRef = this.dialog.open(EditOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n\n  /**\n   * Opens the order view dialog\n   * @param order Order to view\n   */\n  openViewDialog(order: Order) {\n    const dialogRef = this.dialog.open(ViewOrderDialog, { restoreFocus: false, data: order })\n    dialogRef.afterClosed().subscribe(() => {\n      this.actions.focus()\n      this.records._updateChangeSubscription();\n    });\n  }\n}\n\n\n@Component({\n  selector: 'edit-order-dialog',\n  templateUrl: 'edit-order-dialog.html'\n})\n\nexport class EditOrderDialog implements OnInit {\n  values = Object.values(OrderStatus).filter((v) => isNaN(Number(v)))\n  enumvals = Object.values(OrderStatus).filter((v) => !isNaN(Number(v)))\n  value = this.getEnumKey(this.data.status)\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order,\n    private firebaseService: FirebaseService,\n    private alertService: AlertService\n    ) { }\n\n  ngOnInit() {\n\n    // console.log(this.values)\n    // console.log(this.enumvals)\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getEnumKey(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n\n  /**\n   * Saves the changes made to an order in the DB (mainly order status)\n   * @param data Order to update in the DB\n   */\n  async saveOrder(data: Order) {\n    console.log(this.value)\n    data.status = this.values.indexOf(this.value) + 1\n    console.log(data.status)\n    try {\n      this.firebaseService.updateOrderStatus(data, data.status)\n    } catch (err) {\n      this.alertService.presentAlert('Error', 'Could not update order status. Please try again later.', ['Ok'])\n    }\n    \n  }\n}\n\n\n@Component({\n  selector: 'view-order-dialog',\n  templateUrl: 'view-order-dialog.html'\n})\nexport class ViewOrderDialog implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Order) { }\n  ngOnInit() {\n\n  }\n\n  /**\n   * Converts the numerical order status to the coresponding string\n   * @param status OrderStatus to convert\n   * @returns String representaion of OrderStatus\n   */\n  getStatus(status: OrderStatus) {\n    return OrderStatus[status]\n  }\n}\n    \n\n    \n        Order Number: {{data.id}}\n\n    \n        General\n        Order Number: {{data.id}}\n        Timestamp: {{data.timestamp.toLocaleString()}}\n        Order Status: {{getStatus(data.status)}}\n        \n        \n        \n            \n                Order Contents:\n                \n                    \n                        \n                            \n                                {{item.name}}, {{item.quantity}}\n                            \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        \n            Close\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Order Number: {{data.id}}            General        Order Number: {{data.id}}        Timestamp: {{data.timestamp.toLocaleString()}}        Order Status: {{getStatus(data.status)}}                                                    Order Contents:                                                                                                                        {{item.name}}, {{item.quantity}}                                                                                                                                                                    Close            '\n    var COMPONENTS = [{'name': 'AddDialog', 'selector': 'add-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditDetailsDialog', 'selector': 'edit-details-dialog'},{'name': 'EditDialog', 'selector': 'edit-dialog'},{'name': 'EditOrderDialog', 'selector': 'edit-order-dialog'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-password'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InventoryManagementPage', 'selector': 'inventory-management'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'OrderManagementPage', 'selector': 'app-order-management'},{'name': 'PantryStatisticsPage', 'selector': 'app-pantry-statistics'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'UserManagementPage', 'selector': 'app-user-management'},{'name': 'ViewOrderDialog', 'selector': 'view-order-dialog'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewOrderDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/forgot-password/forgot-password.page.ts\n            \n            component\n            ForgotPasswordPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/home.page.ts\n            \n            component\n            HomePage\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/inventory-management/inventory-management.page.ts\n            \n            component\n            AddDialog\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/inventory-management/inventory-management.page.ts\n            \n            component\n            EditDialog\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/inventory-management/inventory-management.page.ts\n            \n            component\n            InventoryManagementPage\n            \n                33 %\n                (7/21)\n            \n        \n        \n            \n                \n                src/app/login/login.module.ts\n            \n            interface\n            Pantry\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/order-management/order-management.page.ts\n            \n            component\n            EditOrderDialog\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/order-management/order-management.page.ts\n            \n            component\n            OrderManagementPage\n            \n                33 %\n                (7/21)\n            \n        \n        \n            \n                \n                src/app/order-management/order-management.page.ts\n            \n            component\n            ViewOrderDialog\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/pantry-statistics/pantry-statistics.page.ts\n            \n            component\n            PantryStatisticsPage\n            \n                33 %\n                (8/24)\n            \n        \n        \n            \n                \n                src/app/pantry-statistics/pantry-statistics.page.ts\n            \n            interface\n            TimestampedItems\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pantry-statistics/pantry-statistics.page.ts\n            \n            interface\n            TimestampedOrders\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/profile/profile.page.ts\n            \n            component\n            EditDetailsDialog\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/profile/profile.page.ts\n            \n            component\n            ProfilePage\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/services/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            variable\n            auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            variable\n            functions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/firebase.service.ts\n            \n            injectable\n            FirebaseService\n            \n                81 %\n                (18/22)\n            \n        \n        \n            \n                \n                src/app/services/firebase.service.ts\n            \n            variable\n            db\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/firebase.service.ts\n            \n            variable\n            functions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/forecast.service.ts\n            \n            injectable\n            ForecastService\n            \n                82 %\n                (23/28)\n            \n        \n        \n            \n                \n                src/app/services/forecast.service.ts\n            \n            interface\n            TimestampedItems\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/forecast.service.ts\n            \n            interface\n            TimestampedOrders\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.page.ts\n            \n            component\n            UserManagementPage\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            analytics\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            authentication\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            db\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            firebaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.4\n        \n            @angular/cdk : ^15.2.3\n        \n            @angular/common : ^15.2.4\n        \n            @angular/core : ^15.2.4\n        \n            @angular/forms : ^15.2.4\n        \n            @angular/material : ^15.2.3\n        \n            @angular/platform-browser : ^15.2.4\n        \n            @angular/platform-browser-dynamic : ^15.2.4\n        \n            @angular/router : ^15.2.4\n        \n            @capacitor/app : 4.1.1\n        \n            @capacitor/core : 4.6.3\n        \n            @capacitor/haptics : 4.1.0\n        \n            @capacitor/keyboard : 4.1.1\n        \n            @capacitor/status-bar : 4.1.1\n        \n            @ionic/angular : ^6.1.9\n        \n            @swimlane/ngx-datatable : ^20.1.0\n        \n            firebase : ^9.17.1\n        \n            ionicons : ^6.0.3\n        \n            ng2-charts : ^4.1.1\n        \n            ngx-color-picker : ^14.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ForgotPasswordPageModule\n\n\n\ncluster_ForgotPasswordPageModule_declarations\n\n\n\ncluster_ForgotPasswordPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_InventoryManagementPageModule\n\n\n\ncluster_InventoryManagementPageModule_declarations\n\n\n\ncluster_InventoryManagementPageModule_imports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_OrderManagementPageModule\n\n\n\ncluster_OrderManagementPageModule_declarations\n\n\n\ncluster_OrderManagementPageModule_imports\n\n\n\ncluster_PantryStatisticsPageModule\n\n\n\ncluster_PantryStatisticsPageModule_declarations\n\n\n\ncluster_PantryStatisticsPageModule_imports\n\n\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_UserManagementPageModule\n\n\n\ncluster_UserManagementPageModule_declarations\n\n\n\ncluster_UserManagementPageModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\n\n\nForgotPasswordPageModule\n\nForgotPasswordPageModule\n\nForgotPasswordPageModule -->\n\nForgotPasswordPage->ForgotPasswordPageModule\n\n\n\n\n\nForgotPasswordPageRoutingModule\n\nForgotPasswordPageRoutingModule\n\nForgotPasswordPageModule -->\n\nForgotPasswordPageRoutingModule->ForgotPasswordPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nAddDialog\n\nAddDialog\n\n\n\nInventoryManagementPageModule\n\nInventoryManagementPageModule\n\nInventoryManagementPageModule -->\n\nAddDialog->InventoryManagementPageModule\n\n\n\n\n\nEditDialog\n\nEditDialog\n\nInventoryManagementPageModule -->\n\nEditDialog->InventoryManagementPageModule\n\n\n\n\n\nInventoryManagementPage\n\nInventoryManagementPage\n\nInventoryManagementPageModule -->\n\nInventoryManagementPage->InventoryManagementPageModule\n\n\n\n\n\nInventoryManagementPageRoutingModule\n\nInventoryManagementPageRoutingModule\n\nInventoryManagementPageModule -->\n\nInventoryManagementPageRoutingModule->InventoryManagementPageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nEditOrderDialog\n\nEditOrderDialog\n\n\n\nOrderManagementPageModule\n\nOrderManagementPageModule\n\nOrderManagementPageModule -->\n\nEditOrderDialog->OrderManagementPageModule\n\n\n\n\n\nOrderManagementPage\n\nOrderManagementPage\n\nOrderManagementPageModule -->\n\nOrderManagementPage->OrderManagementPageModule\n\n\n\n\n\nViewOrderDialog\n\nViewOrderDialog\n\nOrderManagementPageModule -->\n\nViewOrderDialog->OrderManagementPageModule\n\n\n\n\n\nOrderManagementPageRoutingModule\n\nOrderManagementPageRoutingModule\n\nOrderManagementPageModule -->\n\nOrderManagementPageRoutingModule->OrderManagementPageModule\n\n\n\n\n\nPantryStatisticsPage\n\nPantryStatisticsPage\n\n\n\nPantryStatisticsPageModule\n\nPantryStatisticsPageModule\n\nPantryStatisticsPageModule -->\n\nPantryStatisticsPage->PantryStatisticsPageModule\n\n\n\n\n\nPantryStatisticsPageRoutingModule\n\nPantryStatisticsPageRoutingModule\n\nPantryStatisticsPageModule -->\n\nPantryStatisticsPageRoutingModule->PantryStatisticsPageModule\n\n\n\n\n\nEditDetailsDialog\n\nEditDetailsDialog\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nEditDetailsDialog->ProfilePageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nUserManagementPage\n\nUserManagementPage\n\n\n\nUserManagementPageModule\n\nUserManagementPageModule\n\nUserManagementPageModule -->\n\nUserManagementPage->UserManagementPageModule\n\n\n\n\n\nUserManagementPageRoutingModule\n\nUserManagementPageRoutingModule\n\nUserManagementPageModule -->\n\nUserManagementPageRoutingModule->UserManagementPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        27 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForgotPasswordPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForgotPasswordPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InventoryManagementPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InventoryManagementPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderManagementPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderManagementPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PantryStatisticsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PantryStatisticsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserManagementPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserManagementPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            analytics   (src/.../main.ts)\n                        \n                        \n                            app   (src/.../main.ts)\n                        \n                        \n                            auth   (src/.../auth.service.ts)\n                        \n                        \n                            authentication   (src/.../main.ts)\n                        \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            db   (src/.../main.ts)\n                        \n                        \n                            db   (src/.../firebase.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            firebaseConfig   (src/.../main.ts)\n                        \n                        \n                            functions   (src/.../auth.service.ts)\n                        \n                        \n                            functions   (src/.../firebase.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        analytics\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getAnalytics(app)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : initializeApp(firebaseConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authentication\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getAuth(app)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFirestore(app)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firebaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.firebaseConfig\n                    \n                \n\n\n        \n    \n\n    src/app/services/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : authentication\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        functions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFunctions()\n                    \n                \n\n\n        \n    \n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'adminApp',\n  webDir: 'www',\n  bundledWebRuntime: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/services/firebase.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFirestore()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        functions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFunctions()\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n\n  firebaseConfig: {\n    apiKey: \"AIzaSyAKaIr2_B6rLny9ctiI-e4EGa5wuCycgJY\",\n    authDomain: \"foodpantry-64c40.firebaseapp.com\",\n    projectId: \"foodpantry-64c40\",\n    storageBucket: \"foodpantry-64c40.appspot.com\",\n    messagingSenderId: \"393456523030\",\n    appId: \"1:393456523030:web:1d160ece617e4e8eaf2237\",\n    measurementId: \"G-P8H232S2F7\"\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n\n  firebaseConfig: {\n    apiKey: \"AIzaSyAKaIr2_B6rLny9ctiI-e4EGa5wuCycgJY\",\n    authDomain: \"foodpantry-64c40.firebaseapp.com\",\n    projectId: \"foodpantry-64c40\",\n    storageBucket: \"foodpantry-64c40.appspot.com\",\n    messagingSenderId: \"393456523030\",\n    appId: \"1:393456523030:web:1d160ece617e4e8eaf2237\",\n    measurementId: \"G-P8H232S2F7\"\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
